{
  "timestamp": "2022-09-05T14:32:12",
  "compiler": {
    "name": "@stencil/core",
    "version": "2.16.1",
    "typescriptVersion": "4.5.4"
  },
  "components": [
    {
      "filePath": "./src/liquid/components/ld-accordion/ld-accordion.tsx",
      "encapsulation": "shadow",
      "tag": "ld-accordion",
      "readme": "---\neleventyNavigation:\n  key: Accordion\n  parent: Components\nlayout: layout.njk\ntitle: Accordion\npermalink: components/ld-accordion/\ntags:\n  - squeezebox\n  - garmon\n  - bandoneon\n---\n\n\n# ld-accordion\n\nThe `ld-accordion` component hides content in expandable sections and thereby helps to place content in a space-saving manner.\n\n---\n\n## Usage\n\n### Default\n\n{% example %}\n<ld-accordion>\n  <ld-accordion-section expanded>\n    <ld-accordion-toggle>Fruits</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n  <ld-accordion-section>\n    <ld-accordion-toggle>Vegetables</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n  <ld-accordion-section>\n    <ld-accordion-toggle disabled>Nuts</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n</ld-accordion>\n{% endexample %}\n\n### Rounded\n\nUse the `rounded` prop to apply small border-radii to the accordion sections.\n\n{% example %}\n<ld-accordion rounded>\n  <ld-accordion-section expanded>\n    <ld-accordion-toggle>Fruits</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n  <ld-accordion-section>\n    <ld-accordion-toggle>Vegetables</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n  <ld-accordion-section>\n    <ld-accordion-toggle disabled>Nuts</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n</ld-accordion>\n{% endexample %}\n\n### Dark\n\nUse this mode on a white background.\n\n{% example '{ \"background\": \"light\" }' %}\n<ld-accordion rounded tone=\"dark\">\n  <ld-accordion-section>\n    <ld-accordion-toggle>Fruits</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n  <ld-accordion-section>\n    <ld-accordion-toggle>Vegetables</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n  <ld-accordion-section>\n    <ld-accordion-toggle disabled>Nuts</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n</ld-accordion>\n{% endexample %}\n\n### On brand color\n\nUse this mode on backgrounds with brand color.\n\n{% example '{ \"background\": \"brand\", \"hasBorder\": false }' %}\n<ld-accordion rounded brand-color>\n  <ld-accordion-section>\n    <ld-accordion-toggle>Fruits</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n  <ld-accordion-section>\n    <ld-accordion-toggle>Vegetables</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n  <ld-accordion-section>\n    <ld-accordion-toggle disabled>Nuts</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n</ld-accordion>\n{% endexample %}\n\n### Single mode\n\nWhen the prop `single` is set, only a single accordion panel can be expanded at a time.  \n\n{% example %}\n<ld-accordion rounded single>\n  <ld-accordion-section>\n    <ld-accordion-toggle>Fruits</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n  <ld-accordion-section>\n    <ld-accordion-toggle>Vegetables</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n  <ld-accordion-section>\n    <ld-accordion-toggle disabled>Nuts</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n</ld-accordion>\n{% endexample %}\n\n### Detached mode\n\nIn `detached` mode there is a small gap between each accordion section element.\n\n{% example %}\n<ld-accordion rounded detached>\n  <ld-accordion-section>\n    <ld-accordion-toggle>Fruits</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-16) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n  <ld-accordion-section>\n    <ld-accordion-toggle>Vegetables</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n  <ld-accordion-section>\n    <ld-accordion-toggle disabled>Nuts</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n</ld-accordion>\n{% endexample %}\n\n### Split toggle\n\nThe `split` prop allows you to separate an accordion toggle in two click areas. The accordion trigger on the right will still be responsible for toggling the expansion of the accordion section. The click area on the left side of the accordion can be used for your individual use case. You can listen to [click events](./ld-accordion-toggle/#events) on both areas. \n\n{% example %}\n<ld-accordion rounded>\n  <ld-accordion-section>\n    <ld-accordion-toggle split>Fruits</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-16) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n  <ld-accordion-section>\n    <ld-accordion-toggle split>Vegetables</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n  <ld-accordion-section>\n    <ld-accordion-toggle split disabled>Nuts</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n</ld-accordion>\n{% endexample %}\n\n## Events\n\nYou can listen for several events on the `ld-accordion` component and its subcomponents. Please refer to each subcomponent's documentation for details on all available events. The following example demonstrates how you can listen to the `ldaccordionchange` event which is emitted each time a (non-disabled) section expands or collapses.\n\n{% example %}\n<ld-accordion rounded id=\"accordion-events\">\n  <ld-accordion-section>\n    <ld-accordion-toggle>Fruits</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-16) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n  <ld-accordion-section>\n    <ld-accordion-toggle>Vegetables</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n  <ld-accordion-section>\n    <ld-accordion-toggle disabled>Nuts</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n</ld-accordion>\n\n<script>\n  document.getElementById('accordion-events').addEventListener('ldaccordionchange', ev => {\n    window.alert(`${ev.detail ? 'Expanding' : 'Collapsing'} \"${ev.target.querySelector('ld-accordion-toggle').textContent}\".`)\n  })\n</script>\n{% endexample %}\n\n## Expand and collapse accordion sections programmatically\n\nYou can programmatically expand or collapse an accordion section by toggling the `expanded` prop on the `ld-accordion-section` element:\n\n{% example '{ \"stacked\": true }' %}\n<ld-label>\n  Toggle \"Vegetables\"\n  <ld-toggle id=\"vegetables-toggle\">Toggle vegetables tab</ld-toggle>\n</ld-label>\n\n<ld-accordion rounded id=\"accordion-programmatic\">\n  <ld-accordion-section>\n    <ld-accordion-toggle>Fruits</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-16) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n  <ld-accordion-section>\n    <ld-accordion-toggle>Vegetables</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n  <ld-accordion-section>\n    <ld-accordion-toggle disabled>Nuts</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n</ld-accordion>\n\n<script>\n  const toggleVegetables = document.getElementById('vegetables-toggle')\n  const sectionVegetables = document.querySelector('#accordion-programmatic ld-accordion-section:nth-of-type(2)')\n\n  toggleVegetables.addEventListener('ldinput', ev => {\n    sectionVegetables.expanded = ev.target.checked\n  })\n  sectionVegetables.addEventListener('ldaccordionchange', ev => {\n    toggleVegetables.checked = ev.detail\n  })\n</script>\n{% endexample %}\n\n## Nesting\n\nYou can nest an accordion inside another.\n\n{% example %}\n<ld-accordion>\n  <ld-accordion-section expanded>\n    <ld-accordion-toggle>Fruits</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-accordion tone=\"dark\" style=\"margin: var(--ld-sp-24) var(--ld-accordion-padding-x)\">\n        <ld-accordion-section>\n          <ld-accordion-toggle>Sweet</ld-accordion-toggle>\n          <ld-accordion-panel>\n            <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n          </ld-accordion-panel>\n        </ld-accordion-section>\n        <ld-accordion-section expanded>\n          <ld-accordion-toggle>Sour</ld-accordion-toggle>\n          <ld-accordion-panel>\n            <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n          </ld-accordion-panel>\n        </ld-accordion-section>\n        <ld-accordion-section>\n          <ld-accordion-toggle>Bitter</ld-accordion-toggle>\n          <ld-accordion-panel>\n            <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n          </ld-accordion-panel>\n        </ld-accordion-section>\n        <ld-accordion-section>\n          <ld-accordion-toggle disabled>Salty</ld-accordion-toggle>\n          <ld-accordion-panel>\n            <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n          </ld-accordion-panel>\n        </ld-accordion-section>\n      </ld-accordion>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n    <ld-accordion-section>\n      <ld-accordion-toggle>Vegetables</ld-accordion-toggle>\n      <ld-accordion-panel>\n        <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n      </ld-accordion-panel>\n    </ld-accordion-section>\n  <ld-accordion-section>\n    <ld-accordion-toggle disabled>Nuts</ld-accordion-toggle>\n    <ld-accordion-panel>\n      <ld-typo variant=\"body-s\" style=\"padding: var(--ld-sp-12) var(--ld-accordion-padding-x)\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Dolor quisque lectus morbi mauris, tortor dictum elementum. Morbi volutpat senectus lacus sapien viverra quis volutpat. Mauris sed lacus ipsum dictumst egestas. Elit cras at interdum id porta magnis accumsan sit pulvinar. Mi dignissim gravida venenatis, nibh dignissim tincidunt enim. Lectus diam lobortis pharetra amet et nec. Est vitae vitae porttitor varius ac. Faucibus enim augue ac sollicitudin massa. Ipsum quis elementum amet tristique. A felis nunc iaculis maecenas id.</ld-typo>\n    </ld-accordion-panel>\n  </ld-accordion-section>\n</ld-accordion>\n{% endexample %}\n",
      "docs": "---\neleventyNavigation:\n  key: Accordion\n  parent: Components\nlayout: layout.njk\ntitle: Accordion\npermalink: components/ld-accordion/\ntags:\n  - squeezebox\n  - garmon\n  - bandoneon\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "brandColor",
          "type": "boolean",
          "mutable": false,
          "attr": "brand-color",
          "reflectToAttr": false,
          "docs": "Style the accordion so that it looks good on the primary color of the current theme.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "detached",
          "type": "boolean",
          "mutable": false,
          "attr": "detached",
          "reflectToAttr": false,
          "docs": "Sets a small gap between each accordion section.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "rounded",
          "type": "boolean",
          "mutable": false,
          "attr": "rounded",
          "reflectToAttr": false,
          "docs": "Applies rounded corners.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "single",
          "type": "boolean",
          "mutable": false,
          "attr": "single",
          "reflectToAttr": false,
          "docs": "When set to true, an open accordion element closes, if anthorer one opens.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "tone",
          "type": "\"dark\"",
          "mutable": false,
          "attr": "tone",
          "reflectToAttr": false,
          "docs": "Use `'dark'` on white backgrounds. Default is a light tone.\nTakes only effect in conjunction with neutral mode.",
          "docsTags": [],
          "values": [
            {
              "value": "dark",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [
        {
          "event": "ldaccordionchange",
          "capture": false,
          "passive": true
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "ld-sidenav-accordion"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "ld-sidenav-accordion": [
          "ld-accordion"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-accordion/ld-accordion-panel/ld-accordion-panel.tsx",
      "encapsulation": "shadow",
      "tag": "ld-accordion-panel",
      "readme": "---\neleventyNavigation:\n  key: Accordion Panel\n  parent: Accordion\nlayout: layout.njk\ntitle: Accordion Panel\npermalink: components/ld-accordion/ld-accordion-panel/\n---\n\n# ld-accordion-panel\n\nThe `ld-accordion-panel` component is a subcomponent for `ld-accordion`.\n\nPlease refer to the [`ld-accordion` documentation](components/ld-accordion) for usage examples.\n\n---\n",
      "docs": "---\neleventyNavigation:\n  key: Accordion Panel\n  parent: Accordion\nlayout: layout.njk\ntitle: Accordion Panel\npermalink: components/ld-accordion/ld-accordion-panel/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "ldaccordionmaxheightchange",
          "detail": "number",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted on accordion panel max-height change.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "content",
          "docs": ""
        }
      ],
      "dependents": [
        "ld-sidenav-accordion"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "ld-sidenav-accordion": [
          "ld-accordion-panel"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-accordion/ld-accordion-section/ld-accordion-section.tsx",
      "encapsulation": "shadow",
      "tag": "ld-accordion-section",
      "readme": "---\neleventyNavigation:\n  key: Accordion Section\n  parent: Accordion\nlayout: layout.njk\ntitle: Accordion Section\npermalink: components/ld-accordion/ld-accordion-section/\n---\n\n\n# ld-accordion-section\n\nThe `ld-accordion-section` component is a subcomponent for `ld-accordion`.\n\nPlease refer to the [`ld-accordion` documentation](components/ld-accordion) for usage examples.\n\n---\n",
      "docs": "---\neleventyNavigation:\n  key: Accordion Section\n  parent: Accordion\nlayout: layout.njk\ntitle: Accordion Section\npermalink: components/ld-accordion/ld-accordion-section/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "expanded",
          "type": "boolean",
          "mutable": true,
          "attr": "expanded",
          "reflectToAttr": false,
          "docs": "Indicates that the accordion section is expanded.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "ldaccordionchange",
          "detail": "boolean",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted on expansion and collapse.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "ld-sidenav-accordion"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "ld-sidenav-accordion": [
          "ld-accordion-section"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-accordion/ld-accordion-toggle/ld-accordion-toggle.tsx",
      "encapsulation": "shadow",
      "tag": "ld-accordion-toggle",
      "readme": "---\neleventyNavigation:\n  key: Accordion Toggle\n  parent: Accordion\nlayout: layout.njk\ntitle: Accordion Toggle\npermalink: components/ld-accordion/ld-accordion-toggle/\n---\n\n# ld-accordion-toggle\n\nThe `ld-accordion-toggle` component is a subcomponent for `ld-accordion`.\n\nPlease refer to the [`ld-accordion` documentation](components/ld-accordion) for usage examples.\n\n---\n",
      "docs": "---\neleventyNavigation:\n  key: Accordion Toggle\n  parent: Accordion\nlayout: layout.njk\ntitle: Accordion Toggle\npermalink: components/ld-accordion/ld-accordion-toggle/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disables the toggle.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "labelTag",
          "type": "\"button\" | \"div\"",
          "mutable": false,
          "attr": "label-tag",
          "reflectToAttr": false,
          "docs": "Tag to be used for the toggle label in split mode.\nThis prop is especially usefull, if you want to place\nyour own focusable element inside the toggle label element.",
          "docsTags": [],
          "default": "'button'",
          "values": [
            {
              "value": "button",
              "type": "string"
            },
            {
              "value": "div",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ldTabindex",
          "type": "number",
          "mutable": false,
          "attr": "ld-tabindex",
          "reflectToAttr": false,
          "docs": "Tab index of the toggle.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "split",
          "type": "boolean",
          "mutable": false,
          "attr": "split",
          "reflectToAttr": false,
          "docs": "Split the toggle in two parts with the second part containing\nthe caret icon and being responsible for expanding / collapsing\nthe accordion panel.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "toggleLabel",
          "type": "string",
          "mutable": false,
          "attr": "toggle-label",
          "reflectToAttr": false,
          "docs": "Used as aria-label value on the toggle trigger element.",
          "docsTags": [],
          "default": "'Toggle'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "focusInner",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "focusInner() => Promise<void>",
          "parameters": [],
          "docs": "Focuses the toggle",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "ldaccordionlabelclick",
          "detail": "undefined",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted on click of the accordion toggle label.",
          "docsTags": []
        },
        {
          "event": "ldaccordiontoggleclick",
          "detail": "undefined",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted on click of the accordion toggle trigger.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "content",
          "docs": ""
        },
        {
          "name": "focusable",
          "docs": ""
        },
        {
          "name": "label",
          "docs": ""
        },
        {
          "name": "label-content",
          "docs": ""
        },
        {
          "name": "toggle",
          "docs": ""
        },
        {
          "name": "trigger",
          "docs": ""
        },
        {
          "name": "trigger-content",
          "docs": ""
        },
        {
          "name": "trigger-icon",
          "docs": ""
        }
      ],
      "dependents": [
        "ld-sidenav-accordion"
      ],
      "dependencies": [
        "ld-icon"
      ],
      "dependencyGraph": {
        "ld-accordion-toggle": [
          "ld-icon"
        ],
        "ld-sidenav-accordion": [
          "ld-accordion-toggle"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-badge/ld-badge.tsx",
      "encapsulation": "shadow",
      "tag": "ld-badge",
      "readme": "---\neleventyNavigation:\n  key: Badge\n  parent: Components\nlayout: layout.njk\ntitle: Badge\npermalink: components/ld-badge/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-badge.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n\n# ld-card\n\n---\n\n## Default\n\n{% example %}\n<ld-badge icon=\"checkmark\"></ld-badge>\n\n<!-- CSS component -->\n\n<span class=\"ld-badge\">\n  <svg class=\"ld-icon\" viewBox=\"0 0 14 14\" fill=\"none\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n</span>\n{% endexample %}\n\n## With custom icon\n\n{% example %}\n<ld-badge>\n  <svg slot=\"icon\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n  </svg>\n</ld-badge>\n\n<!-- CSS component -->\n\n<span class=\"ld-badge\">\n  <svg class=\"ld-icon\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n  </svg>\n</span>\n{% endexample %}\n\n## Different sizes\n\n{% example %}\n<ld-badge icon=\"checkmark\"></ld-badge>\n\n<ld-badge icon=\"checkmark\" size=\"lg\"></ld-badge>\n\n<!-- CSS component -->\n\n<span class=\"ld-badge\">\n  <svg class=\"ld-icon\" viewBox=\"0 0 14 14\" fill=\"none\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n</span>\n\n<span class=\"ld-badge ld-badge--lg\">\n  <svg class=\"ld-icon\" viewBox=\"0 0 14 14\" fill=\"none\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n</span>\n{% endexample %}\n\n## With text\n\n{% example %}\n<ld-badge>Badge</ld-badge>\n\n<ld-badge size=\"lg\">Badge</ld-badge>\n\n<ld-badge icon=\"checkmark\">Badge</ld-badge>\n\n<ld-badge icon=\"checkmark\" size=\"lg\">Badge</ld-badge>\n\n<!-- CSS component -->\n\n<span class=\"ld-badge\">Badge</span>\n\n<span class=\"ld-badge ld-badge--lg\">Badge</span>\n\n<span class=\"ld-badge ld-badge--with-text\">\n  <svg class=\"ld-icon\" viewBox=\"0 0 14 14\" fill=\"none\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n  Badge\n</span>\n\n<span class=\"ld-badge ld-badge--with-text ld-badge--lg\">\n  <svg class=\"ld-icon\" viewBox=\"0 0 14 14\" fill=\"none\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n  Badge\n</span>\n{% endexample %}\n\n## On brand color\n\n{% example '{ \"background\": \"brand\", \"hasBorder\": false }' %}\n<ld-badge brand-color icon=\"checkmark\"></ld-badge>\n\n<ld-badge brand-color>Badge</ld-badge>\n\n<!-- CSS component -->\n\n<span class=\"ld-badge ld-badge--brand-color\">\n  <svg class=\"ld-icon\" viewBox=\"0 0 14 14\" fill=\"none\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n</span>\n\n<span class=\"ld-badge ld-badge--brand-color\">Badge</span>\n{% endexample %}\n\n## Custom color\n\n{% example %}\n<style>\n  .ld-badge--success {\n    --ld-badge-bg-col: var(--ld-thm-success);\n  }\n</style>\n\n<ld-badge class=\"ld-badge--success\" icon=\"checkmark\"></ld-badge>\n\n<ld-badge class=\"ld-badge--success\">Badge</ld-badge>\n\n<!-- CSS component -->\n\n<style>\n  .ld-badge--success {\n    --ld-badge-bg-col: var(--ld-thm-success);\n  }\n</style>\n\n<span class=\"ld-badge ld-badge--success\">\n  <svg class=\"ld-icon\" viewBox=\"0 0 14 14\" fill=\"none\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n</span>\n\n<span class=\"ld-badge ld-badge--success\">Badge</span>\n{% endexample %}\n",
      "docs": "---\neleventyNavigation:\n  key: Badge\n  parent: Components\nlayout: layout.njk\ntitle: Badge\npermalink: components/ld-badge/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-badge.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "brandColor",
          "type": "boolean",
          "mutable": false,
          "attr": "brand-color",
          "reflectToAttr": false,
          "docs": "Defines badge custom color",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "icon",
          "type": "string",
          "mutable": false,
          "attr": "icon",
          "reflectToAttr": false,
          "docs": "Icon name.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "\"lg\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "The size of the badge, translated in rem",
          "docsTags": [],
          "values": [
            {
              "value": "lg",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "icon",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [
        "ld-icon"
      ],
      "dependencyGraph": {
        "ld-badge": [
          "ld-icon"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-bg-cells/ld-bg-cells.tsx",
      "encapsulation": "shadow",
      "tag": "ld-bg-cells",
      "readme": "---\neleventyNavigation:\n  key: Background Cells\n  parent: Components\nlayout: layout.njk\ntitle: Background Cells\npermalink: components/ld-bg-cells/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-bg-cells.css\">\n\n# ld-bg-cells\n\nA background pattern with the Merck cells as additional visual element.\n\n---\n\n## Default\n\n{% example '{ \"hasPadding\": false, \"hasBorder\": false }' %}\n<ld-bg-cells></ld-bg-cells>\n\n<style>\n  ld-bg-cells {\n    aspect-ratio: 16/9;\n  }\n</style>\n\n<!-- CSS component -->\n\n<div class=\"ld-bg-cells\">\n  <div class=\"ld-bg-cells__layer\" style=\"--ld-bg-cells-image:url('/dist/build/assets/hexagon-cell.svg')\"></div>\n</div>\n  \n<style>\n  .ld-bg-cells {\n    aspect-ratio: 16/9;\n  }\n</style>\n{% endexample %}\n\n## Brand cell types\n\n### BioReliance\n\n{% example '{ \"hasPadding\": false, \"hasBorder\": false }' %}\n<ld-bg-cells type=\"bioreliance\"></ld-bg-cells>\n\n<!-- CSS component -->\n\n<div class=\"ld-bg-cells ld-bg-cells--bioreliance\">\n  <div class=\"ld-bg-cells__layer\" style=\"--ld-bg-cells-image:url('/dist/build/assets/bioreliance-cell.svg')\"></div>\n</div>\n\n{% endexample %}\n\n### Millipore\n\n{% example '{ \"hasPadding\": false, \"hasBorder\": false }' %}\n<ld-bg-cells type=\"millipore\"></ld-bg-cells>\n\n<!-- CSS component -->\n\n<div class=\"ld-bg-cells ld-bg-cells--millipore\">\n  <div class=\"ld-bg-cells__layer\" style=\"--ld-bg-cells-image:url('/dist/build/assets/millipore-cell.svg')\"></div>\n</div>\n{% endexample %}\n\n### Milli-Q\n\n{% example '{ \"hasPadding\": false, \"hasBorder\": false }' %}\n<ld-bg-cells type=\"milliq\"></ld-bg-cells>\n\n<!-- CSS component -->\n\n<div class=\"ld-bg-cells ld-bg-cells--milliq\">\n  <div class=\"ld-bg-cells__layer\" style=\"--ld-bg-cells-image:url('/dist/build/assets/milliq-cell.svg')\"></div>\n</div>\n{% endexample %}\n\n### Supelco\n\n{% example '{ \"hasPadding\": false, \"hasBorder\": false }' %}\n<ld-bg-cells type=\"supelco\"></ld-bg-cells>\n\n<!-- CSS component -->\n\n<div class=\"ld-bg-cells ld-bg-cells--supelco\">\n  <div class=\"ld-bg-cells__layer\" style=\"--ld-bg-cells-image:url('/dist/build/assets/supelco-cell.svg')\"></div>\n</div>\n{% endexample %}\n\n### SAFC\n\n{% example '{ \"hasPadding\": false, \"hasBorder\": false }' %}\n<ld-bg-cells type=\"safc\"></ld-bg-cells>\n\n<!-- CSS component -->\n\n<div class=\"ld-bg-cells ld-bg-cells--safc\">\n  <div class=\"ld-bg-cells__layer\" style=\"--ld-bg-cells-image:url('/dist/build/assets/safc-cell.svg')\"></div>\n</div>\n{% endexample %}\n\n### Sigma-Aldrich\n\n{% example '{ \"hasPadding\": false, \"hasBorder\": false }' %}\n<ld-bg-cells type=\"sigma-aldrich\"></ld-bg-cells>\n\n<!-- CSS component -->\n\n<div class=\"ld-bg-cells ld-bg-cells--sigma-aldrich\">\n  <div class=\"ld-bg-cells__layer\" style=\"--ld-bg-cells-image:url('/dist/build/assets/sigma-aldrich-cell.svg')\"></div>\n</div>\n{% endexample %}\n\n## Themable cell types\n\n### Functional\n\n{% example '{ \"hasPadding\": false, \"hasBorder\": false }' %}\n<ld-bg-cells type=\"f\"></ld-bg-cells>\n\n<!-- CSS component -->\n\n<div class=\"ld-bg-cells ld-bg-cells--f\">\n  <div class=\"ld-bg-cells__layer\" style=\"--ld-bg-cells-image:url('/dist/build/assets/f-cell.svg')\"></div>\n</div>\n{% endexample %}\n\n### Synthetic / Hexagon\n\n{% example '{ \"hasPadding\": false, \"hasBorder\": false }' %}\n<ld-bg-cells type=\"hexagon\"></ld-bg-cells>\n\n<!-- CSS component -->\n\n<div class=\"ld-bg-cells ld-bg-cells--hexagon\">\n  <div class=\"ld-bg-cells__layer\" style=\"--ld-bg-cells-image:url('/dist/build/assets/hexagon-cell.svg')\"></div>\n</div>\n{% endexample %}\n\n### Organic\n\n{% example '{ \"hasPadding\": false, \"hasBorder\": false }' %}\n<ld-bg-cells type=\"o\"></ld-bg-cells>\n\n<!-- CSS component -->\n\n<div class=\"ld-bg-cells ld-bg-cells--o\">\n  <div class=\"ld-bg-cells__layer\" style=\"--ld-bg-cells-image:url('/dist/build/assets/o-cell.svg')\"></div>\n</div>\n{% endexample %}\n\n### Plastic / Tile\n\n{% example '{ \"hasPadding\": false, \"hasBorder\": false }' %}\n<ld-bg-cells type=\"tile\"></ld-bg-cells>\n\n<!-- CSS component -->\n\n<div class=\"ld-bg-cells ld-bg-cells--tile\">\n  <div class=\"ld-bg-cells__layer\" style=\"--ld-bg-cells-image:url('/dist/build/assets/tile-cell.svg')\"></div>\n</div>\n{% endexample %}\n\n### Technical\n\n{% example '{ \"hasPadding\": false, \"hasBorder\": false }' %}\n<ld-bg-cells type=\"t\"></ld-bg-cells>\n\n<!-- CSS component -->\n\n<div class=\"ld-bg-cells ld-bg-cells--t\">\n  <div class=\"ld-bg-cells__layer\" style=\"--ld-bg-cells-image:url('/dist/build/assets/t-cell.svg')\"></div>\n</div>\n{% endexample %}\n\n## Custom position and size\n\n{% example '{ \"hasPadding\": false, \"hasBorder\": false }' %}\n<ld-bg-cells class=\"custom\"></ld-bg-cells>\n\n<style>\n  .custom {\n    --ld-bg-cells-layer-translation-x: 26%;\n    --ld-bg-cells-layer-translation-y: -5%;\n    --ld-bg-cells-layer-size: 150%;\n    aspect-ratio: 1;\n  }\n</style>\n\n<!-- CSS component -->\n\n<div class=\"ld-bg-cells custom\">\n  <div class=\"ld-bg-cells__layer\" style=\"--ld-bg-cells-image:url('/dist/build/assets/hexagon-cell.svg')\"></div>\n</div>\n\n<style>\n  .custom {\n    --ld-bg-cells-layer-translation-x: 26%;\n    --ld-bg-cells-layer-translation-y: -5%;\n    --ld-bg-cells-layer-size: 110%;\n    aspect-ratio: 1;\n  }\n</style>\n{% endexample %}\n\n## Custom Colors\n\n{% example '{ \"hasPadding\": false, \"hasBorder\": false }' %}\n\n<ld-bg-cells class=\"custom-colors\"></ld-bg-cells>\n\n<style>\n  .custom-colors {\n    --ld-bg-cells-layer-col: var(--ld-col-rr);\n    --ld-bg-cells-bg-col: var(--ld-col-vy);\n  }\n</style>\n\n<!-- CSS component -->\n\n<div class=\"ld-bg-cells custom-colors\">\n  <div class=\"ld-bg-cells__layer\" style=\"--ld-bg-cells-image:url('/dist/build/assets/hexagon-cell.svg')\"></div>\n</div>\n\n{% endexample %}\n\n## Three Layers\n\n<ld-notice mode=\"warning\">\n  Please be aware that the <code>three-layers</code> property only works with themable background cells.\n</ld-notice>\n\n{% example '{ \"hasPadding\": false, \"hasBorder\": false }' %}\n\n<ld-bg-cells three-layers></ld-bg-cells>\n\n<!-- CSS component -->\n\n<div class=\"ld-bg-cells ld-bg-cells--three-layers\">\n  <div class=\"ld-bg-cells__layer\" style=\"--ld-bg-cells-image:url('/dist/build/assets/hexagon-cell.svg')\"></div>\n  <div class=\"ld-bg-cells__secondary-layer\" style=\"--ld-bg-cells-image:url('/dist/build/assets/hexagon-cell.svg')\"></div>\n</div>\n\n{% endexample %}\n\n\n## CSS Variables\n\n| Variable                                         | Description                                                   | Default                              |\n| ------------------------------------------------ | ------------------------------------------------------------- | ------------------------------------ |\n| `--ld-bg-cells-bg-col`                           | Color of background / lowest layer                            | Theme Secondary Color                |\n| `--ld-bg-cells-layer-col`                        | Color of pattern layer                                        | Theme Primary Color                  |\n| `--ld-bg-cells-layer-size`                       | Size / Scale of pattern layer (in %)                          | Individual per cell type             |\n| `--ld-bg-cells-layer-translation-x`              | Translation on x-axis of pattern layer (in %)                 | Individual per cell type             |\n| `--ld-bg-cells-layer-translation-y`              | Translation on y-axis of pattern layer (in %)                 | Individual per cell type             |\n| `--ld-bg-cells-layer-rotation`                   | Rotation of pattern layer (in deg)                            | `0deg`                               |\n| `--ld-bg-cells-secondary-layer-col`              | Color of secondary pattern layer                              | `transparent`                        |\n| `--ld-bg-cells-secondary-layer-size`             | Size / Scale of secondary pattern layer (in %)                | `150%`                               |\n| `--ld-bg-cells-secondary-layer-translation-x`    | Translation on x-axis of secondary pattern layer (in %)       | `0`                                  |\n| `--ld-bg-cells-secondary-layer-translation-y`    | Translation on y-axis of secondary pattern layer (in %)       | `0`                                  |\n| `--ld-bg-cells-secondary-layer-rotation`         | Rotation of secondary pattern layer (in deg)                  | `0deg`                               |\n\n",
      "docs": "---\neleventyNavigation:\n  key: Background Cells\n  parent: Components\nlayout: layout.njk\ntitle: Background Cells\npermalink: components/ld-bg-cells/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-bg-cells.css\">",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "layer - Element containing the cells pattern"
        },
        {
          "name": "part",
          "text": "secondary-layer - Element containing the second cells pattern"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "threeLayers",
          "type": "boolean",
          "mutable": false,
          "attr": "three-layers",
          "reflectToAttr": false,
          "docs": "Use 3 color layers",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "type",
          "type": "\"bioreliance\" | \"f\" | \"functional\" | \"hexagon\" | \"millipore\" | \"milliq\" | \"o\" | \"organic\" | \"plastic\" | \"qa-x2f-qc\" | \"safc\" | \"sigma-aldrich\" | \"supelco\" | \"synthetic\" | \"t\" | \"technical\" | \"tile\"",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "Cells pattern",
          "docsTags": [],
          "default": "'hexagon'",
          "values": [
            {
              "value": "bioreliance",
              "type": "string"
            },
            {
              "value": "f",
              "type": "string"
            },
            {
              "value": "functional",
              "type": "string"
            },
            {
              "value": "hexagon",
              "type": "string"
            },
            {
              "value": "millipore",
              "type": "string"
            },
            {
              "value": "milliq",
              "type": "string"
            },
            {
              "value": "o",
              "type": "string"
            },
            {
              "value": "organic",
              "type": "string"
            },
            {
              "value": "plastic",
              "type": "string"
            },
            {
              "value": "qa-x2f-qc",
              "type": "string"
            },
            {
              "value": "safc",
              "type": "string"
            },
            {
              "value": "sigma-aldrich",
              "type": "string"
            },
            {
              "value": "supelco",
              "type": "string"
            },
            {
              "value": "synthetic",
              "type": "string"
            },
            {
              "value": "t",
              "type": "string"
            },
            {
              "value": "technical",
              "type": "string"
            },
            {
              "value": "tile",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "layer",
          "docs": "Element containing the cells pattern"
        },
        {
          "name": "secondary-layer",
          "docs": "Element containing the second cells pattern"
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-breadcrumbs/ld-breadcrumbs.tsx",
      "encapsulation": "shadow",
      "tag": "ld-breadcrumbs",
      "readme": "---\neleventyNavigation:\n  key: Breadcrumbs\n  parent: Components\nlayout: layout.njk\ntitle: Breadcrumbs\npermalink: components/ld-breadcrumbs/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-breadcrumbs.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-crumb.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-link.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n\n# ld-breadcrumbs\n\nA breadcrumb trail consists of a list of links to the parent pages of the current page in hierarchical order. It helps users find their place within a website or web application. Breadcrumbs are often placed horizontally before a page's main content.\n\nThis component is meant to be used in conjunction with the [`ld-crumb`](./ld-crumb/) component.\n\n## Examples\n\n### Basic\n\n{% example %}\n<ld-breadcrumbs>\n  <ld-crumb href=\"components/\">Components</ld-crumb>\n  <ld-crumb href=\"components/ld-breadcrumbs/\">Breadcrumbs</ld-crumb>\n</ld-breadcrumbs>\n\n<!-- CSS component -->\n\n<nav class=\"ld-breadcrumbs\" aria-label=\"Breadcrumbs\">\n  <ol>\n    <li>\n      <a class=\"ld-link ld-link--chevron-end\" href=\"components/\">Components</a>\n    </li>\n    <li>\n      <a class=\"ld-link\" href=\"components/ld-breadcrumbs/\" aria-current=\"page\">Breadcrumbs</a>\n    </li>\n  </ol>\n</nav>\n{% endexample %}\n\n### With icons\n\n{% example %}\n<ld-breadcrumbs>\n  <ld-crumb href=\"components/\">\n    <ld-icon name=\"placeholder\" size=\"sm\"></ld-icon>\n    Components\n  </ld-crumb>\n  <ld-crumb href=\"components/ld-breadcrumbs/\">\n    <ld-icon name=\"placeholder\" size=\"sm\"></ld-icon>\n    Breadcrumbs\n  </ld-crumb>\n</ld-breadcrumbs>\n\n<!-- CSS component -->\n\n<nav class=\"ld-breadcrumbs\" aria-label=\"Breadcrumbs\">\n  <ol>\n    <li>\n      <a class=\"ld-link ld-link--chevron-end\" href=\"components/\">\n        <span class=\"ld-icon ld-icon--sm\" role=\"presentation\">\n          <svg viewBox=\"0 0 24 24\" fill=\"none\">\n            <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n            <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n          </svg>\n        </span>\n        Components\n      </a>\n    </li>\n    <li>\n      <a class=\"ld-link\" href=\"components/ld-breadcrumbs/\" aria-current=\"page\">\n        <span class=\"ld-icon ld-icon--sm\" role=\"presentation\">\n          <svg viewBox=\"0 0 24 24\" fill=\"none\">\n            <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n            <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n          </svg>\n        </span>\n        Breadcrumbs\n      </a>\n    </li>\n  </ol>\n</nav>\n{% endexample %}\n",
      "docs": "---\neleventyNavigation:\n  key: Breadcrumbs\n  parent: Components\nlayout: layout.njk\ntitle: Breadcrumbs\npermalink: components/ld-breadcrumbs/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-breadcrumbs.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-crumb.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-link.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">",
      "docsTags": [
        {
          "name": "part",
          "text": "list - Breadcrumbs list"
        },
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "list",
          "docs": "Breadcrumbs list"
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-button/ld-button.tsx",
      "encapsulation": "shadow",
      "tag": "ld-button",
      "readme": "---\neleventyNavigation:\n  key: Button\n  parent: Components\nlayout: layout.njk\ntitle: Button\npermalink: components/ld-button/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-button.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n\n# ld-button\n\nButtons allow a user to trigger events on the user interface. A button's text should express what the button does.\nIcon-buttons without visual text should either contain a [screen-reader-only](components/ld-sr-only/) text, have an `aria-label`, a `title` element within the svg icon or an `alt` text on an image icon within the button.\n\n---\n\n## Examples\n\n### Primary\n\n{% example %}\n<ld-button>Text</ld-button>\n\n<!-- CSS component -->\n\n<button class=\"ld-button\">Text</button>\n{% endexample %}\n\n### Disabled\n\n{% example %}\n<ld-button id=\"disabled-button-1\" disabled>Text</ld-button>\n<script>\n  document.getElementById('disabled-button-1').addEventListener('click', () => { window.alert('click') })\n  // The event handler won't be called.\n</script>\n\n<!-- CSS component -->\n\n<button id=\"disabled-button-2\" class=\"ld-button\" disabled>Text</button>\n<script>\n  document.getElementById('disabled-button-2').addEventListener('click', () => { window.alert('click') })\n  // The event handler won't be called.\n</script>\n{% endexample %}\n\nThe `disabled` attribute applies both attributes, `disabled` and `aria-disabled=\"true\"` on the rendered component.\nAlthough `aria-disabled=\"true\"` is not necessary on a `button` element (or any other HTML control which supports the disabled attribute natively), it is applied just in case you use an [anchor button](components/ld-button/#anchor-button).\n\n**If you want the button to stay focusable** even if it is disabled, use `aria-disabled` in place of `disabled`:\n\n{% example %}\n<ld-button id=\"disabled-button-3\" aria-disabled=\"true\">Text</ld-button>\n<script>\n  document.getElementById('disabled-button-3').addEventListener('click', () => { window.alert('click') })\n  // The event handler won't be called.\n</script>\n\n<!-- CSS component -->\n\n<button id=\"disabled-button-4\" class=\"ld-button\" aria-disabled=\"true\">\n  Text\n</button>\n<script>\n  // When using the CSS component, you will need to prevent the default behaviour of the button yourself.\n  document.getElementById('disabled-button-4').addEventListener('click', (ev) => {\n    console.info('preventing default behaviour')\n    ev.preventDefault()\n    ev.stopImmediatePropagation()\n  })\n</script>\n\n{% endexample %}\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  When <code>aria-disabled</code> is applied on the button, either explicitly or implicitly, the component will try to prevent user interaction using an internal click event handler, calling <code>preventDefault()</code> and <code>stopImmediatePropagation()</code> on the click event. With the CSS component version on the other hand, you will need to take care of preventing the default behaviour of the button yourself. \n</ld-notice>\n\n### Secondary\n\n{% example %}\n<ld-button mode=\"secondary\">Text</ld-button>\n\n<ld-button mode=\"secondary\" disabled>Text</ld-button>\n\n<!-- CSS component -->\n\n<button class=\"ld-button ld-button--secondary\">Text</button>\n\n<button class=\"ld-button ld-button--secondary\" disabled>Text</button>\n{% endexample %}\n\n### Ghost\n\n{% example %}\n<ld-button mode=\"ghost\">Text</ld-button>\n\n<ld-button mode=\"ghost\" disabled>Text</ld-button>\n\n<!-- CSS component -->\n\n<button class=\"ld-button ld-button--ghost\">Text</button>\n\n<button class=\"ld-button ld-button--ghost\" disabled>Text</button>\n{% endexample %}\n\n### On brand color\n\n{% example '{ \"background\": \"brand\", \"hasBorder\": false }' %}\n<ld-button brand-color>Text</ld-button>\n\n<ld-button brand-color disabled>Text</ld-button>\n\n<ld-button mode=\"secondary\" brand-color>Text</ld-button>\n\n<ld-button mode=\"secondary\" brand-color disabled>Text</ld-button>\n\n<ld-button mode=\"ghost\" brand-color>Text</ld-button>\n\n<ld-button mode=\"ghost\" brand-color disabled>Text</ld-button>\n\n<!-- CSS component -->\n\n<button class=\"ld-button ld-button--brand-color\">Text</button>\n\n<button class=\"ld-button ld-button--brand-color\" disabled>Text</button>\n\n<button class=\"ld-button ld-button--secondary ld-button--brand-color\">Text</button>\n\n<button class=\"ld-button ld-button--secondary ld-button--brand-color\" disabled>Text</button>\n\n<button class=\"ld-button ld-button--ghost ld-button--brand-color\">Text</button>\n\n<button class=\"ld-button ld-button--ghost ld-button--brand-color\" disabled>Text</button>\n{% endexample %}\n\n### Highlight\n\n{% example %}\n<ld-button mode=\"highlight\">Text</ld-button>\n\n<ld-button mode=\"highlight\" disabled>Text</ld-button>\n\n<!-- CSS component -->\n\n<button class=\"ld-button ld-button--highlight\">Text</button>\n\n<button class=\"ld-button ld-button--highlight\" disabled>Text</button>\n{% endexample %}\n\n### Danger\n\n{% example %}\n<ld-button mode=\"danger\">Text</ld-button>\n\n<ld-button mode=\"danger\" disabled>Text</ld-button>\n\n<!-- CSS component -->\n\n<button class=\"ld-button ld-button--danger\">Text</button>\n\n<button class=\"ld-button ld-button--danger\" disabled>Text</button>\n{% endexample %}\n\n### Danger secondary\n\n{% example %}\n<ld-button mode=\"danger-secondary\">Text</ld-button>\n\n<ld-button mode=\"danger-secondary\" disabled>Text</ld-button>\n\n<!-- CSS component -->\n\n<button class=\"ld-button ld-button--danger-secondary\">Text</button>\n\n<button class=\"ld-button ld-button--danger-secondary\" disabled>Text</button>\n{% endexample %}\n\n### Size\n\n{% example %}\n<ld-button size=\"sm\">Text</ld-button>\n\n<ld-button>Text</ld-button>\n\n<ld-button size=\"lg\">Text</ld-button>\n\n<!-- CSS component -->\n\n<button class=\"ld-button ld-button--sm\">Text</button>\n\n<button class=\"ld-button\">Text</button>\n\n<button class=\"ld-button ld-button--lg\">Text</button>\n{% endexample %}\n\n### With icon\n\n{% example %}\n<ld-button size=\"sm\">\n  <ld-icon name=\"placeholder\" size=\"sm\" aria-label=\"Text\"></ld-icon>\n</ld-button>\n\n<ld-button>\n  <ld-icon name=\"placeholder\" aria-label=\"Text\"></ld-icon>\n</ld-button>\n\n<ld-button size=\"lg\">\n  <ld-icon name=\"placeholder\" size=\"lg\" aria-label=\"Text\"></ld-icon>\n</ld-button>\n\n<ld-button mode=\"highlight\" size=\"sm\">\n  <ld-icon name=\"placeholder\" size=\"sm\"></ld-icon>\n  Text\n</ld-button>\n\n<ld-button mode=\"danger\">\n  Text\n  <ld-icon name=\"placeholder\"></ld-icon>\n</ld-button>\n\n<ld-button mode=\"secondary\" size=\"lg\">\n  <ld-icon name=\"placeholder\" size=\"lg\"></ld-icon>\n  Text\n</ld-button>\n\n<!-- CSS component -->\n\n<button class=\"ld-button ld-button--sm\">\n  <span class=\"ld-icon ld-icon--sm\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <title>Text</title>\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n</button>\n\n<button class=\"ld-button\">\n  <span class=\"ld-icon\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <title>Text</title>\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n</button>\n\n<button class=\"ld-button ld-button--lg\">\n  <span class=\"ld-icon ld-icon--lg\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <title>Text</title>\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n</button>\n\n<button class=\"ld-button ld-button--highlight ld-button--sm\">\n  <span class=\"ld-icon ld-icon--sm\" role=\"presentation\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n  Text\n</button>\n\n<button class=\"ld-button ld-button--danger\">\n  Text\n  <span class=\"ld-icon\" role=\"presentation\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n</button>\n\n<button class=\"ld-button ld-button--secondary ld-button--lg\">\n    <span class=\"ld-icon ld-icon--lg\" role=\"presentation\">\n      <svg viewBox=\"0 0 24 24\" fill=\"none\">\n        <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      </svg>\n    </span>\n    Text\n</button>\n{% endexample %}\n\n### With custom width\n\nTo give a button a custom width, simply assign the `width` or `min-width` CSS properties to the element, use other techniques (`grid`, `flex` etc.) on the wrapping element or apply utility classes (i.e. from [Tailwind](https://tailwindcss.com/), if that's your tool of choice) on the element.\n\n{% example %}\n<ld-button style=\"width: 18rem\">Text</ld-button>\n\n<div style=\"display: inline-grid; width: 18rem\">\n  <ld-button>Text</ld-button>\n</div>\n\n<!-- CSS component -->\n\n<button class=\"ld-button\" style=\"width: 18rem\">Text</button>\n\n<div style=\"display: inline-grid; width: 18rem\">\n  <button class=\"ld-button\">Text</button>\n</div>\n{% endexample %}\n\n### Justify content\n\n{% example %}\n<ld-button style=\"width: 8rem\" justify-content=\"center\">\n  Text\n  <ld-icon name=\"placeholder\"></ld-icon>\n</ld-button>\n\n<ld-button style=\"width: 8rem\" justify-content=\"start\">\n  Text\n  <ld-icon name=\"placeholder\"></ld-icon>\n</ld-button>\n\n<ld-button style=\"width: 8rem\" justify-content=\"end\">\n  Text\n  <ld-icon name=\"placeholder\"></ld-icon>\n</ld-button>\n\n<ld-button style=\"width: 8rem\" justify-content=\"between\">\n  Text\n  <ld-icon name=\"placeholder\"></ld-icon>\n</ld-button>\n\n<!-- CSS component -->\n\n<button style=\"width: 8rem\" class=\"ld-button\">\n  Text\n  <span class=\"ld-icon\" role=\"presentation\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n</button>\n\n<button style=\"width: 8rem\" class=\"ld-button ld-button--justify-start\">\n  Text\n  <span class=\"ld-icon\" role=\"presentation\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n</button>\n\n<button style=\"width: 8rem\" class=\"ld-button ld-button--justify-end\">\n  Text\n  <span class=\"ld-icon\" role=\"presentation\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n</button>\n\n<button style=\"width: 8rem\" class=\"ld-button ld-button--justify-between\">\n  Text\n  <span class=\"ld-icon\" role=\"presentation\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n</button>\n{% endexample %}\n\n### Multi-line\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  You shouldn't use a button with too much text in it! Instead, put the description in a label outside the button.\n</ld-notice>\n\nYou can align the text inside the button using the `align-text` propperty.\n\n{% example %}\n<ld-button>\n  Almost before we knew it, we had left the ground.\n  A shining crescent far beneath the flying vessel.\n  Then came the night of the first falling star.\n</ld-button>\n\n<ld-button align-text=\"left\">\n  <ld-icon name=\"placeholder\"></ld-icon>\n  Almost before we knew it, we had left the ground. \n  A shining crescent far beneath the flying vessel. \n  Then came the night of the first falling star.\n</ld-button>\n\n<ld-button align-text=\"right\">\n  Almost before we knew it, we had left the ground. \n  A shining crescent far beneath the flying vessel. \n  Then came the night of the first falling star.\n  <ld-icon name=\"placeholder\"></ld-icon>\n</ld-button>\n\n<!-- CSS component -->\n\n<button class=\"ld-button\">\n  Almost before we knew it, we had left the ground. \n  A shining crescent far beneath the flying vessel. \n  Then came the night of the first falling star.\n</button>\n\n<button class=\"ld-button ld-button--align-text-left\">\n  <span class=\"ld-icon\" role=\"presentation\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n  Almost before we knew it, we had left the ground. \n  A shining crescent far beneath the flying vessel. \n  Then came the night of the first falling star.\n</button>\n\n<button class=\"ld-button ld-button--align-text-right\">\n  Almost before we knew it, we had left the ground. \n  A shining crescent far beneath the flying vessel. \n  Then came the night of the first falling star.\n  <span class=\"ld-icon\" role=\"presentation\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n</button>\n{% endexample %}\n\n### Anchor button\n\n{% example '{ \"opened\": true }' %}\n<ld-button href=\"#\" target=\"_blank\">Text</ld-button>\n\n<!-- CSS component -->\n\n<a class=\"ld-button\" href=\"#\" target=\"_blank\" rel=\"noreferrer noopener\">Text</a>\n{% endexample %}\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  When using <code>target=\"_blank\"</code>, a <code>rel</code> attribute with the value <code>noreferrer noopener</code> is applied automatically. Just in case. If you are using the CSS component version of the button, you will need to take care of this yourself. See <a href=\"https://web.dev/external-anchors-use-rel-noopener/\" rel=\"noreferrer noopener\" target=\"_blank\">https://web.dev/external-anchors-use-rel-noopener/</a>\n</ld-notice>\n\n### Progress button\n\n{% example '{ \"opened\": true }' %}\n<ld-button progress=\"0.75\">Text</ld-button>\n\n<ld-button progress=\"pending\">Text</ld-button>\n\n<ld-button progress=\"pending\" mode=\"highlight\">Text</ld-button>\n\n<ld-button progress=\"pending\" mode=\"danger\">Text</ld-button>\n\n<ld-button progress=\"pending\" mode=\"secondary\">Text</ld-button>\n\n<ld-button progress=\"pending\" mode=\"danger-secondary\">Text</ld-button>\n\n<ld-button progress=\"pending\" mode=\"ghost\">Text</ld-button>\n\n<!-- CSS component -->\n\n<button class=\"ld-button\" aria-busy=\"true\" aria-live=\"polite\">\n  Text\n  <span class=\"ld-button__progress\" style=\"--ld-button-progress: 0.75\"></span>\n</button>\n\n<button class=\"ld-button\" aria-busy=\"true\" aria-live=\"polite\">\n  Text\n  <span class=\"ld-button__progress ld-button__progress--pending\"></span>\n</button>\n\n<button class=\"ld-button ld-button--highlight\" aria-busy=\"true\" aria-live=\"polite\">\n  Text\n  <span class=\"ld-button__progress ld-button__progress--pending\"></span>\n</button>\n\n<button class=\"ld-button ld-button--danger\" aria-busy=\"true\" aria-live=\"polite\">\n  Text\n  <span class=\"ld-button__progress ld-button__progress--pending\"></span>\n</button>\n\n<button class=\"ld-button ld-button--secondary\" aria-busy=\"true\" aria-live=\"polite\">\n  Text\n  <span class=\"ld-button__progress ld-button__progress--pending\"></span>\n</button>\n\n<button class=\"ld-button ld-button--danger-secondary\" aria-busy=\"true\" aria-live=\"polite\">\n  Text\n  <span class=\"ld-button__progress ld-button__progress--pending\"></span>\n</button>\n\n<button class=\"ld-button ld-button--ghost\" aria-busy=\"true\" aria-live=\"polite\">\n  Text\n  <span class=\"ld-button__progress ld-button__progress--pending\"></span>\n</button>\n{% endexample %}\n",
      "docs": "---\neleventyNavigation:\n  key: Button\n  parent: Components\nlayout: layout.njk\ntitle: Button\npermalink: components/ld-button/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-button.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "button - Actual button or anchor element"
        },
        {
          "name": "part",
          "text": "progress-bar - Progress bar"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "alignText",
          "type": "\"left\" | \"right\"",
          "mutable": true,
          "attr": "align-text",
          "reflectToAttr": false,
          "docs": "Align text.",
          "docsTags": [],
          "values": [
            {
              "value": "left",
              "type": "string"
            },
            {
              "value": "right",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "mutable": false,
          "attr": "autofocus",
          "reflectToAttr": true,
          "docs": "Automatically focus the form control when the page is loaded.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "brandColor",
          "type": "boolean",
          "mutable": false,
          "attr": "brand-color",
          "reflectToAttr": false,
          "docs": "Style the button so that it looks good on the current theme's primary color.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disabled state of the button.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "form",
          "type": "string",
          "mutable": false,
          "attr": "form",
          "reflectToAttr": false,
          "docs": "Associates the control with a form element.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "formaction",
          "type": "\"application/x-www-form-urlencoded\" | \"multipart/form-data\" | \"text/plain\"",
          "mutable": false,
          "attr": "formaction",
          "reflectToAttr": false,
          "docs": "Overrides the `action` attribute of the button's form owner.",
          "docsTags": [],
          "values": [
            {
              "value": "application/x-www-form-urlencoded",
              "type": "string"
            },
            {
              "value": "multipart/form-data",
              "type": "string"
            },
            {
              "value": "text/plain",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "formenctype",
          "type": "string",
          "mutable": false,
          "attr": "formenctype",
          "reflectToAttr": false,
          "docs": "Overrides the `enctype` attribute of the button's form owner.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "formmethod",
          "type": "\"get\" | \"post\"",
          "mutable": false,
          "attr": "formmethod",
          "reflectToAttr": false,
          "docs": "Overrides the `method` attribute of the button's form owner.",
          "docsTags": [],
          "values": [
            {
              "value": "get",
              "type": "string"
            },
            {
              "value": "post",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "formnovalidate",
          "type": "boolean",
          "mutable": false,
          "attr": "formnovalidate",
          "reflectToAttr": false,
          "docs": "Overrides the `novalidate` attribute of the button's form owner.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "formtarget",
          "type": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\"",
          "mutable": false,
          "attr": "formtarget",
          "reflectToAttr": false,
          "docs": "Overrides the `target` attribute of the button's form owner.",
          "docsTags": [],
          "values": [
            {
              "value": "_blank",
              "type": "string"
            },
            {
              "value": "_parent",
              "type": "string"
            },
            {
              "value": "_self",
              "type": "string"
            },
            {
              "value": "_top",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "Transforms the button to an anchor element.\nSee [mdn docs](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-href)\nfor more information on the `href` attribute.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "justifyContent",
          "type": "\"between\" | \"end\" | \"start\"",
          "mutable": true,
          "attr": "justify-content",
          "reflectToAttr": false,
          "docs": "Justify content.",
          "docsTags": [],
          "values": [
            {
              "value": "between",
              "type": "string"
            },
            {
              "value": "end",
              "type": "string"
            },
            {
              "value": "start",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ldTabindex",
          "type": "number",
          "mutable": false,
          "attr": "ld-tabindex",
          "reflectToAttr": false,
          "docs": "Tab index of the button.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "mode",
          "type": "\"danger\" | \"danger-secondary\" | \"ghost\" | \"highlight\" | \"secondary\"",
          "mutable": false,
          "attr": "mode",
          "reflectToAttr": false,
          "docs": "Display mode.",
          "docsTags": [],
          "values": [
            {
              "value": "danger",
              "type": "string"
            },
            {
              "value": "danger-secondary",
              "type": "string"
            },
            {
              "value": "ghost",
              "type": "string"
            },
            {
              "value": "highlight",
              "type": "string"
            },
            {
              "value": "secondary",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Used to specify the name of the control.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "progress",
          "type": "\"pending\" | number",
          "mutable": false,
          "attr": "progress",
          "reflectToAttr": false,
          "docs": "Displays a progress bar at the bottom of the button.",
          "docsTags": [],
          "values": [
            {
              "value": "pending",
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "\"lg\" | \"sm\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Size of the button.",
          "docsTags": [],
          "values": [
            {
              "value": "lg",
              "type": "string"
            },
            {
              "value": "sm",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "target",
          "type": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\"",
          "mutable": false,
          "attr": "target",
          "reflectToAttr": false,
          "docs": "The `target` attributed can be used in conjunction with the `href` attribute.\nSee [mdn docs](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target)\nfor more information on the `target` attribute.",
          "docsTags": [],
          "values": [
            {
              "value": "_blank",
              "type": "string"
            },
            {
              "value": "_parent",
              "type": "string"
            },
            {
              "value": "_self",
              "type": "string"
            },
            {
              "value": "_top",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "type",
          "type": "\"button\" | \"reset\" | \"submit\"",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "Specifies the default behavior of the button.",
          "docsTags": [],
          "default": "'submit'",
          "values": [
            {
              "value": "button",
              "type": "string"
            },
            {
              "value": "reset",
              "type": "string"
            },
            {
              "value": "submit",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "Defines the value associated with the button’s `name` when it’s submitted with the form data.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "focusInner",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "focusInner() => Promise<void>",
          "parameters": [],
          "docs": "Sets focus on the button",
          "docsTags": []
        }
      ],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "button",
          "docs": "Actual button or anchor element"
        },
        {
          "name": "progress-bar",
          "docs": "Progress bar"
        }
      ],
      "dependents": [
        "ld-pagination"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "ld-pagination": [
          "ld-button"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-card/ld-card.tsx",
      "encapsulation": "shadow",
      "tag": "ld-card",
      "readme": "---\neleventyNavigation:\n  key: Card\n  parent: Components\nlayout: layout.njk\ntitle: Card\npermalink: components/ld-card/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-card.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-typo.css\">\n\n# ld-card\n\nThe `ld-card` component can be used to list content in visually clearly separated and highlighted areas.\n\n---\n\n## Default\n\n{% example %}\n<ld-card>\n  <ld-typo>Lorem ipsum dolor sit amet.</ld-typo>\n</ld-card>\n\n<!-- CSS component -->\n\n<div class=\"ld-card\">\n  <p class=\"ld-typo ld-typo--body-m\">Lorem ipsum dolor sit amet.</p>\n</div>\n{% endexample %}\n\n## Size\n\nThe `size` prop effects the card padding only.\n\n{% example %}\n<ld-card>\n  <ld-typo>Lorem ipsum dolor sit amet.</ld-typo>\n</ld-card>\n\n<ld-card size=\"sm\">\n  <ld-typo>Lorem ipsum dolor sit amet.</ld-typo>\n</ld-card>\n\n<!-- CSS component -->\n\n<div class=\"ld-card\">\n  <p class=\"ld-typo ld-typo--body-m\">Lorem ipsum dolor sit amet.</p>\n</div>\n\n<div class=\"ld-card ld-card--sm\">\n  <p class=\"ld-typo ld-typo--body-m\">Lorem ipsum dolor sit amet.</p>\n</div>\n{% endexample %}\n\n## Shadow\n\n{% example %}\n<ld-card>\n  <ld-typo>Lorem ipsum dolor sit amet.</ld-typo>\n</ld-card>\n\n<ld-card shadow=\"active\">\n  <ld-typo>Lorem ipsum dolor sit amet.</ld-typo>\n</ld-card>\n\n<ld-card shadow=\"hover\">\n  <ld-typo>Lorem ipsum dolor sit amet.</ld-typo>\n</ld-card>\n\n<ld-card shadow=\"sticky\">\n  <ld-typo>Lorem ipsum dolor sit amet.</ld-typo>\n</ld-card>\n\n<!-- CSS component -->\n\n<div class=\"ld-card\">\n  <p class=\"ld-typo ld-typo--body-m\">Lorem ipsum dolor sit amet.</p>\n</div>\n\n<div class=\"ld-card ld-card--active\">\n  <p class=\"ld-typo ld-typo--body-m\">Lorem ipsum dolor sit amet.</p>\n</div>\n\n<div class=\"ld-card ld-card--hover\">\n  <p class=\"ld-typo ld-typo--body-m\">Lorem ipsum dolor sit amet.</p>\n</div>\n\n<div class=\"ld-card ld-card--sticky\">\n  <p class=\"ld-typo ld-typo--body-m\">Lorem ipsum dolor sit amet.</p>\n</div>\n{% endexample %}\n\n## Shadow interactive\n\nUse the `shadow-interactive` prop for a transition to a different shadow on hover and focus-within.\n\n{% example %}\n<ld-card shadow-interactive=\"sticky\">\n  <ld-typo style=\"margin-bottom: 1rem\">Lorem ipsum dolor sit amet.</ld-typo>\n  <ld-button mode=\"highlight\">Click me</ld-button>\n</ld-card>\n\n<ld-card shadow=\"sticky\" shadow-interactive=\"stacked\">\n  <ld-typo style=\"margin-bottom: 1rem\">Lorem ipsum dolor sit amet.</ld-typo>\n  <ld-button mode=\"highlight\">Click me</ld-button>\n</ld-card>\n\n<!-- CSS component -->\n\n<div class=\"ld-card ld-card--interactive-sticky\">\n  <p class=\"ld-typo ld-typo--body-m\" style=\"margin-bottom: 1rem\">Lorem ipsum dolor sit amet.</p>\n  <button class=\"ld-button ld-button--highlight\">Click me</button>\n</div>\n\n<div class=\"ld-card ld-card--sticky ld-card--interactive-stacked\">\n  <p class=\"ld-typo ld-typo--body-m\" style=\"margin-bottom: 1rem\">Lorem ipsum dolor sit amet.</p>\n  <button class=\"ld-button ld-button--highlight\">Click me</button>\n</div>\n{% endexample %}\n",
      "docs": "---\neleventyNavigation:\n  key: Card\n  parent: Components\nlayout: layout.njk\ntitle: Card\npermalink: components/ld-card/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-card.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-typo.css\">",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "shadow",
          "type": "\"active\" | \"hover\" | \"stacked\" | \"sticky\"",
          "mutable": false,
          "attr": "shadow",
          "reflectToAttr": false,
          "docs": "Simulates card elevation by setting the size of the card box shadow.",
          "docsTags": [],
          "default": "'stacked'",
          "values": [
            {
              "value": "active",
              "type": "string"
            },
            {
              "value": "hover",
              "type": "string"
            },
            {
              "value": "stacked",
              "type": "string"
            },
            {
              "value": "sticky",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "shadowInteractive",
          "type": "\"active\" | \"hover\" | \"stacked\" | \"sticky\"",
          "mutable": false,
          "attr": "shadow-interactive",
          "reflectToAttr": false,
          "docs": "Adds hover and focus-within states using an elevation transition from\n`shadow` (see above) to `shadowInteractive`.",
          "docsTags": [],
          "values": [
            {
              "value": "active",
              "type": "string"
            },
            {
              "value": "hover",
              "type": "string"
            },
            {
              "value": "stacked",
              "type": "string"
            },
            {
              "value": "sticky",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "\"sm\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "The size prop effects the card padding only.",
          "docsTags": [],
          "values": [
            {
              "value": "sm",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-checkbox/ld-checkbox.tsx",
      "encapsulation": "shadow",
      "tag": "ld-checkbox",
      "readme": "---\neleventyNavigation:\n  key: Checkbox\n  parent: Components\nlayout: layout.njk\ntitle: Checkbox\npermalink: components/ld-checkbox/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-checkbox.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-label.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-input-message.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n\n# ld-checkbox\n\nA checkbox allows the user to select and deselect single values.\n\nThis component can be used in conjunction with the [`ld-label`](components/ld-label/) and the [`ld-input-message`](components/ld-input-message/) component.\n\n---\n\n## Examples\n\n### Primary\n\n{% example %}\n<ld-checkbox></ld-checkbox>\n\n<!-- CSS component -->\n\n<div class=\"ld-checkbox\">\n  <input type=\"checkbox\">\n  <svg\n    class=\"ld-checkbox__check\"\n    width=\"14\"\n    height=\"14\"\n    fill=\"none\"\n    viewBox=\"0 0 14 14\"\n  >\n    <path\n      d=\"M12 4L5.40795 10L2 6.63964\"\n      stroke=\"currentColor\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n  <div class=\"ld-checkbox__box\"></div>\n</div>\n{% endexample %}\n\n### Disabled\n\n{% example %}\n<ld-checkbox disabled></ld-checkbox>\n\n<ld-checkbox disabled checked></ld-checkbox>\n\n<!-- CSS component -->\n\n<div class=\"ld-checkbox\">\n  <input type=\"checkbox\" disabled>\n  <svg\n    class=\"ld-checkbox__check\"\n    width=\"14\"\n    height=\"14\"\n    fill=\"none\"\n    viewBox=\"0 0 14 14\"\n  >\n    <path\n      d=\"M12 4L5.40795 10L2 6.63964\"\n      stroke=\"currentColor\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n  <div class=\"ld-checkbox__box\"></div>\n</div>\n\n<div class=\"ld-checkbox\">\n  <input type=\"checkbox\" disabled checked>\n  <svg\n    class=\"ld-checkbox__check\"\n    width=\"14\"\n    height=\"14\"\n    fill=\"none\"\n    viewBox=\"0 0 14 14\"\n  >\n    <path\n      d=\"M12 4L5.40795 10L2 6.63964\"\n      stroke=\"currentColor\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n  <div class=\"ld-checkbox__box\"></div>\n</div>\n{% endexample %}\n\n**If you want the checkbox to stay focusable** even if it is disabled, use `aria-disabled` in place of `disabled`:\n\n{% example %}\n<ld-checkbox aria-disabled=\"true\"></ld-checkbox>\n\n<ld-checkbox aria-disabled=\"true\" checked></ld-checkbox>\n\n<!-- CSS component -->\n\n<div class=\"ld-checkbox\">\n  <input\n    type=\"checkbox\"\n    aria-disabled=\"true\"\n    id=\"focusable-disabled-checkbox-1\">\n  <svg\n    class=\"ld-checkbox__check\"\n    width=\"14\"\n    height=\"14\"\n    fill=\"none\"\n    viewBox=\"0 0 14 14\"\n  >\n    <path\n      d=\"M12 4L5.40795 10L2 6.63964\"\n      stroke=\"currentColor\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n  <div class=\"ld-checkbox__box\"></div>\n</div>\n\n<div class=\"ld-checkbox\">\n  <input\n    type=\"checkbox\"\n    aria-disabled=\"true\"\n    checked\n    id=\"focusable-disabled-checkbox-2\">\n  <svg\n    class=\"ld-checkbox__check\"\n    width=\"14\"\n    height=\"14\"\n    fill=\"none\"\n    viewBox=\"0 0 14 14\"\n  >\n    <path\n      d=\"M12 4L5.40795 10L2 6.63964\"\n      stroke=\"currentColor\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n  <div class=\"ld-checkbox__box\"></div>\n</div>\n\n<!-- Example code for input prevention on aria-disabled checkbox elements -->\n<script>\n  const inputs = document.querySelectorAll('#focusable-disabled-checkbox-1, #focusable-disabled-checkbox-2')\n  Array.from(inputs).forEach(input => {\n    input.addEventListener('click', (ev) => {\n      ev.preventDefault()\n    })\n  })\n</script>\n{% endexample %}\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  When <code>aria-disabled</code> is applied on the checkbox, the component will try to prevent user interaction using an internal click event handler, calling <code>preventDefault()</code> on the click event. With the CSS component version on the other hand, you will need to take care of preventing the default behaviour of the checkbox yourself.\n</ld-notice>\n\n### Indeterminate\n\nIf the `indeterminate` attribute is present on the `ld-checkbox` component, the checkbox's value is neither `true` nor `false`, but is instead _indeterminate_, meaning that its state cannot be determined or stated in pure binary terms. This may happen, for instance, if the state of the checkbox depends on multiple other checkboxes, and those checkboxes have different values. However, the control is never a true tri-state control, even if the element's indeterminate attribute is set to true. The indeterminate IDL attribute only gives the appearance of a third state.\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  When using the CSS Component you need to take care of setting the indeterminate <strong>prop</strong> on the input element with JavaScript.  \n</ld-notice>\n\n{% example '{ \"background\": \"light\" }' %}\n<ld-checkbox indeterminate></ld-checkbox>\n\n<ld-checkbox indeterminate disabled></ld-checkbox>\n\n<!-- CSS component -->\n\n<div id=\"example-indeterminate-1\" class=\"ld-checkbox\">\n  <input type=\"checkbox\">\n  <svg\n    class=\"ld-checkbox__check\"\n    width=\"14\"\n    height=\"14\"\n    fill=\"none\"\n    viewBox=\"0 0 14 14\"\n  >\n    <path\n      d=\"M12 4L5.40795 10L2 6.63964\"\n      stroke=\"currentColor\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n  <div class=\"ld-checkbox__box\"></div>\n</div>\n\n<div id=\"example-indeterminate-2\" class=\"ld-checkbox\">\n  <input type=\"checkbox\" disabled>\n  <svg\n    class=\"ld-checkbox__check\"\n    width=\"14\"\n    height=\"14\"\n    fill=\"none\"\n    viewBox=\"0 0 14 14\"\n  >\n    <path\n      d=\"M12 4L5.40795 10L2 6.63964\"\n      stroke=\"currentColor\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n  <div class=\"ld-checkbox__box\"></div>\n</div>\n\n<script>\ndocument.querySelectorAll('#example-indeterminate-1 input, #example-indeterminate-2 input')\n  .forEach(input => input.indeterminate = true)\n</script>\n\n{% endexample %}\n\n### Dark\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  Dark tone checkboxes should only be used on white backgrounds.\n</ld-notice>\n\n{% example '{ \"background\": \"light\" }' %}\n<ld-checkbox tone=\"dark\"></ld-checkbox>\n\n<ld-checkbox tone=\"dark\" disabled></ld-checkbox>\n\n<!-- CSS component -->\n\n<div class=\"ld-checkbox ld-checkbox--dark\">\n  <input type=\"checkbox\">\n  <svg\n    class=\"ld-checkbox__check\"\n    width=\"14\"\n    height=\"14\"\n    fill=\"none\"\n    viewBox=\"0 0 14 14\"\n  >\n    <path\n      d=\"M12 4L5.40795 10L2 6.63964\"\n      stroke=\"currentColor\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n  <div class=\"ld-checkbox__box\"></div>\n</div>\n\n<div class=\"ld-checkbox ld-checkbox--dark\">\n  <input type=\"checkbox\" disabled>\n  <svg\n    class=\"ld-checkbox__check\"\n    width=\"14\"\n    height=\"14\"\n    fill=\"none\"\n    viewBox=\"0 0 14 14\"\n  >\n    <path\n      d=\"M12 4L5.40795 10L2 6.63964\"\n      stroke=\"currentColor\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n  <div class=\"ld-checkbox__box\"></div>\n</div>\n{% endexample %}\n\n### Highlight\n\n{% example %}\n<ld-checkbox mode=\"highlight\"></ld-checkbox>\n\n<ld-checkbox mode=\"highlight\" disabled></ld-checkbox>\n\n<!-- CSS component -->\n\n<div class=\"ld-checkbox ld-checkbox--highlight\">\n  <input type=\"checkbox\">\n  <svg\n    class=\"ld-checkbox__check\"\n    width=\"14\"\n    height=\"14\"\n    fill=\"none\"\n    viewBox=\"0 0 14 14\"\n  >\n    <path\n      d=\"M12 4L5.40795 10L2 6.63964\"\n      stroke=\"currentColor\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n  <div class=\"ld-checkbox__box\"></div>\n</div>\n\n<div class=\"ld-checkbox ld-checkbox--highlight\">\n  <input type=\"checkbox\" disabled>\n  <svg\n    class=\"ld-checkbox__check\"\n    width=\"14\"\n    height=\"14\"\n    fill=\"none\"\n    viewBox=\"0 0 14 14\"\n  >\n    <path\n      d=\"M12 4L5.40795 10L2 6.63964\"\n      stroke=\"currentColor\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n  <div class=\"ld-checkbox__box\"></div>\n</div>\n{% endexample %}\n\n### Invalid\n\n{% example %}\n<ld-checkbox invalid></ld-checkbox>\n\n<ld-checkbox invalid disabled></ld-checkbox>\n\n<!-- CSS component -->\n\n<div class=\"ld-checkbox ld-checkbox--invalid\">\n  <input type=\"checkbox\">\n  <svg\n    class=\"ld-checkbox__check\"\n    width=\"14\"\n    height=\"14\"\n    fill=\"none\"\n    viewBox=\"0 0 14 14\"\n  >\n    <path\n      d=\"M12 4L5.40795 10L2 6.63964\"\n      stroke=\"currentColor\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n  <div class=\"ld-checkbox__box\"></div>\n</div>\n\n<div class=\"ld-checkbox ld-checkbox--invalid\">\n  <input type=\"checkbox\" disabled>\n  <svg\n    class=\"ld-checkbox__check\"\n    width=\"14\"\n    height=\"14\"\n    fill=\"none\"\n    viewBox=\"0 0 14 14\"\n  >\n    <path\n      d=\"M12 4L5.40795 10L2 6.63964\"\n      stroke=\"currentColor\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n  <div class=\"ld-checkbox__box\"></div>\n</div>\n{% endexample %}\n\n### Danger\n\nThe checkbox in mode \"danger\" looks and behaves the same as a checkbox with the [`invalid`](components/ld-checkbox/#invalid) property. The only difference lies in the semantics of the properties, which helps to understand the context when reading the code. \n\n{% example %}\n<ld-checkbox mode=\"danger\"></ld-checkbox>\n\n<ld-checkbox mode=\"danger\" disabled></ld-checkbox>\n\n<!-- CSS component -->\n\n<div class=\"ld-checkbox ld-checkbox--danger\">\n  <input type=\"checkbox\">\n  <svg\n    class=\"ld-checkbox__check\"\n    width=\"14\"\n    height=\"14\"\n    fill=\"none\"\n    viewBox=\"0 0 14 14\"\n  >\n    <path\n      d=\"M12 4L5.40795 10L2 6.63964\"\n      stroke=\"currentColor\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n  <div class=\"ld-checkbox__box\"></div>\n</div>\n\n<div class=\"ld-checkbox ld-checkbox--danger\">\n  <input type=\"checkbox\" disabled>\n  <svg\n    class=\"ld-checkbox__check\"\n    width=\"14\"\n    height=\"14\"\n    fill=\"none\"\n    viewBox=\"0 0 14 14\"\n  >\n    <path\n      d=\"M12 4L5.40795 10L2 6.63964\"\n      stroke=\"currentColor\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n  <div class=\"ld-checkbox__box\"></div>\n</div>\n{% endexample %}\n\n### With label\n\n{% example %}\n<ld-label position=\"right\" size=\"m\">\n  I have read the terms of service.*\n  <ld-checkbox></ld-checkbox>\n</ld-label>\n\n<!-- CSS component -->\n\n<label class=\"ld-label ld-label--right ld-label--m\">\n  I have read the terms of service.*\n  <div class=\"ld-checkbox\">\n    <input type=\"checkbox\" required>\n    <svg\n      class=\"ld-checkbox__check\"\n      width=\"14\"\n      height=\"14\"\n      fill=\"none\"\n      viewBox=\"0 0 14 14\"\n    >\n      <path\n        d=\"M12 4L5.40795 10L2 6.63964\"\n        stroke=\"currentColor\"\n        stroke-width=\"3\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </svg>\n    <div class=\"ld-checkbox__box\"></div>\n  </div>\n</label>\n{% endexample %}\n\nPlease reffer to the [ld-label](components/ld-label/) docs for more information on the label component.\n\n### With label and input message\n\n{% example %}\n<div style=\"display: grid; gap: 2rem; grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr)); width: 100%\">\n  <ld-label position=\"right\" size=\"m\">\n    I have read the terms of service.*\n    <ld-checkbox invalid required></ld-checkbox>\n    <ld-input-message>To proceed, you must except the terms of service.</ld-input-message>\n  </ld-label>\n\n  <ld-label position=\"right\" size=\"m\">\n    I'd like to receive a weekly newsletter.\n    <ld-checkbox></ld-checkbox>\n    <ld-input-message mode=\"info\">You may unsubscribe at any given time.</ld-input-message>\n  </ld-label>\n</div>\n\n<!-- CSS component -->\n\n<div style=\"display: grid; gap: 2rem; grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr)); width: 100%\">\n  <label class=\"ld-label ld-label--right ld-label--m\">\n    I have read the terms of service.*\n    <div class=\"ld-checkbox ld-checkbox--invalid\">\n      <input type=\"checkbox\" required>\n      <svg\n        class=\"ld-checkbox__check\"\n        width=\"14\"\n        height=\"14\"\n        fill=\"none\"\n        viewBox=\"0 0 14 14\"\n      >\n        <path\n          d=\"M12 4L5.40795 10L2 6.63964\"\n          stroke=\"currentColor\"\n          stroke-width=\"3\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        />\n      </svg>\n      <div class=\"ld-checkbox__box\"></div>\n    </div>\n    <span class=\"ld-input-message ld-input-message--error\">\n      <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"currentColor\"/>\n        <path d=\"M4.66675 4.66699L9.33341 9.33366\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        <path d=\"M4.66675 9.33301L9.33341 4.66634\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      </svg>\n      To proceed, you must except the terms of service.\n    </span>\n  </label>\n  \n  <label class=\"ld-label ld-label--right ld-label--m\">\n    I'd like to receive a weekly newsletter.\n    <div class=\"ld-checkbox\">\n      <input type=\"checkbox\">\n      <svg\n        class=\"ld-checkbox__check\"\n        width=\"14\"\n        height=\"14\"\n        fill=\"none\"\n        viewBox=\"0 0 14 14\"\n      >\n        <path\n          d=\"M12 4L5.40795 10L2 6.63964\"\n          stroke=\"currentColor\"\n          stroke-width=\"3\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        />\n      </svg>\n      <div class=\"ld-checkbox__box\"></div>\n    </div>\n    <span class=\"ld-input-message\">\n      <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"var(--ld-thm-warning)\"/>\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.18234 11.0254C6.79228 11.0254 6.48657 10.9147 6.26518 10.6933C6.0438 10.472 5.93311 10.1662 5.93311 9.77618V6.12335C5.93311 5.99685 6.0069 5.93359 6.15449 5.93359H6.89771C7.28776 5.93359 7.59348 6.04428 7.81487 6.26567C8.03625 6.48705 8.14694 6.79277 8.14694 7.18283V10.8357C8.14694 10.9622 8.07315 11.0254 7.92556 11.0254H7.18234Z\" fill=\"var(--ld-col-neutral-900)\"/>\n        <ellipse cx=\"6.99977\" cy=\"3.80007\" rx=\"1.06667\" ry=\"1.06667\" fill=\"var(--ld-col-neutral-900)\"/>\n      </svg>\n      You may unsubscribe at any given time.\n    </span>\n  </label>\n</div>\n{% endexample %}\n\n### Input validation\n\nThe `ld-checkbox` Web Component provides a low level API for integrating the component with the form validation solution of your choice. It allows you to listen for `focus`, `input` and `blur` events.\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  You can find examples for different kinds of input validation in the <a href=\"guides/form-validation/\">Form validation</a> documentation. Please also be aware of differences in event handling compared to native elements that come with Web Components. Details can be found in our <a href=\"guides/event-handling/\">Event handling</a> documentation.\n</ld-notice>\n",
      "docs": "---\neleventyNavigation:\n  key: Checkbox\n  parent: Components\nlayout: layout.njk\ntitle: Checkbox\npermalink: components/ld-checkbox/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-checkbox.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-label.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-input-message.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "input - Actual input element"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "autofocus",
          "type": "boolean",
          "mutable": false,
          "attr": "autofocus",
          "reflectToAttr": true,
          "docs": "Automatically focus the form control when the page is loaded.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "checked",
          "type": "boolean",
          "mutable": true,
          "attr": "checked",
          "reflectToAttr": false,
          "docs": "Indicates whether the checkbox is checked.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disabled state of the checkbox.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "form",
          "type": "string",
          "mutable": false,
          "attr": "form",
          "reflectToAttr": false,
          "docs": "Associates the control with a form element.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "indeterminate",
          "type": "boolean",
          "mutable": true,
          "attr": "indeterminate",
          "reflectToAttr": false,
          "docs": "Set this property to `true` to indicate that the checkbox's value is neither true nor false.\nThe prop is removed automatically as soon as the checkbox is clicked (if not disabled).",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "mutable": false,
          "attr": "invalid",
          "reflectToAttr": false,
          "docs": "Set this property to `true` in order to mark the checkbox visually as invalid.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ldTabindex",
          "type": "number",
          "mutable": false,
          "attr": "ld-tabindex",
          "reflectToAttr": false,
          "docs": "Tab index of the input.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "mode",
          "type": "\"danger\" | \"highlight\"",
          "mutable": false,
          "attr": "mode",
          "reflectToAttr": false,
          "docs": "Display mode.",
          "docsTags": [],
          "values": [
            {
              "value": "danger",
              "type": "string"
            },
            {
              "value": "highlight",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Used to specify the name of the control.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "The value is not editable.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Set this property to `true` in order to mark the checkbox as required.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "tone",
          "type": "\"dark\"",
          "mutable": false,
          "attr": "tone",
          "reflectToAttr": false,
          "docs": "Checkbox tone. Use `'dark'` on white backgrounds. Default is a light tone.",
          "docsTags": [],
          "values": [
            {
              "value": "dark",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The input value.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "focusInner",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "focusInner() => Promise<void>",
          "parameters": [],
          "docs": "Sets focus on the checkbox.",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "ldchange",
          "detail": "boolean",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input value changed and the element loses focus.",
          "docsTags": []
        },
        {
          "event": "ldinput",
          "detail": "boolean",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input value changed.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "box",
          "docs": ""
        },
        {
          "name": "check",
          "docs": ""
        },
        {
          "name": "input",
          "docs": "Actual input element"
        },
        {
          "name": "root",
          "docs": ""
        }
      ],
      "dependents": [
        "ld-option-internal"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "ld-option-internal": [
          "ld-checkbox"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-circular-progress/ld-circular-progress.tsx",
      "encapsulation": "shadow",
      "tag": "ld-circular-progress",
      "readme": "---\neleventyNavigation:\n  key: Circular Progress\n  parent: Components\nlayout: layout.njk\ntitle: Circular Progress\npermalink: components/ld-circular-progress/\ntags:\n  - gauge\n  - analogue display\n  - analogue instrument meter\n  - dial indicator\n  - probe indicator\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-circular-progress.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-typo.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-sr-only.css\">\n\n# ld-circular-progress\n\nThe `ld-circular-progress` component can be used to display measurements or certain dimensional information.\n\n---\n\n## Default\n\n{% example %}\n<ld-sr-only id=\"progress-label\">Progress</ld-sr-only>\n<ld-circular-progress aria-labeledby=\"progress-label\" aria-valuenow=\"25\">\n  <ld-typo variant=\"b6\">25%</ld-typo>\n  <ld-typo variant=\"label-s\">complete</ld-typo>\n</ld-circular-progress>\n\n<!-- CSS component -->\n\n<span class=\"ld-sr-only\" id=\"progress-label-css\">Progress</span>\n<div class=\"ld-circular-progress\"\n     aria-labeledby=\"progress-label-css\"\n     aria-valuenow=\"25\"\n     role=\"progressbar\"\n     style=\"--ld-circular-progress-valuenow: 25\">\n  <span class=\"ld-typo ld-typo--b6\">25%</span>\n  <span class=\"ld-typo ld-typo--label-s\">complete</span>\n  <svg class=\"ld-circular-progress__stroke\" viewBox=\"0 0 10 10\">\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n  </svg>\n</div>\n{% endexample %}\n\nInteractive example:\n\n{% example '{ \"stacked\": true, \"centered\": true }' %}\n<ld-sr-only id=\"progress-label\">Progress</ld-sr-only>\n<ld-circular-progress aria-labeledby=\"progress-label\" aria-valuenow=\"25\">\n  <ld-typo variant=\"b6\">25%</ld-typo>\n  <ld-typo variant=\"label-s\">complete</ld-typo>\n</ld-circular-progress>\n\n<ld-slider value=\"25\" max=\"200\" width=\"14rem\"></ld-slider>\n\n<script>\n  void function() {\n    const slider = document.currentScript.previousElementSibling\n    const progress = slider.previousElementSibling\n    const progressLabel = progress.children[0]\n    slider.addEventListener('ldchange', ev => {\n      const val = ev.detail[0]\n      progress.ariaValuenow = val\n      progressLabel.innerText = `${val}%`\n      progressLabel.style.color = `var(--ld-thm-${val > 100 ? 'error' : 'primary'})`\n    })\n  }()\n</script>\n\n<!-- CSS component -->\n\n<span class=\"ld-sr-only\" id=\"progress-label-css\">Progress</span>\n<div class=\"ld-circular-progress\"\n     aria-labeledby=\"progress-label-css\"\n     aria-valuenow=\"25\"\n     role=\"progressbar\"\n     style=\"--ld-circular-progress-valuenow: 25\">\n  <span class=\"ld-typo ld-typo--b6\">25%</span>\n  <span class=\"ld-typo ld-typo--label-s\">complete</span>\n  <svg class=\"ld-circular-progress__stroke\" viewBox=\"0 0 10 10\">\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n  </svg>\n</div>\n\n<ld-slider value=\"25\" max=\"200\" width=\"14rem\"></ld-slider>\n\n<script>\n  void function() {\n    const slider = document.currentScript.previousElementSibling\n    const progress = slider.previousElementSibling\n    const progressLabel = progress.children[0]\n    slider.addEventListener('ldchange', ev => {\n      const val = ev.detail[0]\n      progress.ariaValuenow = val\n      progress.style.setProperty('--ld-circular-progress-valuenow', val)\n      progressLabel.innerText = `${val}%`\n      progressLabel.style.color = `var(--ld-thm-${val > 100 ? 'error' : 'primary'})`\n    })\n  }()\n</script>\n{% endexample %}\n\n## With custom min and max values\n\n{% example %}\n<ld-circular-progress aria-valuemax=\"360\"\n             aria-valuemin=\"0\"\n             aria-valuenow=\"90\">\n  <ld-typo variant=\"b6\">90°</ld-typo>\n</ld-circular-progress>\n\n<ld-circular-progress aria-valuemax=\"4\"\n                      aria-valuenow=\"1\">\n  <ld-typo variant=\"h4\" style=\"color: var(--ld-thm-primary)\">Step</ld-typo>\n  <ld-typo variant=\"label-s\">1 of 4</ld-typo>\n</ld-circular-progress>\n\n<!-- CSS component -->\n\n<div class=\"ld-circular-progress\"\n     aria-valuemax=\"360\"\n     aria-valuemin=\"0\"\n     aria-valuenow=\"90\"\n     role=\"progressbar\"\n     style=\"--ld-circular-progress-valuemax: 360; --ld-circular-progress-valuemin: 0; --ld-circular-progress-valuenow: 90\">\n  <span class=\"ld-typo ld-typo--b6\">90°</span>\n  <svg class=\"ld-circular-progress__stroke\" viewBox=\"0 0 10 10\">\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n  </svg>\n</div>\n\n<div class=\"ld-circular-progress\"\n     aria-valuemax=\"4\"\n     aria-valuenow=\"1\"\n     role=\"progressbar\"\n     style=\"--ld-circular-progress-valuemax: 4; --ld-circular-progress-valuenow: 1\">\n  <span class=\"ld-typo ld-typo--h4\" style=\"color: var(--ld-thm-primary)\">Step</span>\n  <span class=\"ld-typo ld-typo--label-s\">1 of 4</span>\n  <svg class=\"ld-circular-progress__stroke\" viewBox=\"0 0 10 10\">\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n  </svg>\n</div>\n{% endexample %}\n\n## Overflow\n\nThe component can visualize an overflow value up to 200% of the maximum progress value.\n\n{% example %}\n<ld-circular-progress aria-valuenow=\"125\">\n  <ld-typo variant=\"b6\" style=\"color: var(--ld-thm-error)\">125%</ld-typo>\n  <ld-typo variant=\"label-s\">complete</ld-typo>\n</ld-circular-progress>\n<ld-circular-progress aria-valuenow=\"175\">\n  <ld-typo variant=\"b6\" style=\"color: var(--ld-thm-error)\">175%</ld-typo>\n  <ld-typo variant=\"label-s\">complete</ld-typo>\n</ld-circular-progress>\n<ld-circular-progress aria-valuenow=\"225\">\n  <ld-typo variant=\"b6\" style=\"color: var(--ld-thm-error)\">225%</ld-typo>\n  <ld-typo variant=\"label-s\">complete</ld-typo>\n</ld-circular-progress>\n\n<!-- CSS component -->\n<div class=\"ld-circular-progress ld-circular-progress--overflow\"\n     aria-valuenow=\"125\"\n     role=\"progressbar\"\n     style=\"--ld-circular-progress-valuenow: 125\">\n  <span class=\"ld-typo ld-typo--b6\" style=\"color: var(--ld-thm-error)\">125%</span>\n  <span class=\"ld-typo ld-typo--label-s\">complete</span>\n  <svg class=\"ld-circular-progress__stroke\" viewBox=\"0 0 10 10\">\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n  </svg>\n</div>\n<div class=\"ld-circular-progress ld-circular-progress--overflow\"\n     aria-valuenow=\"175\"\n     role=\"progressbar\"\n     style=\"--ld-circular-progress-valuenow: 175\">\n  <span class=\"ld-typo ld-typo--b6\" style=\"color: var(--ld-thm-error)\">175%</span>\n  <span class=\"ld-typo ld-typo--label-s\">complete</span>\n  <svg class=\"ld-circular-progress__stroke\" viewBox=\"0 0 10 10\">\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n  </svg>\n</div>\n<div class=\"ld-circular-progress ld-circular-progress--overflow\"\n     aria-valuenow=\"225\"\n     role=\"progressbar\"\n     style=\"--ld-circular-progress-valuenow: 225\">\n  <span class=\"ld-typo ld-typo--b6\" style=\"color: var(--ld-thm-error)\">225%</span>\n  <span class=\"ld-typo ld-typo--label-s\">complete</span>\n  <svg class=\"ld-circular-progress__stroke\" viewBox=\"0 0 10 10\">\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n  </svg>\n</div>\n{% endexample %}\n\n## Custom color\n\n{% example %}\n<ld-circular-progress aria-valuenow=\"25\" style=\"--ld-circular-progress-bar-col: var(--ld-thm-secondary)\">\n  <ld-typo variant=\"b6\">25%</ld-typo>\n  <ld-typo variant=\"label-s\">complete</ld-typo>\n</ld-circular-progress>\n\n<!-- CSS component -->\n\n<div class=\"ld-circular-progress\"\n     aria-valuenow=\"25\"\n     role=\"progressbar\"\n     style=\"--ld-circular-progress-bar-col: var(--ld-thm-secondary); --ld-circular-progress-valuenow: 25\">\n  <span class=\"ld-typo ld-typo--b6\">25%</span>\n  <span class=\"ld-typo ld-typo--label-s\">complete</span>\n  <svg class=\"ld-circular-progress__stroke\" viewBox=\"0 0 10 10\">\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n  </svg>\n</div>\n{% endexample %}\n\n## Custom size\n\nYou can change the size of the circular progress bar. However, with a smaller size there is less space for a label inside the component. In such cases you may want to place a label below the progress indicator.\n\n{% example %}\n<style>\n.report {\n  display: grid;\n  place-items: center;\n  gap: var(--ld-sp-4);\n}\n.report ld-circular-progress {\n  --ld-circular-progress-size: 4rem;\n}\n.report-value {\n  transform: scale(0.8);\n}\n</style>\n\n<div class=\"report\">\n  <ld-circular-progress aria-valuenow=\"75\" aria-labeledby=\"performance\" style=\"--ld-circular-progress-bar-col: var(--ld-thm-warning)\">\n    <ld-typo class=\"report-value\" variant=\"b6\">75</ld-typo>\n  </ld-circular-progress>\n  <ld-typo id=\"performance\" variant=\"label-s\">Performance</ld-typo>\n</div>\n<div class=\"report\">\n  <ld-circular-progress aria-valuenow=\"75\" aria-labeledby=\"accessibility\" style=\"--ld-circular-progress-bar-col: var(--ld-thm-warning)\">\n    <ld-typo class=\"report-value\" variant=\"b6\">75</ld-typo>\n  </ld-circular-progress>\n  <ld-typo id=\"accessibility\" variant=\"label-s\">Accessibility</ld-typo>\n</div>\n<div class=\"report\">\n  <ld-circular-progress aria-valuenow=\"100\" aria-labeledby=\"best-practices\" style=\"--ld-circular-progress-bar-col: var(--ld-thm-ocean-success)\">\n    <ld-typo class=\"report-value\" variant=\"b6\" style=\"color: var(--ld-thm-success)\">100</ld-typo>\n  </ld-circular-progress>\n  <ld-typo id=\"best-practices\" variant=\"label-s\">Best Practices</ld-typo>\n</div>\n<div class=\"report\">\n  <ld-circular-progress aria-valuenow=\"98\" aria-labeledby=\"seo\" style=\"--ld-circular-progress-bar-col: var(--ld-thm-ocean-success)\">\n    <ld-typo class=\"report-value\" variant=\"b6\" style=\"color: var(--ld-thm-success)\">98</ld-typo>\n  </ld-circular-progress>\n  <ld-typo id=\"seo\" variant=\"label-s\">SEO</ld-typo>\n</div>\n\n<!-- CSS component -->\n\n<style>\n.report {\n  display: grid;\n  place-items: center;\n  gap: var(--ld-sp-4);\n}\n.report .ld-circular-progress {\n  --ld-circular-progress-size: 4rem;\n}\n.report-value {\n  transform: scale(0.8);\n}\n</style>\n\n<div class=\"report\">\n  <div class=\"ld-circular-progress\"\n       aria-labeledby=\"performance-css\"\n       aria-valuenow=\"75\"\n       role=\"progressbar\"\n       style=\"--ld-circular-progress-bar-col: var(--ld-thm-warning); --ld-circular-progress-valuenow: 75\">\n    <span class=\"report-value ld-typo ld-typo--b6\">75</span>\n    <svg class=\"ld-circular-progress__stroke\" viewBox=\"0 0 10 10\">\n      <circle cx=\"5\" cy=\"5\" r=\"5\" />\n      <circle cx=\"5\" cy=\"5\" r=\"5\" />\n    </svg>\n  </div>\n  <span class=\"ld-typo ld-typo--label-s\" id=\"performance-css\">Performance</span>\n</div>\n<div class=\"report\">\n  <div class=\"ld-circular-progress\"\n       aria-labeledby=\"accessibility-css\"\n       aria-valuenow=\"75\"\n       role=\"progressbar\"\n       style=\"--ld-circular-progress-bar-col: var(--ld-thm-warning); --ld-circular-progress-valuenow: 75\">\n    <span class=\"report-value ld-typo ld-typo--b6\">75</span>\n    <svg class=\"ld-circular-progress__stroke\" viewBox=\"0 0 10 10\">\n      <circle cx=\"5\" cy=\"5\" r=\"5\" />\n      <circle cx=\"5\" cy=\"5\" r=\"5\" />\n    </svg>\n  </div>\n  <span class=\"ld-typo ld-typo--label-s\" id=\"accessibility-css\">Accessibility</span>\n</div>\n<div class=\"report\">\n  <div class=\"ld-circular-progress\"\n       aria-labeledby=\"best-practices-css\"\n       aria-valuenow=\"100\"\n       role=\"progressbar\"\n       style=\"--ld-circular-progress-bar-col: var(--ld-thm-success); --ld-circular-progress-valuenow: 100\">\n    <span class=\"report-value ld-typo ld-typo--b6\" style=\"color: var(--ld-thm-success)\">100</span>\n    <svg class=\"ld-circular-progress__stroke\" viewBox=\"0 0 10 10\">\n      <circle cx=\"5\" cy=\"5\" r=\"5\" />\n      <circle cx=\"5\" cy=\"5\" r=\"5\" />\n    </svg>\n  </div>\n  <span class=\"ld-typo ld-typo--label-s\" id=\"best-practices-css\">Best Practices</span>\n</div>\n<div class=\"report\">\n  <div class=\"ld-circular-progress\"\n       aria-labeledby=\"seo-css\"\n       aria-valuenow=\"98\"\n       role=\"progressbar\"\n       style=\"--ld-circular-progress-bar-col: var(--ld-thm-success); --ld-circular-progress-valuenow: 98\">\n    <span class=\"report-value ld-typo ld-typo--b6\" style=\"color: var(--ld-thm-success)\">98</span>\n    <svg class=\"ld-circular-progress__stroke\" viewBox=\"0 0 10 10\">\n      <circle cx=\"5\" cy=\"5\" r=\"5\" />\n      <circle cx=\"5\" cy=\"5\" r=\"5\" />\n    </svg>\n  </div>\n  <span class=\"ld-typo ld-typo--label-s\" id=\"seo-css\">SEO</span>\n</div>\n{% endexample %}\n\n## On brand color\n\nUse this mode on backgrounds with brand color.\n\n{% example '{ \"background\": \"brand\", \"hasBorder\": false }' %}\n<ld-circular-progress brand-color\n                      aria-valuemax=\"360\"\n                      aria-valuenow=\"90\">\n  <ld-typo variant=\"b6\" style=\"color: var(--ld-col-wht)\">90°</ld-typo>\n</ld-circular-progress>\n<ld-circular-progress brand-color\n                      aria-valuemax=\"360\"\n                      aria-valuenow=\"350\"\n                      style=\"--ld-circular-progress-bar-col: var(--ld-thm-warning)\">\n  <ld-typo variant=\"b6\" style=\"color: var(--ld-thm-warning)\">350°</ld-typo>\n</ld-circular-progress>\n<ld-circular-progress brand-color\n                      aria-valuemax=\"360\"\n                      aria-valuenow=\"450\">\n  <ld-typo variant=\"b6\" style=\"color: var(--ld-thm-warning)\">450°</ld-typo>\n</ld-circular-progress>\n\n<!-- CSS component -->\n\n<div class=\"ld-circular-progress ld-circular-progress--brand-color\"\n     aria-valuemax=\"360\"\n     aria-valuenow=\"90\"\n     role=\"progressbar\"\n     style=\"--ld-circular-progress-valuemax: 360; --ld-circular-progress-valuenow: 90\">\n  <span class=\"ld-typo ld-typo--b6\" style=\"color: var(--ld-col-wht)\">90°</span>\n  <svg class=\"ld-circular-progress__stroke\" viewBox=\"0 0 10 10\">\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n  </svg>\n</div>\n<div class=\"ld-circular-progress ld-circular-progress--brand-color\"\n     aria-valuemax=\"360\"\n     aria-valuenow=\"350\"\n     role=\"progressbar\"\n     style=\"--ld-circular-progress-bar-col: var(--ld-thm-warning); --ld-circular-progress-valuemax: 360; --ld-circular-progress-valuenow: 350\">\n  <span class=\"ld-typo ld-typo--b6\" style=\"color: var(--ld-thm-warning)\">350°</span>\n  <svg class=\"ld-circular-progress__stroke\" viewBox=\"0 0 10 10\">\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n  </svg>\n</div>\n<div class=\"ld-circular-progress ld-circular-progress--brand-color ld-circular-progress--overflow\"\n     aria-valuemax=\"360\"\n     aria-valuenow=\"450\"\n     role=\"progressbar\"\n     style=\"--ld-circular-progress-valuemax: 360; --ld-circular-progress-valuenow: 450\">\n  <span class=\"ld-typo ld-typo--b6\" style=\"color: var(--ld-thm-warning)\">450°</span>\n  <svg class=\"ld-circular-progress__stroke\" viewBox=\"0 0 10 10\">\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n    <circle cx=\"5\" cy=\"5\" r=\"5\" />\n  </svg>\n</div>\n{% endexample %}\n\n",
      "docs": "---\neleventyNavigation:\n  key: Circular Progress\n  parent: Components\nlayout: layout.njk\ntitle: Circular Progress\npermalink: components/ld-circular-progress/\ntags:\n  - gauge\n  - analogue display\n  - analogue instrument meter\n  - dial indicator\n  - probe indicator\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-circular-progress.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-typo.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-sr-only.css\">",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "ariaLabeledby",
          "type": "string",
          "mutable": false,
          "attr": "aria-labeledby",
          "reflectToAttr": true,
          "docs": "Defines the string value or identifies the element (or elements)\nthat label the progressbar element providing an accessible name.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ariaValuemax",
          "type": "number",
          "mutable": false,
          "attr": "aria-valuemax",
          "reflectToAttr": true,
          "docs": "Set to a decimal value representing the maximum value, and greater\nthan aria-valuemin. If not present, the default value is 100.",
          "docsTags": [],
          "default": "100",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ariaValuemin",
          "type": "number",
          "mutable": false,
          "attr": "aria-valuemin",
          "reflectToAttr": true,
          "docs": "Set to a decimal value representing the minimum value, and less\nthan aria-valuemax. If not present, the default value is 0.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ariaValuenow",
          "type": "number",
          "mutable": false,
          "attr": "aria-valuenow",
          "reflectToAttr": true,
          "docs": "Only present and required if the value is not indeterminate.\nSet to a decimal value between 0, or valuemin if present,\nand aria-valuemax indicating the current value of the progress bar.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ariaValuetext",
          "type": "string",
          "mutable": false,
          "attr": "aria-valuetext",
          "reflectToAttr": true,
          "docs": "Assistive technologies often present the value of aria-valuenow\nas a percentage. If this would not be accurate use this property\nto make the progress bar value understandable.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "brandColor",
          "type": "boolean",
          "mutable": false,
          "attr": "brand-color",
          "reflectToAttr": false,
          "docs": "Styles the progress bar in a way that it looks good on the\nprimary color of the current theme.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-breadcrumbs/ld-crumb/ld-crumb.tsx",
      "encapsulation": "shadow",
      "tag": "ld-crumb",
      "readme": "---\neleventyNavigation:\n  key: Crumb\n  parent: Breadcrumbs\nlayout: layout.njk\ntitle: Crumb\npermalink: components/ld-breadcrumbs/ld-crumb/\n---\n\n# ld-crumb\n\nThe `ld-crumb` component is a subcomponent for `ld-breadcrumbs`.\n\nPlease refer to the [`ld-breadcrumbs` documentation](components/ld-breadcrumbs/) for usage examples.\n",
      "docs": "---\neleventyNavigation:\n  key: Crumb\n  parent: Breadcrumbs\nlayout: layout.njk\ntitle: Crumb\npermalink: components/ld-breadcrumbs/ld-crumb/\n---",
      "docsTags": [
        {
          "name": "part",
          "text": "link - Breadcrumb link"
        },
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "The URL that the hyperlink points to.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "link",
          "docs": "Breadcrumb link"
        }
      ],
      "dependents": [],
      "dependencies": [
        "ld-link"
      ],
      "dependencyGraph": {
        "ld-crumb": [
          "ld-link"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-header/ld-header.tsx",
      "encapsulation": "shadow",
      "tag": "ld-header",
      "readme": "---\neleventyNavigation:\n  key: Header\n  parent: Components\nlayout: layout.njk\ntitle: Header\npermalink: components/ld-header/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-header.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-button.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-typo.css\">\n\n# ld-header\n\nThe `ld-header` component contains a logo, a site name and slots for additional custom content, like a menu, buttons, search input or anything else. Slots can be used to place content left or right of the logo and site name, or on the very right side of the header. The `ld-header` component takes care of the following:\n\n* It adds a space between all its direct children.\n* It only allows small buttons as children and automatically applies props accordingly.\n\nYou can easily make the header sticky and make it hide when the user is scrolling down by using the `sticky` and `hide-on-scroll` props.\n\n---\n\n## Examples\n\n### Default\n\n{% example %}\n<ld-header site-name=\"Liquid Oxygen\"></ld-header>\n\n<!-- CSS component -->\n\n<header class=\"ld-header\">\n  <div class=\"ld-header__container\">\n    <svg aria-label=\"Merck KGaA, Darmstadt, Germany\" class=\"ld-header__logo ld-icon\" viewBox=\"0 0 24 24\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.5921 7H19.1a.2882.2882 0 0 0-.1926.076l-2.9895 2.7586c-1.0241.9456-2.4024 1.4765-3.9177 1.4765-1.5796 0-3.0088-.5797-4.0444-1.5964 0 0-2.199-2.0294-2.2179-2.0477A2.5535 2.5535 0 0 0 4.0665 7h-1.785C2.126 7 2 7.1239 2 7.2766v7.7509c0 .765.6301 1.3843 1.4083 1.3843h.9133c.1564 0 .2831-.1249.2831-.2783l.0007-2.7582c0-.7208.5987-1.3155 1.3204-1.3155 1.3434 0 2.3067 1.1309 3.177 1.8863 1.0661.9254 1.8871 1.8169 2.8974 1.8169 1.0092 0 1.8306-.8915 2.8966-1.8169.8707-.7554 1.834-1.8863 3.1767-1.8863.718 0 1.3137.5887 1.3208 1.3039v1.6638c0 .765.6305 1.3829 1.4089 1.3829h.6079c.1588 0 .3061.0014.3061.0014.1561 0 .2828-.1249.2828-.2779V8.3842C22 7.6196 21.3692 7 20.5921 7Z\" fill=\"currentcolor\"/></svg>\n    <div class=\"ld-header_site-name ld-typo--h5\">Liquid Oxygen</div>\n  </div>\n</header>\n{% endexample %}\n\n### With linked logo\n\n{% example %}\n<ld-header site-name=\"Liquid Oxygen\" logo-title=\"Home\" logo-url=\"#\"></ld-header>\n\n<!-- CSS component -->\n\n<header class=\"ld-header\">\n  <div class=\"ld-header__container\">\n    <a aria-label=\"Home\" class=\"ld-header__logo-wrapper\" href=\"#\">\n      <svg class=\"ld-header__logo ld-icon\" viewBox=\"0 0 24 24\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.5921 7H19.1a.2882.2882 0 0 0-.1926.076l-2.9895 2.7586c-1.0241.9456-2.4024 1.4765-3.9177 1.4765-1.5796 0-3.0088-.5797-4.0444-1.5964 0 0-2.199-2.0294-2.2179-2.0477A2.5535 2.5535 0 0 0 4.0665 7h-1.785C2.126 7 2 7.1239 2 7.2766v7.7509c0 .765.6301 1.3843 1.4083 1.3843h.9133c.1564 0 .2831-.1249.2831-.2783l.0007-2.7582c0-.7208.5987-1.3155 1.3204-1.3155 1.3434 0 2.3067 1.1309 3.177 1.8863 1.0661.9254 1.8871 1.8169 2.8974 1.8169 1.0092 0 1.8306-.8915 2.8966-1.8169.8707-.7554 1.834-1.8863 3.1767-1.8863.718 0 1.3137.5887 1.3208 1.3039v1.6638c0 .765.6305 1.3829 1.4089 1.3829h.6079c.1588 0 .3061.0014.3061.0014.1561 0 .2828-.1249.2828-.2779V8.3842C22 7.6196 21.3692 7 20.5921 7Z\" fill=\"currentcolor\"/></svg>\n    </a>\n    <div class=\"ld-header_site-name ld-typo--h5\">Liquid Oxygen</div>\n  </div>\n</header>\n{% endexample %}\n\n### With custom logo\n\n{% example %}\n<ld-header logo-title=\"Rocket Inc.\" site-name=\"Rocket Science\">\n  <ld-icon name=\"rocket\" size=\"lg\" slot=\"logo\"></ld-icon>\n</ld-header>\n\n<!-- CSS component -->\n\n<header class=\"ld-header\">\n  <div class=\"ld-header__container\">\n    <svg aria-label=\"Rocket Inc.\" class=\"ld-icon ld-icon--lg\" viewBox=\"0 0 24 24\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"m16.9524 14.422.0379.0948c.6824 1.4596.3791 3.2036-.7773 4.36l-1.6492 1.6492c-.3602.3792-.9857.2654-1.2132-.2085l-1.2322-2.6729-1.4407.9099c-.3602.2086-.8152.1517-1.0995-.1327l-3.981-3.9809a.8934.8934 0 0 1-.1326-1.0995l.9099-1.4407-2.673-1.2322c-.4738-.2085-.5876-.834-.2084-1.2132L5.1423 7.806c1.1564-1.1374 2.8814-1.4597 4.36-.7773l.0759.019c4.4927-4.2463 8.7039-3.882 10.2773-3.6924A.726.726 0 0 1 20.5 4c.1896 1.5734.6987 5.9292-3.5476 10.422zm-3.7345-6.4833c-.7962.7962-.7962 2.0663 0 2.8625.7962.7773 2.0852.7773 2.8624 0 .7773-.7962.7962-2.0663 0-2.8624-.7961-.7962-2.0662-.7962-2.8624 0zm-7.6587 10.161c0 .2085.1706.3601.3602.3601.0415-.0023.0866-.0046.135-.0071.3502-.0178.8746-.0446 1.4573-.1445l1.3468.626c.0661.0308.0778.1198.0206.1651-1.5787 1.253-3.6632 1.2568-4.7117 1.2587a17.4489 17.4489 0 0 0-.3072.0022c-.2085 0-.3602-.1706-.3602-.3602l.0021-.1117c.0174-.9543.0564-3.0902 1.399-4.7683a.098.098 0 0 1 .1651.0204l.6447 1.3669c-.1138.6635-.1517 1.2511-.1517 1.5924z\" fill=\"currentcolor\"/></svg>\n    <div class=\"ld-header_site-name ld-typo--h5\">Rocket Science</div>\n  </div>\n</header>\n{% endexample %}\n\n### With buttons\n\n{% example %}\n<ld-header>\n  <ld-typo tag=\"div\" variant=\"h5\">\n    Liquid<span class=\"hide-on-sm\"> Oxygen</span>\n  </ld-typo>\n  <ld-button id=\"register\" slot=\"end\" type=\"button\">\n    <ld-icon name=\"pen\" size=\"sm\"></ld-icon>\n    Register\n  </ld-button>\n  <ld-button id=\"login-sm\" mode=\"ghost\" slot=\"end\" title=\"Login\" type=\"button\">\n    <ld-icon aria-label=\"Login\" name=\"user\" size=\"lg\"></ld-icon>\n  </ld-button>\n  <ld-button id=\"login-lg\" mode=\"secondary\" slot=\"end\" type=\"button\">\n    <ld-icon name=\"user\" size=\"sm\"></ld-icon>\n    Login\n  </ld-button>\n</ld-header>\n\n<style>\n  .hide-on-sm {\n    display: none;\n  }\n\n  #register ld-icon {\n    display: none;\n  }\n\n  #login-lg {\n    display: none;\n  }\n\n  @media (min-width: 52rem) {\n    .hide-on-sm {\n      display: inline;\n    }\n\n    #register ld-icon {\n      display: block;\n    }\n\n    #login-sm {\n      display: none;\n    }\n\n    #login-lg {\n      display: block;\n    }\n  }\n</style>\n\n<!-- CSS component -->\n\n<header class=\"ld-header\">\n  <div class=\"ld-header__container\">\n    <svg aria-label=\"Merck KGaA, Darmstadt, Germany\" class=\"ld-header__logo ld-icon\" viewBox=\"0 0 24 24\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.5921 7H19.1a.2882.2882 0 0 0-.1926.076l-2.9895 2.7586c-1.0241.9456-2.4024 1.4765-3.9177 1.4765-1.5796 0-3.0088-.5797-4.0444-1.5964 0 0-2.199-2.0294-2.2179-2.0477A2.5535 2.5535 0 0 0 4.0665 7h-1.785C2.126 7 2 7.1239 2 7.2766v7.7509c0 .765.6301 1.3843 1.4083 1.3843h.9133c.1564 0 .2831-.1249.2831-.2783l.0007-2.7582c0-.7208.5987-1.3155 1.3204-1.3155 1.3434 0 2.3067 1.1309 3.177 1.8863 1.0661.9254 1.8871 1.8169 2.8974 1.8169 1.0092 0 1.8306-.8915 2.8966-1.8169.8707-.7554 1.834-1.8863 3.1767-1.8863.718 0 1.3137.5887 1.3208 1.3039v1.6638c0 .765.6305 1.3829 1.4089 1.3829h.6079c.1588 0 .3061.0014.3061.0014.1561 0 .2828-.1249.2828-.2779V8.3842C22 7.6196 21.3692 7 20.5921 7Z\" fill=\"currentcolor\"/></svg>\n    <div class=\"ld-header_site-name ld-header__grow ld-typo--h5\">\n      Liquid<span class=\"hide-on-sm\"> Oxygen</span>\n    </div>\n    <button class=\"ld-button ld-button--brand-color ld-button--sm\" id=\"register\" type=\"button\">\n      <svg class=\"ld-icon ld-icon--sm\" role=\"none\" viewBox=\"0 0 24 24\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.6192 15.1453a3.806 3.806 0 0 1 1.5674.3358c.4564.2056 1.0133.1824 1.3673-.1716L19.4353 4.4282c.4358-.4358.3698-1.1738-.227-1.3275A3.1966 3.1966 0 0 0 18.4098 3c-.5539 0-1.074.2154-1.4654.6068L5.5567 14.9944c-.0557.0557-.0163.1509.0625.1509zm.3803 1.3126H5.154a.5.5 0 0 0-.485.3787l-.639 2.5557c-.0894.3571.0277.6916.2536.9168.2252.2259.5597.3428.916.2536l2.5565-.639a.5.5 0 0 0 .3787-.4851v-.8455c0-1.1772-.958-2.1352-2.1354-2.1352zM21.5923 6.1824c0 .5542-.2154 1.0744-.6068 1.4658L9.5979 19.036c-.0557.0556-.1508.0162-.1508-.0625a3.806 3.806 0 0 0-.3358-1.5673c-.2057-.4565-.1826-1.0135.1715-1.3675L20.1635 5.1582c.4362-.4362 1.1748-.3697 1.3285.2276a3.194 3.194 0 0 1 .1003.7966z\" fill=\"currentcolor\"/></svg>\n      Register\n    </button>\n    <button class=\"ld-button ld-button--brand-color ld-button--ghost ld-button--sm ld-button--icon-only\" id=\"login-sm\" title=\"Login\" type=\"button\">\n      <svg aria-label=\"Login\" class=\"ld-icon ld-icon--lg\" viewBox=\"0 0 24 24\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.9315 2C9.4767 2 7.455 3.6606 7.455 6.8376c0 2.0938.9386 4.1877 2.2383 5.4873.4332 1.1552-.4332 1.8051-.5776 1.8773-2.5993.9386-5.6318 2.6714-5.6318 4.3321v.6498c0 2.2383 4.4043 2.7437 8.4476 2.8159 4.1156-.0722 8.5199-.5776 8.5199-2.8159v-.6498c0-1.6607-3.0325-3.3935-5.6318-4.3321-.2166-.0722-1.083-.7221-.5776-1.8773 1.2996-1.2996 2.2383-3.3935 2.2383-5.4873C16.4803 3.6606 14.3864 2 11.9315 2z\" fill=\"currentcolor\"/></svg>\n    </button>\n    <button class=\"ld-button ld-button--brand-color ld-button--secondary ld-button--sm\" id=\"login-lg\" type=\"button\">\n      <svg class=\"ld-icon ld-icon--sm\" role=\"none\" viewBox=\"0 0 24 24\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.9315 2C9.4767 2 7.455 3.6606 7.455 6.8376c0 2.0938.9386 4.1877 2.2383 5.4873.4332 1.1552-.4332 1.8051-.5776 1.8773-2.5993.9386-5.6318 2.6714-5.6318 4.3321v.6498c0 2.2383 4.4043 2.7437 8.4476 2.8159 4.1156-.0722 8.5199-.5776 8.5199-2.8159v-.6498c0-1.6607-3.0325-3.3935-5.6318-4.3321-.2166-.0722-1.083-.7221-.5776-1.8773 1.2996-1.2996 2.2383-3.3935 2.2383-5.4873C16.4803 3.6606 14.3864 2 11.9315 2z\" fill=\"currentcolor\"/></svg>\n      Login\n    </button>\n  </div>\n</header>\n\n<style>\n  .hide-on-sm {\n    display: none;\n  }\n\n  #register .ld-icon {\n    display: none;\n  }\n\n  #login-lg {\n    display: none;\n  }\n\n  @media (min-width: 52rem) {\n    .hide-on-sm {\n      display: inline;\n    }\n\n    #register .ld-icon {\n      display: block;\n    }\n\n    #login-sm {\n      display: none;\n    }\n\n    #login-lg {\n      display: grid;\n    }\n  }\n</style>\n{% endexample %}\n\n### With burger menu button\n\n{% example %}\n<ld-header site-name=\"Liquid Oxygen\">\n  <ld-button mode=\"ghost\" slot=\"start\" title=\"Open menu\" type=\"button\">\n    <ld-icon aria-label=\"Open menu\" name=\"burger-menu\" size=\"lg\"></ld-icon>\n  </ld-button>\n</ld-header>\n\n<!-- CSS component -->\n\n<header class=\"ld-header\">\n  <div class=\"ld-header__container\">\n    <button class=\"ld-button ld-button--brand-color ld-button--ghost ld-button--sm ld-button--icon-only\" title=\"Open menu\" type=\"button\">\n      <svg aria-label=\"Open menu\" class=\"ld-icon ld-icon--lg\" viewBox=\"0 0 24 24\" fill=\"none\"><rect x=\"5\" y=\"6\" width=\"14\" height=\"2\" rx=\"1\" fill=\"currentcolor\"/><rect x=\"5\" y=\"11\" width=\"14\" height=\"2\" rx=\"1\" fill=\"currentcolor\"/><rect x=\"5\" y=\"16\" width=\"14\" height=\"2\" rx=\"1\" fill=\"currentcolor\"/></svg>\n    </button>\n    <svg aria-label=\"Merck KGaA, Darmstadt, Germany\" class=\"ld-header__logo ld-icon\" viewBox=\"0 0 24 24\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.5921 7H19.1a.2882.2882 0 0 0-.1926.076l-2.9895 2.7586c-1.0241.9456-2.4024 1.4765-3.9177 1.4765-1.5796 0-3.0088-.5797-4.0444-1.5964 0 0-2.199-2.0294-2.2179-2.0477A2.5535 2.5535 0 0 0 4.0665 7h-1.785C2.126 7 2 7.1239 2 7.2766v7.7509c0 .765.6301 1.3843 1.4083 1.3843h.9133c.1564 0 .2831-.1249.2831-.2783l.0007-2.7582c0-.7208.5987-1.3155 1.3204-1.3155 1.3434 0 2.3067 1.1309 3.177 1.8863 1.0661.9254 1.8871 1.8169 2.8974 1.8169 1.0092 0 1.8306-.8915 2.8966-1.8169.8707-.7554 1.834-1.8863 3.1767-1.8863.718 0 1.3137.5887 1.3208 1.3039v1.6638c0 .765.6305 1.3829 1.4089 1.3829h.6079c.1588 0 .3061.0014.3061.0014.1561 0 .2828-.1249.2828-.2779V8.3842C22 7.6196 21.3692 7 20.5921 7Z\" fill=\"currentcolor\"/></svg>\n    <div class=\"ld-header_site-name ld-typo--h5\">Liquid Oxygen</div>\n  </div>\n</header>\n{% endexample %}\n\n### Sticky\n\nYou can add the `sticky` property to the `ld-header` web component, to make the component stick to the top of the page.\n\n{% example %}\n<ld-header site-name=\"Liquid Oxygen\" sticky></ld-header>\n\n<!-- CSS component -->\n\n<!-- Add the class `ld-header--hidden` to hide the sticky header. -->\n<header class=\"ld-header ld-header--sticky\">\n  <div class=\"ld-header__container\">\n    <svg aria-label=\"Merck KGaA, Darmstadt, Germany\" class=\"ld-header__logo ld-icon\" viewBox=\"0 0 24 24\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.5921 7H19.1a.2882.2882 0 0 0-.1926.076l-2.9895 2.7586c-1.0241.9456-2.4024 1.4765-3.9177 1.4765-1.5796 0-3.0088-.5797-4.0444-1.5964 0 0-2.199-2.0294-2.2179-2.0477A2.5535 2.5535 0 0 0 4.0665 7h-1.785C2.126 7 2 7.1239 2 7.2766v7.7509c0 .765.6301 1.3843 1.4083 1.3843h.9133c.1564 0 .2831-.1249.2831-.2783l.0007-2.7582c0-.7208.5987-1.3155 1.3204-1.3155 1.3434 0 2.3067 1.1309 3.177 1.8863 1.0661.9254 1.8871 1.8169 2.8974 1.8169 1.0092 0 1.8306-.8915 2.8966-1.8169.8707-.7554 1.834-1.8863 3.1767-1.8863.718 0 1.3137.5887 1.3208 1.3039v1.6638c0 .765.6305 1.3829 1.4089 1.3829h.6079c.1588 0 .3061.0014.3061.0014.1561 0 .2828-.1249.2828-.2779V8.3842C22 7.6196 21.3692 7 20.5921 7Z\" fill=\"currentcolor\"/></svg>\n    <div class=\"ld-header_site-name ld-typo--h5\">Liquid Oxygen</div>\n  </div>\n</header>\n{% endexample %}\n\n<ld-notice mode=\"warning\">\n  As the CSS property <code>position: sticky;</code> is used here to achieve this behavior, the <code>ld-header</code> \"sticks\" to its nearest ancestor that has a \"scrolling mechanism\" (created when overflow is hidden, scroll, auto, or overlay), even if that ancestor isn't the nearest actually scrolling ancestor. So you need to take care of where you place the <code>ld-header</code> in the DOM.\n</ld-notice>\n\n### Hide on scroll\n\nIf you want the header to hide (slide up behind the top of the window) when the user is scrolling down, you can add the `hide-on-scroll` prop to the `ld-header` web component. With this prop set, the header will hide when scrolling down and show again, when scrolling up.\n\n<ld-notice mode=\"warning\">\n  This prop only works in combination with the <code>sticky</code> prop.\n</ld-notice>\n\n## CSS Variables\n\n| Variable                | Description                                   | Default  |\n| ----------------------- | --------------------------------------------- | -------- |\n| `--ld-header-height`    | Height of the `ld-header` component.          | 3.125rem |\n| `--ld-header-max-width` | Max width that the header content expands to. | 90rem    |\n\n",
      "docs": "---\neleventyNavigation:\n  key: Header\n  parent: Components\nlayout: layout.njk\ntitle: Header\npermalink: components/ld-header/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-header.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-button.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-typo.css\">",
      "docsTags": [
        {
          "name": "slot",
          "text": "end - Items on the right side of the header."
        },
        {
          "name": "slot",
          "text": "logo - Custom logo."
        },
        {
          "name": "slot",
          "text": "start - Items on the left side of the header."
        },
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "container - Actual header element that limits the width of the header content"
        },
        {
          "name": "part",
          "text": "logo - The default logo"
        },
        {
          "name": "part",
          "text": "logo-wrapper - The element wrapping the logo slot (div or anchor, if linked)"
        },
        {
          "name": "part",
          "text": "site-name - `ld-typo` element containing the site name"
        },
        {
          "name": "part",
          "text": "spacer - Element adding the space between the default slot and the end slot"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "hidden",
          "type": "boolean",
          "mutable": true,
          "attr": "hidden",
          "reflectToAttr": false,
          "docs": "Hides header.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "hideOnScroll",
          "type": "boolean",
          "mutable": false,
          "attr": "hide-on-scroll",
          "reflectToAttr": false,
          "docs": "Hide the header when the user scrolls down and show it again, when the user scrolls up.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "logoTitle",
          "type": "string",
          "mutable": false,
          "attr": "logo-title",
          "reflectToAttr": false,
          "docs": "Title attribute of the logo link.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "logoUrl",
          "type": "string",
          "mutable": false,
          "attr": "logo-url",
          "reflectToAttr": false,
          "docs": "URL that the logo links to.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "siteName",
          "type": "string",
          "mutable": false,
          "attr": "site-name",
          "reflectToAttr": false,
          "docs": "Name shown on the right side of the logo.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "sticky",
          "type": "boolean",
          "mutable": false,
          "attr": "sticky",
          "reflectToAttr": false,
          "docs": "Make the header sticky.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [
        {
          "name": "end",
          "docs": "Items on the right side of the header."
        },
        {
          "name": "logo",
          "docs": "Custom logo."
        },
        {
          "name": "start",
          "docs": "Items on the left side of the header."
        }
      ],
      "parts": [
        {
          "name": "container",
          "docs": "Actual header element that limits the width of the header content"
        },
        {
          "name": "logo",
          "docs": "The default logo"
        },
        {
          "name": "logo-wrapper",
          "docs": "The element wrapping the logo slot (div or anchor, if linked)"
        },
        {
          "name": "site-name",
          "docs": "`ld-typo` element containing the site name"
        },
        {
          "name": "spacer",
          "docs": "Element adding the space between the default slot and the end slot"
        }
      ],
      "dependents": [],
      "dependencies": [
        "ld-icon",
        "ld-typo"
      ],
      "dependencyGraph": {
        "ld-header": [
          "ld-icon",
          "ld-typo"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-icon/ld-icon.tsx",
      "encapsulation": "shadow",
      "tag": "ld-icon",
      "readme": "---\neleventyNavigation:\n  key: Icon\n  parent: Components\nlayout: layout.njk\ntitle: Icon\npermalink: components/ld-icon/\n---\n\n# ld-icon\n\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n\nAn icon provides a visual hint for content or interactions. Combine it with textual information for a better user experience. When using an icon on its own, make sure to either apply an [`aria-label`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-label_attribute) or use the [ld-sr-only](components/ld-sr-only/) component.\n\n---\n\n## Examples\n\n{% example %}\n<ld-icon name=\"placeholder\"></ld-icon>\n\n<!-- CSS component -->\n\n<span class=\"ld-icon\" role=\"presentation\">\n  <svg viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n  </svg>\n</span>\n{% endexample %}\n\n### Different sizes\n\n{% example %}\n<ld-icon name=\"placeholder\" size=\"sm\"></ld-icon>\n\n<ld-icon name=\"placeholder\"></ld-icon>\n\n<ld-icon name=\"placeholder\" size=\"lg\"></ld-icon>\n\n<!-- CSS component -->\n\n<span class=\"ld-icon ld-icon--sm\" role=\"presentation\">\n  <svg viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n  </svg>\n</span>\n\n<span class=\"ld-icon\" role=\"presentation\">\n  <svg viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n  </svg>\n</span>\n\n<span class=\"ld-icon ld-icon--lg\" role=\"presentation\">\n  <svg viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n  </svg>\n</span>\n{% endexample %}\n\n### Color\n\nLiquid's icons use the [`currentColor`](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#currentcolor_keyword) value for fills or strokes, which means that you can adjust the icon color by setting the `color` property value of the `ld-icon` component or a wrapping element.\n\n{% example %}\n<ld-icon name=\"placeholder\" style=\"color: var(--ld-col-vc)\"></ld-icon>\n\n<span style=\"color: var(--ld-col-vg)\">\n  <ld-icon name=\"placeholder\"></ld-icon>\n</span>\n\n<!-- CSS component -->\n\n<span class=\"ld-icon\" role=\"presentation\" style=\"color: var(--ld-col-vc)\">\n  <svg viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n  </svg>\n</span>\n\n<span style=\"color: var(--ld-col-vg)\">\n  <span class=\"ld-icon\" role=\"presentation\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n</span>\n{% endexample %}\n\n### With custom SVG icon\n\n{% example %}\n<ld-icon>\n  <svg viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M16.48 20.335a3.622 3.622 0 01-7.244 0h7.244zm2.748-6.48l2.024 1.94c.297.284.464.677.464 1.088v.801c0 .833-.675 1.51-1.508 1.51h-14.7A1.51 1.51 0 014 17.683v-.76c0-.434.188-.848.516-1.134l1.922-1.683c.328-.286.516-.7.516-1.135V8.858a5.878 5.878 0 013.498-5.37c.556-.249.931-.78.931-1.39v-.622a1.476 1.476 0 112.952 0v.622c0 .61.375 1.141.931 1.39 2.06.918 3.5 2.97 3.5 5.37v3.908c0 .411.167.805.463 1.09z\" fill-rule=\"evenodd\"/></svg>\n</ld-icon>\n\n<!-- CSS component -->\n\n<span class=\"ld-icon\" role=\"presentation\">\n  <svg viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M16.48 20.335a3.622 3.622 0 01-7.244 0h7.244zm2.748-6.48l2.024 1.94c.297.284.464.677.464 1.088v.801c0 .833-.675 1.51-1.508 1.51h-14.7A1.51 1.51 0 014 17.683v-.76c0-.434.188-.848.516-1.134l1.922-1.683c.328-.286.516-.7.516-1.135V8.858a5.878 5.878 0 013.498-5.37c.556-.249.931-.78.931-1.39v-.622a1.476 1.476 0 112.952 0v.622c0 .61.375 1.141.931 1.39 2.06.918 3.5 2.97 3.5 5.37v3.908c0 .411.167.805.463 1.09z\" fill-rule=\"evenodd\"/></svg>\n</span>\n{% endexample %}\n\n## Available icons\n\nAll icons listed below are bundled with Liquid. As a developer, you don't need to download any of the icons. Just use the `ld-icon` component and insert the name of the desired icon, as illustrated in the examples above. Right-click on the icons below to copy their technical names for use in the `ld-icon` component.\n\nLeft-click an icon below to download its SVG file. To download all icons at once, use this button:\n\n<ld-button class=\"ld-theme-bubblegum\" href=\"https://downgit.github.io/#/home?url=https:%2F%2Fgithub.com%2Femdgroup-liquid%2Fliquid%2Ftree%2Fdevelop%2Fsrc%2Fliquid%2Fcomponents%2Fld-icon%2Fassets\">Download all icons</ld-button>\n\n<docs-icon-group name=\"System Technical\">\n  <docs-icon identifier=\"phone\" name=\"Phone\"></docs-icon>\n  <docs-icon identifier=\"bin\" name=\"Bin\"></docs-icon>\n  <docs-icon identifier=\"lock-save\" name=\"Lock Save\"></docs-icon>\n  <docs-icon identifier=\"bulb\" name=\"Bulb\"></docs-icon>\n  <docs-icon identifier=\"layer\" name=\"Layer\"></docs-icon>\n  <docs-icon identifier=\"dashboard\" name=\"Dashboard\"></docs-icon>\n  <docs-icon identifier=\"control\" name=\"Control\"></docs-icon>\n  <docs-icon identifier=\"house\" name=\"House\"></docs-icon>\n  <docs-icon identifier=\"favorite\" name=\"Favorite\"></docs-icon>\n  <docs-icon identifier=\"mail\" name=\"Mail\"></docs-icon>\n  <docs-icon identifier=\"settings\" name=\"Settings\"></docs-icon>\n  <docs-icon identifier=\"m-card\" name=\"M Card\"></docs-icon>\n  <docs-icon identifier=\"user\" name=\"User\"></docs-icon>\n  <docs-icon identifier=\"clip\" name=\"Clip\"></docs-icon>\n  <docs-icon identifier=\"share\" name=\"Share\"></docs-icon>\n  <docs-icon identifier=\"wi-fi\" name=\"Wi Fi\"></docs-icon>\n  <docs-icon identifier=\"shield\" name=\"Shield\"></docs-icon>\n  <docs-icon identifier=\"secure-conncetion\" name=\"Secure Conncetion\"></docs-icon>\n  <docs-icon identifier=\"security\" name=\"Security\"></docs-icon>\n</docs-icon-group>\n\n<docs-icon-group name=\"UXSD\">\n  <docs-icon identifier=\"ux\" name=\"UX\"></docs-icon>\n  <docs-icon identifier=\"donut\" name=\"Donut\"></docs-icon>\n  <docs-icon identifier=\"beard\" name=\"Beard\"></docs-icon>\n  <docs-icon identifier=\"sock\" name=\"Sock\"></docs-icon>\n  <docs-icon identifier=\"website\" name=\"Website\"></docs-icon>\n  <docs-icon identifier=\"monkey\" name=\"Monkey\"></docs-icon>\n  <docs-icon identifier=\"baby\" name=\"Baby\"></docs-icon>\n  <docs-icon identifier=\"choir\" name=\"Choir\"></docs-icon>\n  <docs-icon identifier=\"cabriolet\" name=\"Cabriolet\"></docs-icon>\n  <docs-icon identifier=\"football\" name=\"Football\"></docs-icon>\n  <docs-icon identifier=\"plant\" name=\"Plant\"></docs-icon>\n  <docs-icon identifier=\"youtube\" name=\"YouTube\"></docs-icon>\n  <docs-icon identifier=\"pisces\" name=\"Pisces\"></docs-icon>\n  <docs-icon identifier=\"san-francisco\" name=\"San Francisco\"></docs-icon>\n  <docs-icon identifier=\"gamepad\" name=\"Gamepad\"></docs-icon>\n  <docs-icon identifier=\"tea-pot\" name=\"Tea Pot\"></docs-icon>\n  <docs-icon identifier=\"burger\" name=\"Burger\"></docs-icon>\n  <docs-icon identifier=\"meetup\" name=\"Meetup\"></docs-icon>\n  <docs-icon identifier=\"matryoshka\" name=\"Matryoshka\"></docs-icon>\n</docs-icon-group>\n\n<docs-icon-group name=\"Documentation\">\n  <docs-icon identifier=\"documents\" name=\"Documents\"></docs-icon>\n  <docs-icon identifier=\"pdf\" name=\"PDF\"></docs-icon>\n  <docs-icon identifier=\"zip\" name=\"ZIP\"></docs-icon>\n  <docs-icon identifier=\"documents-storage\" name=\"Documents Storage\"></docs-icon>\n  <docs-icon identifier=\"files\" name=\"Files\"></docs-icon>\n  <docs-icon identifier=\"jpeg\" name=\"JPEG\"></docs-icon>\n</docs-icon-group>\n\n<docs-icon-group name=\"Technology\">\n  <docs-icon identifier=\"camera\" name=\"Camera\"></docs-icon>\n  <docs-icon identifier=\"camcorder\" name=\"Camcorder\"></docs-icon>\n  <docs-icon identifier=\"data-storage\" name=\"Data Storage\"></docs-icon>\n  <docs-icon identifier=\"cloud\" name=\"Cloud\"></docs-icon>\n  <docs-icon identifier=\"cloud-download\" name=\"Cloud Download\"></docs-icon>\n  <docs-icon identifier=\"cloud-upload\" name=\"Cloud Upload\"></docs-icon>\n  <docs-icon identifier=\"laptop\" name=\"Laptop\"></docs-icon>\n  <docs-icon identifier=\"mobile\" name=\"Mobile\"></docs-icon>\n  <docs-icon identifier=\"laptop-mobile\" name=\"Laptop + Mobile\"></docs-icon>\n  <docs-icon identifier=\"watch\" name=\"Watch\"></docs-icon>\n  <docs-icon identifier=\"vr\" name=\"VR\"></docs-icon>\n  <docs-icon identifier=\"battery\" name=\"Battery\"></docs-icon>\n  <docs-icon identifier=\"battery-full\" name=\"Battery Full\"></docs-icon>\n  <docs-icon identifier=\"battery-half\" name=\"Battery Half\"></docs-icon>\n  <docs-icon identifier=\"battery-low\" name=\"Battery Low\"></docs-icon>\n  <docs-icon identifier=\"battery-empty\" name=\"Battery Empty\"></docs-icon>\n</docs-icon-group>\n\n<docs-icon-group name=\"Healtcare\">\n  <docs-icon identifier=\"pulse\" name=\"Pulse\"></docs-icon>\n  <docs-icon identifier=\"syringe\" name=\"Syringe\"></docs-icon>\n  <docs-icon identifier=\"monitor\" name=\"Monitor\"></docs-icon>\n  <docs-icon identifier=\"big-cross\" name=\"Big Cross\"></docs-icon>\n  <docs-icon identifier=\"pill\" name=\"Pill\"></docs-icon>\n  <docs-icon identifier=\"medicine\" name=\"Medicine\"></docs-icon>\n  <docs-icon identifier=\"medical-file\" name=\"Medical File\"></docs-icon>\n  <docs-icon identifier=\"stethoscope\" name=\"Stethoscope\"></docs-icon>\n  <docs-icon identifier=\"first-aid\" name=\"First Aid\"></docs-icon>\n</docs-icon-group>\n\n<docs-icon-group name=\"Science\">\n  <docs-icon identifier=\"flask\" name=\"Flask\"></docs-icon>\n  <docs-icon identifier=\"test-tube\" name=\"Test Tube\"></docs-icon>\n  <docs-icon identifier=\"pipette\" name=\"Pipette\"></docs-icon>\n  <docs-icon identifier=\"beaker\" name=\"Beaker\"></docs-icon>\n  <docs-icon identifier=\"bottle\" name=\"Bottle\"></docs-icon>\n  <docs-icon identifier=\"dna\" name=\"DNA\"></docs-icon>\n  <docs-icon identifier=\"atom\" name=\"Atom\"></docs-icon>\n  <docs-icon identifier=\"bacteria-microscope-view\" name=\"Bacteria Microscope View\"></docs-icon>\n  <docs-icon identifier=\"virus\" name=\"Virus\"></docs-icon>\n  <docs-icon identifier=\"microscope\" name=\"Microscope\"></docs-icon>\n  <docs-icon identifier=\"scientific-paper\" name=\"Scientific Paper\"></docs-icon>\n</docs-icon-group>\n\n<docs-icon-group name=\"Creative Break\">\n  <docs-icon identifier=\"pretzel\" name=\"Pretzel\"></docs-icon>\n  <docs-icon identifier=\"coffe\" name=\"Coffe\"></docs-icon>\n  <docs-icon identifier=\"pen\" name=\"Pen\"></docs-icon>\n  <docs-icon identifier=\"chat\" name=\"Chat\"></docs-icon>\n  <docs-icon identifier=\"conversation\" name=\"Conversation\"></docs-icon>\n  <docs-icon identifier=\"scissors\" name=\"Scissors\"></docs-icon>\n  <docs-icon identifier=\"education\" name=\"Education\"></docs-icon>\n  <docs-icon identifier=\"keys\" name=\"Keys\"></docs-icon>\n  <docs-icon identifier=\"puzzle\" name=\"Puzzle\"></docs-icon>\n  <docs-icon identifier=\"3d\" name=\"3D\"></docs-icon>\n</docs-icon-group>\n\n<docs-icon-group name=\"Transport\">\n  <docs-icon identifier=\"truck\" name=\"Truck\"></docs-icon>\n  <docs-icon identifier=\"location\" name=\"Location\"></docs-icon>\n  <docs-icon identifier=\"world\" name=\"World\"></docs-icon>\n  <docs-icon identifier=\"plane\" name=\"Plane\"></docs-icon>\n  <docs-icon identifier=\"energy\" name=\"Energy\"></docs-icon>\n  <docs-icon identifier=\"rocket\" name=\"Rocket\"></docs-icon>\n  <docs-icon identifier=\"car\" name=\"Car\"></docs-icon>\n  <docs-icon identifier=\"electric-car\" name=\"Electric Car\"></docs-icon>\n  <docs-icon identifier=\"logistic\" name=\"Logistic\"></docs-icon>\n  <docs-icon identifier=\"satelite\" name=\"Satelite\"></docs-icon>\n</docs-icon-group>\n\n<docs-icon-group name=\"Finance\">\n  <docs-icon identifier=\"euro\" name=\"Euro\"></docs-icon>\n  <docs-icon identifier=\"pound\" name=\"Pound\"></docs-icon>\n  <docs-icon identifier=\"dollar\" name=\"Dollar\"></docs-icon>\n  <docs-icon identifier=\"bitcoin\" name=\"Bitcoin\"></docs-icon>\n  <docs-icon identifier=\"cost-center\" name=\"Cost Center\"></docs-icon>\n  <docs-icon identifier=\"money\" name=\"Money\"></docs-icon>\n  <docs-icon identifier=\"credit-card\" name=\"Credit Card\"></docs-icon>\n  <docs-icon identifier=\"savings\" name=\"Savings\"></docs-icon>\n  <docs-icon identifier=\"finance\" name=\"Finance\"></docs-icon>\n</docs-icon-group>\n\n<docs-icon-group name=\"Shopping\">\n  <docs-icon identifier=\"coupon\" name=\"Coupon\"></docs-icon>\n  <docs-icon identifier=\"basket\" name=\"Basket\"></docs-icon>\n</docs-icon-group>\n\n<docs-icon-group name=\"Sustainability\">\n  <docs-icon identifier=\"eco\" name=\"Eco\"></docs-icon>\n  <docs-icon identifier=\"solar-power\" name=\"Solar Power\"></docs-icon>\n</docs-icon-group>\n\n<docs-icon-group name=\"Modifiers\">\n  <docs-icon identifier=\"add\" name=\"Add\"></docs-icon>\n  <docs-icon identifier=\"magnifier\" name=\"Magnifier\"></docs-icon>\n  <docs-icon identifier=\"cross\" name=\"Cross\"></docs-icon>\n  <docs-icon identifier=\"option\" name=\"Option\"></docs-icon>\n  <docs-icon identifier=\"attention\" name=\"Attention\"></docs-icon>\n  <docs-icon identifier=\"list\" name=\"List\"></docs-icon>\n  <docs-icon identifier=\"burger-menu\" name=\"Burger Menu\"></docs-icon>\n  <docs-icon identifier=\"cards\" name=\"Cards\"></docs-icon>\n  <docs-icon identifier=\"navigator\" name=\"Navigator\"></docs-icon>\n  <docs-icon identifier=\"external-export\" name=\"External/ Export\"></docs-icon>\n  <docs-icon identifier=\"upload\" name=\"Upload\"></docs-icon>\n  <docs-icon identifier=\"repost\" name=\"Repost\"></docs-icon>\n  <docs-icon identifier=\"visibility\" name=\"Visibility\"></docs-icon>\n  <docs-icon identifier=\"checkmark\" name=\"Checkmark\"></docs-icon>\n  <docs-icon identifier=\"filter\" name=\"Filter\"></docs-icon>\n  <docs-icon identifier=\"play\" name=\"Play\"></docs-icon>\n  <docs-icon identifier=\"pause\" name=\"Pause\"></docs-icon>\n  <docs-icon identifier=\"stop\" name=\"Stop\"></docs-icon>\n  <docs-icon identifier=\"rewind\" name=\"Rewind\"></docs-icon>\n  <docs-icon identifier=\"fast-forward\" name=\"Fast Forward\"></docs-icon>\n  <docs-icon identifier=\"audio\" name=\"Audio\"></docs-icon>\n  <docs-icon identifier=\"mic\" name=\"Mic\"></docs-icon>\n  <docs-icon identifier=\"arrow-down\" name=\"Arrow Down\"></docs-icon>\n  <docs-icon identifier=\"arrow-up\" name=\"Arrow Up\"></docs-icon>\n  <docs-icon identifier=\"arrow-left\" name=\"Arrow Left\"></docs-icon>\n  <docs-icon identifier=\"arrow-right\" name=\"Arrow Right\"></docs-icon>\n  <docs-icon identifier=\"arrow-up-n-down\" name=\"Arrow Up n’Down\"></docs-icon>\n  <docs-icon identifier=\"arrow-double-left\" name=\"Arrow Double Left\"></docs-icon>\n  <docs-icon identifier=\"arrow-double-right\" name=\"Arrow Double Right\"></docs-icon>\n  <docs-icon identifier=\"real-arrow\" name=\"Real Arrow\"></docs-icon>\n  <docs-icon identifier=\"star\" name=\"Star\"></docs-icon>\n  <docs-icon identifier=\"half-star\" name=\"Half Star\"></docs-icon>\n  <docs-icon identifier=\"dot\" name=\"Dot\"></docs-icon>\n  <docs-icon identifier=\"half-dot\" name=\"Half Dot\"></docs-icon>\n  <docs-icon identifier=\"calendar\" name=\"Calendar\"></docs-icon>\n  <docs-icon identifier=\"clock\" name=\"Clock\"></docs-icon>\n  <docs-icon identifier=\"bell\" name=\"Bell\"></docs-icon>\n  <docs-icon identifier=\"copy\" name=\"Copy\"></docs-icon>\n  <docs-icon identifier=\"hyperlink\" name=\"Hyperlink\"></docs-icon>\n</docs-icon-group>\n",
      "docs": "---\neleventyNavigation:\n  key: Icon\n  parent: Components\nlayout: layout.njk\ntitle: Icon\npermalink: components/ld-icon/\n---",
      "docsTags": [
        {
          "name": "slot",
          "text": "- (optional) Custom SVG icon (only valid without name prop)."
        },
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "icon - Actual SVG element"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The icon name.",
          "docsTags": [],
          "default": "null",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "\"lg\" | \"sm\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Size of the icon.",
          "docsTags": [],
          "values": [
            {
              "value": "lg",
              "type": "string"
            },
            {
              "value": "sm",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [
        {
          "name": "",
          "docs": "(optional) Custom SVG icon (only valid without name prop)."
        }
      ],
      "parts": [
        {
          "name": "icon",
          "docs": "Actual SVG element"
        }
      ],
      "dependents": [
        "ld-accordion-toggle",
        "ld-badge",
        "ld-header",
        "ld-input-message",
        "ld-notice",
        "ld-pagination",
        "ld-sidenav-header",
        "ld-sidenav-navitem",
        "ld-sidenav-toggle-outside",
        "ld-step"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "ld-accordion-toggle": [
          "ld-icon"
        ],
        "ld-badge": [
          "ld-icon"
        ],
        "ld-header": [
          "ld-icon"
        ],
        "ld-input-message": [
          "ld-icon"
        ],
        "ld-notice": [
          "ld-icon"
        ],
        "ld-pagination": [
          "ld-icon"
        ],
        "ld-sidenav-header": [
          "ld-icon"
        ],
        "ld-sidenav-navitem": [
          "ld-icon"
        ],
        "ld-sidenav-toggle-outside": [
          "ld-icon"
        ],
        "ld-step": [
          "ld-icon"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-input/ld-input.tsx",
      "encapsulation": "shadow",
      "tag": "ld-input",
      "readme": "---\neleventyNavigation:\n  key: Input\n  parent: Components\nlayout: layout.njk\ntitle: Input\npermalink: components/ld-input/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-input.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-button.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-label.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-input-message.css\">\n\n# ld-input\n\nThe `ld-input` component can be used in forms to accept data from the user. While the [native HTML input element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input) supports a wide variety of types of input data and offers different control widgets, depending on the user agent, this component supports only a subset of the types available in the native HTML input element. All officially supported types of `ld-input` are documented here. Other form input widgets either have been implemented as separate components or may eventually be concidered for implementation in the future.\n\nThis component can be used in conjunction with the [`ld-label`](components/ld-label/) and the [`ld-input-message`](components/ld-input-message/) component.\n\n---\n\n## Examples\n\n### Default\n\nBy default, the `ld-input` component is of [type `text`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text).\n\n{% example %}\n<ld-input placeholder=\"Placeholder\"></ld-input>\n\n<ld-input value=\"Value\"></ld-input>\n\n<!-- CSS component -->\n\n<div class=\"ld-input\">\n  <input placeholder=\"Placeholder\">\n</div>\n\n<div class=\"ld-input\">\n  <input placeholder=\"Placeholder\" value=\"Value\">\n</div>\n{% endexample %}\n\n### Disabled\n\n{% example %}\n<ld-input placeholder=\"Placeholder\" disabled></ld-input>\n\n<ld-input disabled value=\"Value\"></ld-input>\n\n<!-- CSS component -->\n\n<div class=\"ld-input ld-input--disabled\">\n  <input placeholder=\"Placeholder\" disabled>\n</div>\n\n<div class=\"ld-input ld-input--disabled\">\n  <input placeholder=\"Placeholder\" value=\"Value\" disabled>\n</div>\n{% endexample %}\n\n**If you want the input to stay focusable** even if it is disabled, use `aria-disabled` in place of `disabled`:\n\n{% example %}\n<ld-input placeholder=\"Placeholder\" aria-disabled=\"true\"></ld-input>\n\n<ld-input aria-disabled=\"true\" value=\"Value\"></ld-input>\n\n<!-- CSS component -->\n\n<div class=\"ld-input ld-input--disabled\">\n  <input\n    placeholder=\"Placeholder\"\n    aria-disabled=\"true\"\n    id=\"focusable-disabled-input-1\">\n</div>\n\n<div class=\"ld-input ld-input--disabled\">\n  <input\n    placeholder=\"Placeholder\"\n    value=\"Value\"\n    aria-disabled=\"true\"\n    id=\"focusable-disabled-input-2\">\n</div>\n\n<!-- Example code for input prevention on aria-disabled input elements -->\n<script>\n  const inputs = document.querySelectorAll('#focusable-disabled-input-1, #focusable-disabled-input-2')\n  Array.from(inputs).forEach(input => {\n    const initialValue = input.value\n    input.addEventListener('input', () => {\n      input.value = initialValue\n    })\n  })\n</script>\n{% endexample %}\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  When <code>aria-disabled</code> is applied on the input, the component will try to prevent user input by resetting the input to its previous value on each input event. However, if you are using the CSS component version of <code>ld-input</code> with <code>aria-disabled</code>, you will have to prevent the default behaviour of the input element yourself. \n</ld-notice>\n\n### Dark\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  Dark tone inputs should only be used on white backgrounds.\n</ld-notice>\n\n{% example '{ \"background\": \"light\" }' %}\n<ld-input tone=\"dark\" placeholder=\"Placeholder\"></ld-input>\n\n<ld-input tone=\"dark\" placeholder=\"Placeholder\" disabled></ld-input>\n\n<!-- CSS component -->\n\n<div class=\"ld-input ld-input--dark\">\n  <input placeholder=\"Placeholder\">\n</div>\n\n<div class=\"ld-input ld-input--dark ld-input--disabled\">\n  <input placeholder=\"Placeholder\" disabled>\n</div>\n{% endexample %}\n\n### Invalid\n\n{% example %}\n<ld-input invalid placeholder=\"Placeholder\"></ld-input>\n\n<!-- CSS component -->\n\n<div class=\"ld-input ld-input--invalid\">\n  <input placeholder=\"Placeholder\">\n</div>\n{% endexample %}\n\n### Type date\n\n{% example %}\n<ld-input placeholder=\"Birthday\" type=\"date\" value=\"2017-06-01\"></ld-input>\n\n<!-- CSS component -->\n\n<div class=\"ld-input\">\n  <input placeholder=\"Birthday\" type=\"date\" value=\"2017-06-01\">\n</div>\n{% endexample %}\n\n### Type email\n\nTriggerts associated keyboard in supporting browsers and devices with dynamic keyboards.\n\n{% example %}\n<ld-input placeholder=\"Your email address\" type=\"email\"></ld-input>\n\n<!-- CSS component -->\n\n<div class=\"ld-input\">\n  <input placeholder=\"Your email address\" type=\"email\">\n</div>\n{% endexample %}\n\n### Type file\n\n{% example %}\n<ld-input placeholder=\"Your profile image\" type=\"file\"></ld-input>\n{% endexample %}\n\n### Type number\n\n{% example %}\n<ld-input placeholder=\"Your age in years\" type=\"number\" min=\"0\"></ld-input>\n\n<!-- CSS component -->\n\n<div class=\"ld-input\">\n  <input placeholder=\"Your age in years\" type=\"number\" min=\"0\">\n</div>\n{% endexample %}\n\n### Type password\n\n{% example %}\n<ld-input placeholder=\"Password\" type=\"password\" min=\"0\"></ld-input>\n\n<!-- CSS component -->\n\n<div class=\"ld-input\">\n  <input placeholder=\"Password\" type=\"password\" min=\"0\">\n</div>\n{% endexample %}\n\n### Type search\n\n{% example %}\n<ld-input placeholder=\"Search\" type=\"search\"></ld-input>\n\n<!-- CSS component -->\n\n<div class=\"ld-input\">\n  <input placeholder=\"Search\" type=\"search\">\n</div>\n{% endexample %}\n\n### Type tel\n\nTriggers a telephone keypad in some devices with dynamic keypads.\n\n{% example %}\n<ld-input placeholder=\"Your phone number\" type=\"tel\"></ld-input>\n\n<!-- CSS component -->\n\n<div class=\"ld-input\">\n  <input placeholder=\"Your phone number\" type=\"tel\">\n</div>\n{% endexample %}\n\n### Type time\n\n{% example %}\n<ld-input placeholder=\"Time of reservation\" type=\"time\" value=\"13:30\"></ld-input>\n\n<!-- CSS component -->\n\n<div class=\"ld-input\">\n  <input placeholder=\"Time of reservation\" type=\"time\" value=\"13:30\">\n</div>\n{% endexample %}\n\n### Type url\n\nTriggerts associated keyboard in supporting browsers and devices with dynamic keyboards.\n\n{% example %}\n<ld-input placeholder=\"Your website URL\" type=\"url\"></ld-input>\n\n<!-- CSS component -->\n\n<div class=\"ld-input\">\n  <input placeholder=\"Your website URL\" type=\"url\">\n</div>\n{% endexample %}\n\n### Multiline (as textarea)\n\nThe `multiline` attribute transforms the component to a textarea element instead of an input element internally. Setting this attribute to `true` disables the attribute `type` and both slots.\n\n{% example %}\n<ld-input placeholder=\"Tell us your story...\" multiline rows=\"5\" cols=\"33\"></ld-input>\n\n<!-- CSS component -->\n\n<div class=\"ld-input\">\n  <textarea placeholder=\"Tell us your story...\" rows=\"5\" cols=\"33\"></textarea>\n</div>\n{% endexample %}\n\n#### Resizing\n\nYou can change the way how the multiline input element can be resized by the user by applying the `resize` prop on the `ld-input` element.\n\n{% example %}\n<ld-input resize=\"horizontal\" placeholder=\"Tell us your story...\" multiline rows=\"5\" cols=\"33\"></ld-input>\n\n<ld-input resize=\"vertical\" placeholder=\"Tell us your story...\" multiline rows=\"5\" cols=\"33\"></ld-input>\n\n<!-- CSS component -->\n\n<div class=\"ld-input ld-input--resize-horizontal\">\n  <textarea placeholder=\"Tell us your story...\" rows=\"5\" cols=\"33\"></textarea>\n</div>\n\n<div class=\"ld-input ld-input--resize-vertical\">\n  <textarea placeholder=\"Tell us your story...\" rows=\"5\" cols=\"33\"></textarea>\n</div>\n{% endexample %}\n\n### Size\n\n{% example %}\n<ld-input placeholder=\"Placeholder\" size=\"sm\"></ld-input>\n\n<ld-input placeholder=\"Placeholder\"></ld-input>\n\n<ld-input placeholder=\"Placeholder\" size=\"lg\"></ld-input>\n\n<!-- CSS component -->\n\n<div class=\"ld-input ld-input--sm\">\n  <input placeholder=\"Placeholder\">\n</div>\n\n<div class=\"ld-input\">\n  <input placeholder=\"Placeholder\">\n</div>\n\n<div class=\"ld-input ld-input--lg\">\n  <input placeholder=\"Placeholder\">\n</div>\n{% endexample %}\n\n### With label\n\n{% example %}\n<ld-label>\n  Email Address\n  <ld-input placeholder=\"jane.doe@example.com\" type=\"email\"></ld-input>\n</ld-label>\n\n<!-- CSS component -->\n\n<label class=\"ld-label\">\n  Email Address\n  <div class=\"ld-input\">\n    <input placeholder=\"jane.doe@example.com\" type=\"email\">\n  </div>\n</label>\n{% endexample %}\n\nPlease reffer to the [ld-label](components/ld-label/) docs for more information on the label component.\n\n### With label and input message\n\n{% example %}\n<div style=\"display: grid; gap: 1rem; grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr)); width: 100%\">\n  <ld-label>\n    Email Address\n    <ld-input invalid placeholder=\"jane.doe@example.com\" value=\"yolo\" type=\"email\"></ld-input>\n    <ld-input-message>The email address is invalid.</ld-input-message>\n  </ld-label>\n\n  <ld-label>\n    Password\n    <ld-input type=\"password\" value=\"asdf1234\"></ld-input>\n    <ld-input-message mode=\"info\">Use at least one special character (~!@#$%^&*_-+=|\\(){}[]:;<>,.?/)</ld-input-message>\n  </ld-label>\n</div>\n\n<!-- CSS component -->\n\n<div style=\"display: grid; gap: 1rem; grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr)); width: 100%\">\n  <label class=\"ld-label\">\n    Email Address\n    <div class=\"ld-input ld-input--invalid\">\n      <input placeholder=\"jane.doe@example.com\" value=\"yolo\" type=\"email\">\n    </div>\n    <span class=\"ld-input-message ld-input-message--error\">\n      <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"currentColor\"/>\n        <path d=\"M4.66675 4.66699L9.33341 9.33366\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        <path d=\"M4.66675 9.33301L9.33341 4.66634\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      </svg>\n      The email address is invalid.\n    </span>\n  </label>\n  \n  <label class=\"ld-label\">\n    Password\n    <div class=\"ld-input\">\n      <input type=\"password\" value=\"asdf1234\">\n    </div>\n    <span class=\"ld-input-message\">\n      <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"var(--ld-thm-warning)\"/>\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.18234 11.0254C6.79228 11.0254 6.48657 10.9147 6.26518 10.6933C6.0438 10.472 5.93311 10.1662 5.93311 9.77618V6.12335C5.93311 5.99685 6.0069 5.93359 6.15449 5.93359H6.89771C7.28776 5.93359 7.59348 6.04428 7.81487 6.26567C8.03625 6.48705 8.14694 6.79277 8.14694 7.18283V10.8357C8.14694 10.9622 8.07315 11.0254 7.92556 11.0254H7.18234Z\" fill=\"var(--ld-col-neutral-900)\"/>\n        <ellipse cx=\"6.99977\" cy=\"3.80007\" rx=\"1.06667\" ry=\"1.06667\" fill=\"var(--ld-col-neutral-900)\"/>\n      </svg>\n      Use at least one special character (~!@#$%^&*_-+=|\\(){}[]:;<>,.?/)\n    </span>\n  </label>\n</div>\n{% endexample %}\n\n#### On input message width and placement\n\nBy default, the input field stretches to the maximum width of its wrapping label, which in turn stretches to the width of its content (the computed width of the `ld-input-message` component). So, if you want to set certain constraints on the width of all three components, you can do so by setting the constraint on the wrapping element – the `ld-label` component.\n\n{% example %}\n<ld-label>\n  Email Address\n  <ld-input placeholder=\"jane.doe@example.com\" type=\"email\"></ld-input>\n  <ld-input-message mode=\"info\">This info message is extremely long and makes all three components (the label, the input and itself) grow horizontaly.</ld-input-message>\n</ld-label>\n\n<ld-label style=\"max-width: 20rem\">\n  Email Address\n  <ld-input placeholder=\"jane.doe@example.com\" type=\"email\"></ld-input>\n  <ld-input-message mode=\"info\">This info message is also extremely long, but since the label has a max width, all three components (the label, the input and itself) can take only the maximum width of the label.</ld-input-message>\n</ld-label>\n\n<!-- CSS component -->\n\n<label class=\"ld-label\">\n  Email Address\n  <div class=\"ld-input\">\n    <input placeholder=\"jane.doe@example.com\" type=\"email\">\n  </div>\n  <span class=\"ld-input-message\">\n      <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"var(--ld-thm-warning)\"/>\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.18234 11.0254C6.79228 11.0254 6.48657 10.9147 6.26518 10.6933C6.0438 10.472 5.93311 10.1662 5.93311 9.77618V6.12335C5.93311 5.99685 6.0069 5.93359 6.15449 5.93359H6.89771C7.28776 5.93359 7.59348 6.04428 7.81487 6.26567C8.03625 6.48705 8.14694 6.79277 8.14694 7.18283V10.8357C8.14694 10.9622 8.07315 11.0254 7.92556 11.0254H7.18234Z\" fill=\"var(--ld-col-neutral-900)\"/>\n        <ellipse cx=\"6.99977\" cy=\"3.80007\" rx=\"1.06667\" ry=\"1.06667\" fill=\"var(--ld-col-neutral-900)\"/>\n      </svg>\n    This info message is extremely long and makes all three components (the label, the input and itself) grow horizontaly.\n  </span>\n</label>\n\n<label class=\"ld-label\" style=\"max-width: 20rem\">\n  Email Address\n  <div class=\"ld-input\">\n    <input placeholder=\"jane.doe@example.com\" type=\"email\">\n  </div>\n  <span class=\"ld-input-message\">\n    <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"var(--ld-thm-warning)\"/>\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.18234 11.0254C6.79228 11.0254 6.48657 10.9147 6.26518 10.6933C6.0438 10.472 5.93311 10.1662 5.93311 9.77618V6.12335C5.93311 5.99685 6.0069 5.93359 6.15449 5.93359H6.89771C7.28776 5.93359 7.59348 6.04428 7.81487 6.26567C8.03625 6.48705 8.14694 6.79277 8.14694 7.18283V10.8357C8.14694 10.9622 8.07315 11.0254 7.92556 11.0254H7.18234Z\" fill=\"var(--ld-col-neutral-900)\"/>\n      <ellipse cx=\"6.99977\" cy=\"3.80007\" rx=\"1.06667\" ry=\"1.06667\" fill=\"var(--ld-col-neutral-900)\"/>\n    </svg>\n    This info message is also extremely long, but since the label has a max width, all three components (the label, the input and itself) can take only the maximum width of the label.\n  </span>\n</label>\n{% endexample %}\n\nWhen displaying input messages conditionally (i.e. an error message becomes visible as soon as an input has been interacted with, but the value is still invalid) you should try to position UI elements in a way that prevents [layout shifts](https://web.dev/cls/). For instance, you can “reserve space” for your messages and then make them appear in the reserved space without pushing other content to the bottom (i.e. using `position: absolute` or some “flexy” layout). Needless to say, results look best if you keep the messages short.\n\n### With slotted elements\n\nYou can use [slots](components/ld-input/#slots) in order to add static or interactive elements, such as icons or buttons into the input component.\n\n#### With icon\n\n{% example %}\n<ld-input placeholder=\"Placeholder\" size=\"sm\">\n  <ld-icon name=\"placeholder\" slot=\"end\"></ld-icon>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\" size=\"sm\">\n  <ld-icon name=\"placeholder\" slot=\"start\"></ld-icon>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\" size=\"sm\">\n  <ld-icon name=\"placeholder\" slot=\"start\"></ld-icon>\n  <ld-icon name=\"placeholder\" slot=\"end\"></ld-icon>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\">\n  <ld-icon name=\"placeholder\" slot=\"end\"></ld-icon>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\">\n  <ld-icon name=\"placeholder\" slot=\"start\"></ld-icon>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\">\n  <ld-icon name=\"placeholder\" slot=\"start\"></ld-icon>\n  <ld-icon name=\"placeholder\" slot=\"end\"></ld-icon>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\" size=\"lg\">\n  <ld-icon name=\"placeholder\" slot=\"end\"></ld-icon>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\" size=\"lg\">\n  <ld-icon name=\"placeholder\" slot=\"start\"></ld-icon>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\" size=\"lg\">\n  <ld-icon name=\"placeholder\" slot=\"start\"></ld-icon>\n  <ld-icon name=\"placeholder\" slot=\"end\"></ld-icon>\n</ld-input>\n\n<!-- CSS component -->\n\n<div class=\"ld-input ld-input--sm\">\n  <input placeholder=\"Placeholder\">\n  <span class=\"ld-icon ld-icon--sm\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <title>Text</title>\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n</div>\n\n<div class=\"ld-input ld-input--sm\">\n  <span class=\"ld-icon ld-icon--sm\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <title>Text</title>\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n  <input placeholder=\"Placeholder\">\n</div>\n\n<div class=\"ld-input ld-input--sm\">\n  <span class=\"ld-icon ld-icon--sm\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <title>Text</title>\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n  <input placeholder=\"Placeholder\">\n  <span class=\"ld-icon ld-icon--sm\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <title>Text</title>\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n</div>\n\n<div class=\"ld-input\">\n  <input placeholder=\"Placeholder\">\n  <span class=\"ld-icon\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <title>Text</title>\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n</div>\n\n<div class=\"ld-input\">\n  <span class=\"ld-icon\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <title>Text</title>\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n  <input placeholder=\"Placeholder\">\n</div>\n\n<div class=\"ld-input\">\n  <span class=\"ld-icon\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <title>Text</title>\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n  <input placeholder=\"Placeholder\">\n  <span class=\"ld-icon\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <title>Text</title>\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n</div>\n\n<div class=\"ld-input ld-input--lg\">\n  <input placeholder=\"Placeholder\">\n  <span class=\"ld-icon ld-icon--lg\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <title>Text</title>\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n</div>\n\n<div class=\"ld-input ld-input--lg\">\n  <span class=\"ld-icon ld-icon--lg\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <title>Text</title>\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n  <input placeholder=\"Placeholder\">\n</div>\n\n<div class=\"ld-input ld-input--lg\">\n  <span class=\"ld-icon ld-icon--lg\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <title>Text</title>\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n  <input placeholder=\"Placeholder\">\n  <span class=\"ld-icon ld-icon--lg\">\n    <svg viewBox=\"0 0 24 24\" fill=\"none\">\n      <title>Text</title>\n      <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n    </svg>\n  </span>\n</div>\n{% endexample %}\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  The Web Component <code>ld-input</code> listens for <code>click</code> events on the contained <code>ld-icon</code> component and automatically focuses the input field on icon click. The CSS component version of <code>ld-input</code> doesn't do that.\n</ld-notice>\n\n#### With button\n\n{% example %}\n<ld-input placeholder=\"Placeholder\" size=\"sm\">\n  <ld-button slot=\"end\" aria-label=\"Submit\" >\n    <ld-icon name=\"placeholder\"></ld-icon>\n  </ld-button>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\" size=\"sm\">\n  <ld-button slot=\"end\" >\n    Submit <ld-icon name=\"placeholder\"></ld-icon>\n  </ld-button>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\">\n  <ld-button slot=\"end\" aria-label=\"Submit\">\n    <ld-icon name=\"placeholder\"></ld-icon>\n  </ld-button>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\">\n  <ld-button slot=\"end\">\n    Submit <ld-icon name=\"placeholder\"></ld-icon>\n  </ld-button>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\" size=\"lg\">\n  <ld-button slot=\"end\" aria-label=\"Submit\">\n    <ld-icon name=\"placeholder\"></ld-icon>\n  </ld-button>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\" size=\"lg\">\n  <ld-button slot=\"end\">\n    Submit <ld-icon name=\"placeholder\"></ld-icon>\n  </ld-button>\n</ld-input>\n\n<!-- CSS component -->\n\n<div class=\"ld-input ld-input--sm\">\n  <input placeholder=\"Placeholder\">\n  <button class=\"ld-button ld-button--sm\" aria-label=\"Submit\">\n    <span class=\"ld-icon ld-icon--sm\">\n      <svg viewBox=\"0 0 24 24\" fill=\"none\">\n        <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      </svg>\n    </span>\n  </button>\n</div>\n\n<div class=\"ld-input ld-input--sm\">\n  <input placeholder=\"Placeholder\">\n  <button class=\"ld-button ld-button--sm\">\n    Submit\n    <span class=\"ld-icon ld-icon--sm\">\n      <svg viewBox=\"0 0 24 24\" fill=\"none\">\n        <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      </svg>\n    </span>\n  </button>\n</div>\n\n<div class=\"ld-input\">\n  <input placeholder=\"Placeholder\">\n  <button class=\"ld-button\" aria-label=\"Submit\">\n    <span class=\"ld-icon\">\n      <svg viewBox=\"0 0 24 24\" fill=\"none\">\n        <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      </svg>\n    </span>\n  </button>\n</div>\n\n<div class=\"ld-input\">\n  <input placeholder=\"Placeholder\">\n  <button class=\"ld-button\">\n    Submit\n    <span class=\"ld-icon\">\n      <svg viewBox=\"0 0 24 24\" fill=\"none\">\n        <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      </svg>\n    </span>\n  </button>\n</div>\n\n<div class=\"ld-input ld-input--lg\">\n  <input placeholder=\"Placeholder\">\n  <button class=\"ld-button ld-button--lg\" aria-label=\"Submit\">\n    <span class=\"ld-icon ld-icon--lg\">\n      <svg viewBox=\"0 0 24 24\" fill=\"none\">\n        <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      </svg>\n    </span>\n  </button>\n</div>\n\n<div class=\"ld-input ld-input--lg\">\n  <input placeholder=\"Placeholder\">\n  <button class=\"ld-button ld-button--lg\">\n    Submit\n    <span class=\"ld-icon ld-icon--lg\">\n      <svg viewBox=\"0 0 24 24\" fill=\"none\">\n        <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      </svg>\n    </span>\n  </button>\n</div>\n{% endexample %}\n\n#### With ghost button\n\n{% example %}\n<ld-input placeholder=\"Placeholder\" size=\"sm\">\n  <ld-button mode=\"ghost\" slot=\"end\" aria-label=\"Submit\">\n    <ld-icon name=\"placeholder\"></ld-icon>\n  </ld-button>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\" size=\"sm\">\n  <ld-button mode=\"ghost\" slot=\"start\" aria-label=\"Submit\">\n    <ld-icon name=\"placeholder\"></ld-icon>\n  </ld-button>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\" size=\"sm\">\n  <ld-button mode=\"ghost\" slot=\"start\" aria-label=\"Submit\">\n    <ld-icon name=\"placeholder\"></ld-icon>\n  </ld-button>\n  <ld-button mode=\"ghost\" slot=\"end\" aria-label=\"Submit\">\n    <ld-icon name=\"placeholder\"></ld-icon>\n  </ld-button>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\">\n  <ld-button mode=\"ghost\" slot=\"end\" aria-label=\"Submit\">\n    <ld-icon name=\"placeholder\"></ld-icon>\n  </ld-button>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\">\n  <ld-button mode=\"ghost\" slot=\"start\" aria-label=\"Submit\">\n    <ld-icon name=\"placeholder\"></ld-icon>\n  </ld-button>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\">\n  <ld-button mode=\"ghost\" slot=\"start\" aria-label=\"Submit\">\n    <ld-icon name=\"placeholder\"></ld-icon>\n  </ld-button>\n  <ld-button mode=\"ghost\" slot=\"end\" aria-label=\"Submit\">\n    <ld-icon name=\"placeholder\"></ld-icon>\n  </ld-button>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\" size=\"lg\">\n  <ld-button mode=\"ghost\" slot=\"end\" aria-label=\"Submit\">\n    <ld-icon name=\"placeholder\"></ld-icon>\n  </ld-button>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\" size=\"lg\">\n  <ld-button mode=\"ghost\" slot=\"start\" aria-label=\"Submit\">\n    <ld-icon name=\"placeholder\"></ld-icon>\n  </ld-button>\n</ld-input>\n\n<ld-input placeholder=\"Placeholder\" size=\"lg\">\n  <ld-button mode=\"ghost\" slot=\"start\" aria-label=\"Submit\">\n    <ld-icon name=\"placeholder\"></ld-icon>\n  </ld-button>\n  <ld-button mode=\"ghost\" slot=\"end\" aria-label=\"Submit\">\n    <ld-icon name=\"placeholder\"></ld-icon>\n  </ld-button>\n</ld-input>\n\n<!-- CSS component -->\n\n<div class=\"ld-input ld-input--sm\">\n  <input placeholder=\"Placeholder\">\n  <button class=\"ld-button ld-button--sm ld-button--ghost\" aria-label=\"Submit\">\n    <span class=\"ld-icon ld-icon--sm\">\n      <svg viewBox=\"0 0 24 24\" fill=\"none\">\n        <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      </svg>\n    </span>\n  </button>\n</div>\n\n<div class=\"ld-input ld-input--sm\">\n  <button class=\"ld-button ld-button--sm ld-button--ghost\" aria-label=\"Submit\">\n    <span class=\"ld-icon ld-icon--sm\">\n      <svg viewBox=\"0 0 24 24\" fill=\"none\">\n        <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      </svg>\n    </span>\n  </button>\n  <input placeholder=\"Placeholder\">\n</div>\n\n<div class=\"ld-input ld-input--sm\">\n  <button class=\"ld-button ld-button--sm ld-button--ghost\" aria-label=\"Submit\">\n    <span class=\"ld-icon ld-icon--sm\">\n      <svg viewBox=\"0 0 24 24\" fill=\"none\">\n        <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      </svg>\n    </span>\n  </button>\n  <input placeholder=\"Placeholder\">\n  <button class=\"ld-button ld-button--sm ld-button--ghost\" aria-label=\"Submit\">\n    <span class=\"ld-icon ld-icon--sm\">\n      <svg viewBox=\"0 0 24 24\" fill=\"none\">\n        <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      </svg>\n    </span>\n  </button>\n</div>\n\n<div class=\"ld-input\">\n  <input placeholder=\"Placeholder\">\n  <button class=\"ld-button ld-button--ghost\" aria-label=\"Submit\">\n    <span class=\"ld-icon\">\n      <svg viewBox=\"0 0 24 24\" fill=\"none\">\n        <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      </svg>\n    </span>\n  </button>\n</div>\n\n<div class=\"ld-input\">\n  <button class=\"ld-button ld-button--ghost\" aria-label=\"Submit\">\n    <span class=\"ld-icon\">\n      <svg viewBox=\"0 0 24 24\" fill=\"none\">\n        <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      </svg>\n    </span>\n  </button>\n  <input placeholder=\"Placeholder\">\n</div>\n\n<div class=\"ld-input\">\n  <button class=\"ld-button ld-button--ghost\" aria-label=\"Submit\">\n    <span class=\"ld-icon\">\n      <svg viewBox=\"0 0 24 24\" fill=\"none\">\n        <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      </svg>\n    </span>\n  </button>\n  <input placeholder=\"Placeholder\">\n  <button class=\"ld-button ld-button--ghost\" aria-label=\"Submit\">\n    <span class=\"ld-icon\">\n      <svg viewBox=\"0 0 24 24\" fill=\"none\">\n        <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      </svg>\n    </span>\n  </button>\n</div>\n\n<div class=\"ld-input ld-input--lg\">\n  <input placeholder=\"Placeholder\">\n  <button class=\"ld-button ld-button--lg ld-button--ghost\" aria-label=\"Submit\">\n    <span class=\"ld-icon ld-icon--lg\">\n      <svg viewBox=\"0 0 24 24\" fill=\"none\">\n        <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      </svg>\n    </span>\n  </button>\n</div>\n\n<div class=\"ld-input ld-input--lg\">\n  <button class=\"ld-button ld-button--lg ld-button--ghost\" aria-label=\"Submit\">\n    <span class=\"ld-icon ld-icon--lg\">\n      <svg viewBox=\"0 0 24 24\" fill=\"none\">\n        <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      </svg>\n    </span>\n  </button>\n  <input placeholder=\"Placeholder\">\n</div>\n\n<div class=\"ld-input ld-input--lg\">\n  <button class=\"ld-button ld-button--lg ld-button--ghost\" aria-label=\"Submit\">\n    <span class=\"ld-icon ld-icon--lg\">\n      <svg viewBox=\"0 0 24 24\" fill=\"none\">\n        <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      </svg>\n    </span>\n  </button>\n  <input placeholder=\"Placeholder\">\n  <button class=\"ld-button ld-button--lg ld-button--ghost\" aria-label=\"Submit\">\n    <span class=\"ld-icon ld-icon--lg\">\n      <svg viewBox=\"0 0 24 24\" fill=\"none\">\n        <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n      </svg>\n    </span>\n  </button>\n</div>\n{% endexample %}\n\n#### With custom component\n\n{% example %}\n<ld-input placeholder=\"Placeholder\">\n  <span slot=\"end\">🤓</span>\n</ld-input>\n\n<!-- CSS component -->\n\n<div class=\"ld-input\">\n  <input placeholder=\"Placeholder\">\n  <span>🤓</span>\n</div>\n{% endexample %}\n\n### Input validation\n\nThe `ld-input` Web Component does not provide any properties or methods for validating the input value internally. Instead, it provides a low level API for integrating the component with the form validation solution of your choice. It allows you to listen for `focus`, `input` and `blur` events, as well as custom events (see [Events](components/ld-input/#events) for details).\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  You can find examples for different kinds of input validation in the <a href=\"guides/form-validation/\">Form validation</a> documentation. Please also be aware of differences in event handling compared to native elements that come with Web Components. Details can be found in our <a href=\"guides/event-handling/\">Event handling</a> documentation.\n</ld-notice>\n\n",
      "docs": "The `ld-input` component. You can use it in conjunction with the `ld-label`\nand the `ld-input-message` component. See examples in the docs for a better\nunderstanding on how they can be used together.",
      "docsTags": [
        {
          "name": "slot",
          "text": "start - The purpose of this slot is to add icons or buttons\nto the input, __justifying the item to the end of the component__.\nStyling for `ld-icon` and `ld-button` is provided within the `ld-input` component.\nIf you choose to place something different into the slot, you will probably\nneed to adjust some styles on the slotted item in order to make it fit right."
        },
        {
          "name": "slot",
          "text": "end - The purpose of this slot is to add icons or buttons\nto the input, __justifying the item to the start of the component__.\nStyling for `ld-icon` and `ld-button` is provided within the `ld-input` component.\nIf you choose to place something different into the slot, you will probably\nneed to adjust some styles on the slotted item in order to make it fit right."
        },
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "input - Actual input/textarea element"
        },
        {
          "name": "part",
          "text": "placeholder - Placeholder rendered for input type \"file\""
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "accept",
          "type": "string",
          "mutable": false,
          "attr": "accept",
          "reflectToAttr": false,
          "docs": "Hint for expected file type in file upload controls.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "autocomplete",
          "type": "string",
          "mutable": true,
          "attr": "autocomplete",
          "reflectToAttr": true,
          "docs": "Hint for form autofill feature.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "mutable": false,
          "attr": "autofocus",
          "reflectToAttr": true,
          "docs": "Automatically focus the form control when the page is loaded.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "capture",
          "type": "string",
          "mutable": false,
          "attr": "capture",
          "reflectToAttr": false,
          "docs": "Media capture input method in file upload controls.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "cols",
          "type": "number",
          "mutable": false,
          "attr": "cols",
          "reflectToAttr": false,
          "docs": "The number of columns.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "dirname",
          "type": "string",
          "mutable": false,
          "attr": "dirname",
          "reflectToAttr": false,
          "docs": "Name of form field to use for sending the element's directionality in form submission.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Whether the form control is disabled.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "form",
          "type": "string",
          "mutable": false,
          "attr": "form",
          "reflectToAttr": false,
          "docs": "Associates the control with a form element.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "mutable": false,
          "attr": "invalid",
          "reflectToAttr": false,
          "docs": "Set this property to `true` in order to mark the field visually as invalid.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ldTabindex",
          "type": "number",
          "mutable": false,
          "attr": "ld-tabindex",
          "reflectToAttr": false,
          "docs": "Tab index of the input.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "list",
          "type": "string",
          "mutable": false,
          "attr": "list",
          "reflectToAttr": false,
          "docs": "Value of the id attribute of the `<datalist>` of autocomplete options.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "max",
          "type": "number | string",
          "mutable": false,
          "attr": "max",
          "reflectToAttr": false,
          "docs": "Maximum value.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "maxlength",
          "type": "string",
          "mutable": false,
          "attr": "maxlength",
          "reflectToAttr": false,
          "docs": "Maximum length (number of characters) of `value`.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "min",
          "type": "number | string",
          "mutable": false,
          "attr": "min",
          "reflectToAttr": false,
          "docs": "Minimum value.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "minlength",
          "type": "string",
          "mutable": false,
          "attr": "minlength",
          "reflectToAttr": false,
          "docs": "Minimum length (number of characters) of `value`.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "multiline",
          "type": "boolean",
          "mutable": false,
          "attr": "multiline",
          "reflectToAttr": false,
          "docs": "Uses textarea instead of input internally. Setting this attribute to true\ndisables the attribute type and both slots.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "multiple",
          "type": "boolean",
          "mutable": false,
          "attr": "multiple",
          "reflectToAttr": false,
          "docs": "Boolean. Whether to allow multiple values.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Used to specify the name of the control.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "pattern",
          "type": "string",
          "mutable": false,
          "attr": "pattern",
          "reflectToAttr": false,
          "docs": "Pattern the `value` must match to be valid.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "The input placeholder.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "The value is not editable.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "A value is required for the form to be submittable.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "resize",
          "type": "\"both\" | \"horizontal\" | \"none\" | \"vertical\"",
          "mutable": false,
          "attr": "resize",
          "reflectToAttr": false,
          "docs": "Whether the multiline input is resizable, and if so, in which directions.",
          "docsTags": [],
          "default": "'both'",
          "values": [
            {
              "value": "both",
              "type": "string"
            },
            {
              "value": "horizontal",
              "type": "string"
            },
            {
              "value": "none",
              "type": "string"
            },
            {
              "value": "vertical",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "rows",
          "type": "number",
          "mutable": false,
          "attr": "rows",
          "reflectToAttr": false,
          "docs": "The number of rows.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "\"lg\" | \"sm\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Size of the input.",
          "docsTags": [],
          "values": [
            {
              "value": "lg",
              "type": "string"
            },
            {
              "value": "sm",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "step",
          "type": "string",
          "mutable": false,
          "attr": "step",
          "reflectToAttr": false,
          "docs": "Incremental values that are valid.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "tone",
          "type": "\"dark\"",
          "mutable": false,
          "attr": "tone",
          "reflectToAttr": false,
          "docs": "Input tone. Use `'dark'` on white backgrounds. Default is a light tone.",
          "docsTags": [],
          "values": [
            {
              "value": "dark",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "type",
          "type": "string",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "The input type.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The input value.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "focusInner",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "focusInner() => Promise<void>",
          "parameters": [],
          "docs": "Sets focus on the input",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "ldchange",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input value changed and the element loses focus.",
          "docsTags": []
        },
        {
          "event": "ldinput",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input value changed.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [
        {
          "name": "end",
          "docs": "The purpose of this slot is to add icons or buttons\nto the input, __justifying the item to the start of the component__.\nStyling for `ld-icon` and `ld-button` is provided within the `ld-input` component.\nIf you choose to place something different into the slot, you will probably\nneed to adjust some styles on the slotted item in order to make it fit right."
        },
        {
          "name": "start",
          "docs": "The purpose of this slot is to add icons or buttons\nto the input, __justifying the item to the end of the component__.\nStyling for `ld-icon` and `ld-button` is provided within the `ld-input` component.\nIf you choose to place something different into the slot, you will probably\nneed to adjust some styles on the slotted item in order to make it fit right."
        }
      ],
      "parts": [
        {
          "name": "input",
          "docs": "Actual input/textarea element"
        },
        {
          "name": "placeholder",
          "docs": "Placeholder rendered for input type \"file\""
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-input-message/ld-input-message.tsx",
      "encapsulation": "shadow",
      "tag": "ld-input-message",
      "readme": "---\neleventyNavigation:\n  key: Input Message\n  parent: Components\nlayout: layout.njk\ntitle: Input Message\npermalink: components/ld-input-message/\n---\n\n# ld-input-message\n\n<link rel=\"stylesheet\" href=\"css_components/ld-input-message.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n\nThis component is meant to be used in conjunction with the [`ld-input`](components/ld-input/) and the [`ld-label`](components/ld-label/) component. Please reffer to the [`ld-input`](components/ld-input/) docs for further usage examples.\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  The <code>ld-input-message</code> with a mode other than <code>\"info\"</code> is supposed to be used on white background only, as on other backgrounds the color contrast of the text is insufficient against the background. \n</ld-notice>\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  If you choose to use the CSS component and plan to conditionally show the message, such as when an input field becomes invalid after user interaction, you will need to make sure that screen readers or other assistive technology become aware of a message as soon as it becomes visible. You might want to use <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions\" rel=\"noreferrer noopener\" target=\"_blank\">ARIA live regions</a> for this matter.\n</ld-notice>\n\n## Examples\n\n### As error message\n\n{% example '{ \"background\": \"light\" }' %}\n<ld-input-message>This field is required.</ld-input-message>\n\n<!-- CSS component -->\n\n<span class=\"ld-input-message ld-input-message--error\">\n  <!-- Note that you can use an img element with the class ld-input-message__icon here, as well. -->\n  <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"currentColor\"/>\n    <path d=\"M4.66675 4.66699L9.33341 9.33366\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    <path d=\"M4.66675 9.33301L9.33341 4.66634\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n  </svg>\n  This field is required.\n</span>\n{% endexample %}\n\n### As info message\n\n{% example '{ \"background\": \"light\" }' %}\n<ld-input-message mode=\"info\">This field will destroy itself on form submission.</ld-input-message>\n\n<!-- CSS component -->\n\n<span class=\"ld-input-message ld-input-message--info\">\n  <!-- Note that you can use an img element with the class ld-input-message__icon here, as well. -->\n  <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"var(--ld-thm-warning)\"/>\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.18234 11.0254C6.79228 11.0254 6.48657 10.9147 6.26518 10.6933C6.0438 10.472 5.93311 10.1662 5.93311 9.77618V6.12335C5.93311 5.99685 6.0069 5.93359 6.15449 5.93359H6.89771C7.28776 5.93359 7.59348 6.04428 7.81487 6.26567C8.03625 6.48705 8.14694 6.79277 8.14694 7.18283V10.8357C8.14694 10.9622 8.07315 11.0254 7.92556 11.0254H7.18234Z\" fill=\"var(--ld-col-neutral-900)\"/>\n    <ellipse cx=\"6.99977\" cy=\"3.80007\" rx=\"1.06667\" ry=\"1.06667\" fill=\"var(--ld-col-neutral-900)\"/>\n  </svg>\n  This field will destroy itself on form submission.\n</span>\n{% endexample %}\n\n### As success message\n\n{% example '{ \"background\": \"light\" }' %}\n<ld-input-message mode=\"valid\">That's correct!</ld-input-message>\n\n<!-- CSS component -->\n\n<span class=\"ld-input-message ld-input-message--valid\">\n  <!-- Note that you can use an img element with the class ld-input-message__icon here, as well. -->\n  <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n    <circle cx=\"7\" cy=\"7\" r=\"7\" fill=\"currentColor\"/>\n    <path stroke=\"var(--ld-col-wht)\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10.1 5.1L6.1 9 3.8 6.8\"/>\n  </svg>\n  That's correct!\n</span>\n{% endexample %}\n\n",
      "docs": "---\neleventyNavigation:\n  key: Input Message\n  parent: Components\nlayout: layout.njk\ntitle: Input Message\npermalink: components/ld-input-message/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "icon - Image tag used for the icon"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "mode",
          "type": "\"error\" | \"info\" | \"valid\"",
          "mutable": false,
          "attr": "mode",
          "reflectToAttr": false,
          "docs": "Input message mode.",
          "docsTags": [],
          "default": "'error'",
          "values": [
            {
              "value": "error",
              "type": "string"
            },
            {
              "value": "info",
              "type": "string"
            },
            {
              "value": "valid",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "icon",
          "docs": "Image tag used for the icon"
        }
      ],
      "dependents": [],
      "dependencies": [
        "ld-icon"
      ],
      "dependencyGraph": {
        "ld-input-message": [
          "ld-icon"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-label/ld-label.tsx",
      "encapsulation": "shadow",
      "tag": "ld-label",
      "readme": "---\neleventyNavigation:\n  key: Label\n  parent: Components\nlayout: layout.njk\ntitle: Label\npermalink: components/ld-label/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-label.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-input.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-input-message.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-toggle.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-checkbox.css\">\n\n# ld-label\n\nThis component is meant to be used in conjunction with form input components, such as the [`ld-input`](components/ld-input/) component, and the [`ld-input-message`](components/ld-input-message/) component.\n\n## Example\n\n{% example %}\n<ld-label>Email Address</ld-label>\n\n<!-- CSS component -->\n\n<label class=\"ld-label\">Email Address</label>\n{% endexample %}\n\n### Size\n\nThe default size is small. You can use a slightly bigger label (size medium) by applying the `size=\"m\"` property.\n\n{% example %}\n<ld-label size=\"m\">\n  Email Address\n</ld-label>\n\n<!-- CSS component -->\n\n<label class=\"ld-label ld-label--m\">\n  Email Address\n</label>\n{% endexample %}\n\n### Position\n\nHow the label positions its child elements depends both on its `position` prop and the type of the input element that it wrapps. For instance, if the component contains an [`ld-input-message`](components/ld-input-message/) component, it gets horizontally aligned with larger input elements such as the [`ld-input`](components/ld-input/) or the [`ld-select`](components/ld-select/) component, but not with narrower input elements such as [`ld-checkbox`](components/ld-checkbox/) or a [`ld-toggle`](components/ld-toggle/) component.\n\n#### Top (default position)\n\n{% example %}\n<ld-label>\n  Email Address\n  <ld-input placeholder=\"jane.doe@example.com\" type=\"email\"></ld-input>\n</ld-label>\n\n<ld-label>\n  Email Address\n  <ld-input invalid placeholder=\"jane.doe@example.com\" type=\"email\"></ld-input>\n  <ld-input-message>This field is required.</ld-input-message>\n</ld-label>\n\n<ld-label>\n  Auto-update\n  <ld-toggle></ld-toggle>\n  <ld-input-message mode=\"info\">Recommended.</ld-input-message>\n</ld-label>\n\n<!-- CSS component -->\n\n<label class=\"ld-label\">\n  Email Address\n  <div class=\"ld-input\">\n    <input placeholder=\"jane.doe@example.com\" type=\"email\">\n  </div>\n</label>\n\n<label class=\"ld-label\">\n  Email Address\n  <div class=\"ld-input ld-input--invalid\">\n    <input placeholder=\"jane.doe@example.com\" type=\"email\">\n  </div>\n  <span class=\"ld-input-message ld-input-message--error\">\n    <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"currentColor\"/>\n      <path d=\"M4.66675 4.66699L9.33341 9.33366\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      <path d=\"M4.66675 9.33301L9.33341 4.66634\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n    This field is required.\n  </span>\n</label>\n\n<label class=\"ld-label\">\n  Auto-update\n  <div class=\"ld-toggle\">\n    <input type=\"checkbox\" />\n    <span class=\"ld-toggle__knob\"></span>\n  </div>\n  <span class=\"ld-input-message ld-input-message--info\">\n    <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"var(--ld-thm-warning)\"/>\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.18234 11.0254C6.79228 11.0254 6.48657 10.9147 6.26518 10.6933C6.0438 10.472 5.93311 10.1662 5.93311 9.77618V6.12335C5.93311 5.99685 6.0069 5.93359 6.15449 5.93359H6.89771C7.28776 5.93359 7.59348 6.04428 7.81487 6.26567C8.03625 6.48705 8.14694 6.79277 8.14694 7.18283V10.8357C8.14694 10.9622 8.07315 11.0254 7.92556 11.0254H7.18234Z\" fill=\"var(--ld-col-neutral-900)\"/>\n      <ellipse cx=\"6.99977\" cy=\"3.80007\" rx=\"1.06667\" ry=\"1.06667\" fill=\"var(--ld-col-neutral-900)\"/>\n    </svg>\n    Recommended.\n  </span>\n</label>\n{% endexample %}\n\n#### Left\n\n{% example %}\n<ld-label position=\"left\" size=\"m\">\n  Email Address\n  <ld-input placeholder=\"jane.doe@example.com\" type=\"email\"></ld-input>\n</ld-label>\n\n<ld-label position=\"left\" size=\"m\" align-message>\n  Email Address\n  <ld-input invalid placeholder=\"jane.doe@example.com\" type=\"email\"></ld-input>\n  <ld-input-message>This field is required.</ld-input-message>\n</ld-label>\n\n<ld-label position=\"left\" size=\"m\">\n  Auto-update\n  <ld-toggle></ld-toggle>\n  <ld-input-message mode=\"info\">Recommended.</ld-input-message>\n</ld-label>\n\n<!-- CSS component -->\n\n<label class=\"ld-label ld-label--left ld-label--m\">\n  Email Address\n  <div class=\"ld-input\">\n    <input placeholder=\"jane.doe@example.com\" type=\"email\">\n  </div>\n</label>\n\n<label class=\"ld-label ld-label--left ld-label--m ld-label--align-message\">\n  Email Address\n  <div class=\"ld-input ld-input--invalid\">\n    <input placeholder=\"jane.doe@example.com\" type=\"email\">\n  </div>\n  <span class=\"ld-input-message ld-input-message--error\">\n    <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"currentColor\"/>\n      <path d=\"M4.66675 4.66699L9.33341 9.33366\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      <path d=\"M4.66675 9.33301L9.33341 4.66634\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n    This field is required.\n  </span>\n</label>\n\n<label class=\"ld-label ld-label--left ld-label--m\">\n  Auto-update\n  <div class=\"ld-toggle\">\n    <input type=\"checkbox\" />\n    <span class=\"ld-toggle__knob\"></span>\n  </div>\n  <span class=\"ld-input-message ld-input-message--info\">\n    <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"var(--ld-thm-warning)\"/>\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.18234 11.0254C6.79228 11.0254 6.48657 10.9147 6.26518 10.6933C6.0438 10.472 5.93311 10.1662 5.93311 9.77618V6.12335C5.93311 5.99685 6.0069 5.93359 6.15449 5.93359H6.89771C7.28776 5.93359 7.59348 6.04428 7.81487 6.26567C8.03625 6.48705 8.14694 6.79277 8.14694 7.18283V10.8357C8.14694 10.9622 8.07315 11.0254 7.92556 11.0254H7.18234Z\" fill=\"var(--ld-col-neutral-900)\"/>\n      <ellipse cx=\"6.99977\" cy=\"3.80007\" rx=\"1.06667\" ry=\"1.06667\" fill=\"var(--ld-col-neutral-900)\"/>\n    </svg>\n    Recommended.\n  </span>\n</label>\n{% endexample %}\n\n#### Right\n\n{% example %}\n<ld-label position=\"right\" size=\"m\">\n  Email Address\n  <ld-input placeholder=\"jane.doe@example.com\" type=\"email\"></ld-input>\n</ld-label>\n\n<ld-label position=\"right\" size=\"m\" align-message>\n  Email Address\n  <ld-input invalid placeholder=\"jane.doe@example.com\" type=\"email\"></ld-input>\n  <ld-input-message>This field is required.</ld-input-message>\n</ld-label>\n\n<ld-label position=\"right\" size=\"m\">\n  Auto-update\n  <ld-toggle></ld-toggle>\n  <ld-input-message mode=\"info\">Recommended.</ld-input-message>\n</ld-label>\n\n<!-- CSS component -->\n\n<label class=\"ld-label ld-label--right ld-label--m\">\n  Email Address\n  <div class=\"ld-input\">\n    <input placeholder=\"jane.doe@example.com\" type=\"email\">\n  </div>\n</label>\n\n<label class=\"ld-label ld-label--right ld-label--m ld-label--align-message\">\n  Email Address\n  <div class=\"ld-input ld-input--invalid\">\n    <input placeholder=\"jane.doe@example.com\" type=\"email\">\n  </div>\n  <span class=\"ld-input-message ld-input-message--error\">\n    <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"currentColor\"/>\n      <path d=\"M4.66675 4.66699L9.33341 9.33366\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      <path d=\"M4.66675 9.33301L9.33341 4.66634\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n    This field is required.\n  </span>\n</label>\n\n<label class=\"ld-label ld-label--right ld-label--m\">\n  Auto-update\n  <div class=\"ld-toggle\">\n    <input type=\"checkbox\" />\n    <span class=\"ld-toggle__knob\"></span>\n  </div>\n  <span class=\"ld-input-message ld-input-message--info\">\n    <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"var(--ld-thm-warning)\"/>\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.18234 11.0254C6.79228 11.0254 6.48657 10.9147 6.26518 10.6933C6.0438 10.472 5.93311 10.1662 5.93311 9.77618V6.12335C5.93311 5.99685 6.0069 5.93359 6.15449 5.93359H6.89771C7.28776 5.93359 7.59348 6.04428 7.81487 6.26567C8.03625 6.48705 8.14694 6.79277 8.14694 7.18283V10.8357C8.14694 10.9622 8.07315 11.0254 7.92556 11.0254H7.18234Z\" fill=\"var(--ld-col-neutral-900)\"/>\n      <ellipse cx=\"6.99977\" cy=\"3.80007\" rx=\"1.06667\" ry=\"1.06667\" fill=\"var(--ld-col-neutral-900)\"/>\n    </svg>\n    Recommended.\n  </span>\n</label>\n{% endexample %}\n\n### Align message with input\n\nWhen positioning the label left or right, you may want to position the `ld-input-message` right under the input field that is wrapped by the `ld-label`. You can do set the `align-message`-attribute to achieve this behavior. With this attribute set (and the label being positioned left or right), the `ld-input-message` will also never grow underneath the label.\n\n{% example %}\n<ld-label position=\"left\" size=\"m\">\n  Email Address\n  <ld-input invalid placeholder=\"jane.doe@example.com\" type=\"email\"></ld-input>\n  <ld-input-message>I do not align with the input.</ld-input-message>\n</ld-label>\n\n<ld-label position=\"left\" size=\"m\" align-message>\n  Email Address\n  <ld-input invalid placeholder=\"jane.doe@example.com\" type=\"email\"></ld-input>\n  <ld-input-message>I align with the input.</ld-input-message>\n</ld-label>\n\n<ld-label position=\"right\" size=\"m\" align-message>\n  Email Address\n  <ld-input invalid placeholder=\"jane.doe@example.com\" type=\"email\"></ld-input>\n  <ld-input-message>I never grow underneath the label, even though I am very long.</ld-input-message>\n</ld-label>\n\n<!-- CSS component -->\n\n<label class=\"ld-label ld-label--left ld-label--m\">\n  Email Address\n  <div class=\"ld-input ld-input--invalid\">\n    <input placeholder=\"jane.doe@example.com\" type=\"email\">\n  </div>\n  <span class=\"ld-input-message ld-input-message--error\">\n    <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"currentColor\"/>\n      <path d=\"M4.66675 4.66699L9.33341 9.33366\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      <path d=\"M4.66675 9.33301L9.33341 4.66634\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n    I do not align with the input.\n  </span>\n</label>\n\n<label class=\"ld-label ld-label--left ld-label--m ld-label--align-message\">\n  Email Address\n  <div class=\"ld-input ld-input--invalid\">\n    <input placeholder=\"jane.doe@example.com\" type=\"email\">\n  </div>\n  <span class=\"ld-input-message ld-input-message--error\">\n    <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"currentColor\"/>\n      <path d=\"M4.66675 4.66699L9.33341 9.33366\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      <path d=\"M4.66675 9.33301L9.33341 4.66634\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n    I align with the input.\n  </span>\n</label>\n\n<label class=\"ld-label ld-label--right ld-label--m ld-label--align-message\">\n  Email Address\n  <div class=\"ld-input ld-input--invalid\">\n    <input placeholder=\"jane.doe@example.com\" type=\"email\">\n  </div>\n  <span class=\"ld-input-message ld-input-message--error\">\n    <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"currentColor\"/>\n      <path d=\"M4.66675 4.66699L9.33341 9.33366\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      <path d=\"M4.66675 9.33301L9.33341 4.66634\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n    I never grow underneath the label, even though I am very long.\n  </span>\n</label>\n{% endexample %}\n\n### HTML Content\n\nHTML content describing the labeled element should be wrapped in a single HTML element (e.g. a `span`):\n\n{% example %}\n<ld-label position=\"right\">\n  <span>I love to <code style=\"line-height: 0\">code</code>.</span>\n  <ld-checkbox></ld-checkbox>\n</ld-label>\n\n<ld-label position=\"right\">\n  <span>I love to <code style=\"line-height: 0\">code</code>.</span>\n  <ld-checkbox invalid></ld-checkbox>\n  <ld-input-message>Please confirm that you love to code.</ld-input-message>\n</ld-label>\n\n<!-- CSS component -->\n\n<label class=\"ld-label ld-label--right\">\n  <span>I love to <code style=\"line-height: 0\">code</code>.</span>\n  <div class=\"ld-checkbox\">\n    <input type=\"checkbox\">\n    <svg\n      class=\"ld-checkbox__check\"\n      width=\"14\"\n      height=\"14\"\n      fill=\"none\"\n      viewBox=\"0 0 14 14\"\n    >\n      <path\n        d=\"M12 4L5.40795 10L2 6.63964\"\n        stroke=\"currentColor\"\n        stroke-width=\"3\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </svg>\n    <div class=\"ld-checkbox__box\"></div>\n  </div>\n</label>\n\n<label class=\"ld-label ld-label--right\">\n  <span>I love to <code style=\"line-height: 0\">code</code>.</span>\n  <div class=\"ld-checkbox ld-checkbox--invalid\">\n    <input type=\"checkbox\">\n    <svg\n      class=\"ld-checkbox__check\"\n      width=\"14\"\n      height=\"14\"\n      fill=\"none\"\n      viewBox=\"0 0 14 14\"\n    >\n      <path\n        d=\"M12 4L5.40795 10L2 6.63964\"\n        stroke=\"currentColor\"\n        stroke-width=\"3\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </svg>\n    <div class=\"ld-checkbox__box\"></div>\n  </div>\n  <span class=\"ld-input-message ld-input-message--error\">\n    <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"currentColor\"/>\n      <path d=\"M4.66675 4.66699L9.33341 9.33366\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      <path d=\"M4.66675 9.33301L9.33341 4.66634\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n    Please confirm that you love to code.\n  </span>\n</label>\n{% endexample %}\n\n",
      "docs": "---\neleventyNavigation:\n  key: Label\n  parent: Components\nlayout: layout.njk\ntitle: Label\npermalink: components/ld-label/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-label.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-input.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-input-message.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-toggle.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-checkbox.css\">",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "tag - Actual label element"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "alignMessage",
          "type": "boolean",
          "mutable": false,
          "attr": "align-message",
          "reflectToAttr": false,
          "docs": "Align input message with input position.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "position",
          "type": "\"left\" | \"right\"",
          "mutable": false,
          "attr": "position",
          "reflectToAttr": false,
          "docs": "Relative position to labeled element. Default is top.",
          "docsTags": [],
          "values": [
            {
              "value": "left",
              "type": "string"
            },
            {
              "value": "right",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "\"m\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Size of the label. Default is small.",
          "docsTags": [],
          "values": [
            {
              "value": "m",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "tag",
          "docs": "Actual label element"
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-link/ld-link.tsx",
      "encapsulation": "shadow",
      "tag": "ld-link",
      "readme": "---\neleventyNavigation:\n  key: Link\n  parent: Components\nlayout: layout.njk\ntitle: Link\npermalink: components/ld-link/\n---\n\n# ld-link\n\n<link rel=\"stylesheet\" href=\"css_components/ld-link.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-typo.css\">\n\nThis component is meant to be used in conjunction with the [`ld-icon`](components/ld-icon/). Please reffer to the [`ld-icon`](components/ld-icon/) docs for further usage examples.\n\n## Examples\n\n### Basic\n\n{% example %}\n<ld-link>Link</ld-link>\n\n<!-- CSS component -->\n\n<a class=\"ld-link\">Link</a>\n{% endexample %}\n\n### Different sizes\n\nThe `ld-link` component inherits its font-size and line-height.\n\n{% example '{ \"stacked\": true }' %}\n<ld-typo variant=\"body-xs\">\n  <b>XS</b>: Lorem ipsum <ld-link>dolor sit amet</ld-link>, consectetur adipiscing elit.\n</ld-typo>\n\n<ld-typo variant=\"body-s\">\n  <b>S</b>: Lorem ipsum <ld-link>dolor sit amet</ld-link>, consectetur adipiscing elit.\n</ld-typo>\n\n<ld-typo variant=\"body-m\">\n  <b>M</b>: Lorem ipsum <ld-link>dolor sit amet</ld-link>, consectetur adipiscing elit.\n</ld-typo>\n\n<!-- CSS component -->\n\n<p class=\"ld-typo--body-xs\">\n  <b>XS</b>: Lorem ipsum <a class=\"ld-link\">dolor sit amet</a>, consectetur adipiscing elit.\n</p>\n\n<p class=\"ld-typo--body-s\">\n  <b>S</b>: Lorem ipsum <a class=\"ld-link\">dolor sit amet</a>, consectetur adipiscing elit.\n</p>\n\n<p class=\"ld-typo--body-m\">\n  <b>M</b>: Lorem ipsum <a class=\"ld-link\">dolor sit amet</a>, consectetur adipiscing elit.\n</p>\n{% endexample %}\n\n### Disabled state\n\nThere are several ways to disable a link. The simplest one is by not using a `href` prop. However, this renders the link non-focusable. If you want the link to stay focusable even when it is supposed to be disabled, use the `disabled` prop on the Web Component, respectively set the `aria-disabled` attribute to `true` on the CSS component and keep the `href` set. The Web Component version of the link will prevent the default behavior of the anchor element on click. The CSS component will obviously not do this out of the box, so you will have to handle this on your side.\n\n{% example %}\n<ld-link href=\"#\" disabled>Link</ld-link>\n\n<!-- CSS component -->\n\n<a id=\"disabled-link\" class=\"ld-link\" href=\"#\" aria-disabled=\"true\">Link</a>\n\n<script>\n  document.getElementById('disabled-link').addEventListener('click', (ev) => {\n    ev.preventDefault()\n  })\n</script>\n{% endexample %}\n\n### With target\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  When using <code>target=\"_blank\"</code>, a <code>rel</code> attribute with the value <code>noreferrer noopener</code> is applied automatically. Just in case. If you are using the CSS component version of the link, you will need to take care of this yourself. See <a href=\"https://web.dev/external-anchors-use-rel-noopener/\" rel=\"noreferrer noopener\" target=\"_blank\">https://web.dev/external-anchors-use-rel-noopener/</a>\n</ld-notice>\n\n{% example %}\n<ld-link href=\"#\" target=\"_blank\">\n  Link which opens in a new tab\n</ld-link>\n\n<!-- CSS component -->\n\n<a class=\"ld-link\" href=\"#\" target=\"_blank\" rel=\"noreferrer noopener\">\n  Link which opens in a new tab\n</a>\n{% endexample %}\n\n### With chevron icon\n\n{% example %}\n<ld-link chevron=\"start\">Link</ld-link>\n<ld-link chevron=\"end\">Link</ld-link>\n\n<!-- CSS component -->\n\n<a class=\"ld-link ld-link--chevron-start\">Link</a>\n<a class=\"ld-link ld-link--chevron-end\">Link</a>\n{% endexample %}\n",
      "docs": "---\neleventyNavigation:\n  key: Link\n  parent: Components\nlayout: layout.njk\ntitle: Link\npermalink: components/ld-link/\n---",
      "docsTags": [
        {
          "name": "part",
          "text": "anchor - the link anchor"
        },
        {
          "name": "virtualProp",
          "text": "href - the URL that the hyperlink points to"
        },
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "chevron",
          "type": "\"end\" | \"start\"",
          "mutable": false,
          "attr": "chevron",
          "reflectToAttr": false,
          "docs": "Displays chevron icon.",
          "docsTags": [],
          "values": [
            {
              "value": "end",
              "type": "string"
            },
            {
              "value": "start",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "The disabled attribute sets `aria-disabled=\"true\"`\non the rendered anchor element.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "href",
          "type": "any",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "the URL that the hyperlink points to",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ldTabindex",
          "type": "number",
          "mutable": false,
          "attr": "ld-tabindex",
          "reflectToAttr": false,
          "docs": "Tab index of the input.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "target",
          "type": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\"",
          "mutable": false,
          "attr": "target",
          "reflectToAttr": false,
          "docs": "The `target` attributed can be used in conjunction with the `href` attribute.\nSee [mdn docs](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target)\nfor more information on the `target` attribute.",
          "docsTags": [],
          "values": [
            {
              "value": "_blank",
              "type": "string"
            },
            {
              "value": "_parent",
              "type": "string"
            },
            {
              "value": "_self",
              "type": "string"
            },
            {
              "value": "_top",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "focusInner",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "focusInner() => Promise<void>",
          "parameters": [],
          "docs": "Sets focus on the anchor.",
          "docsTags": []
        }
      ],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "anchor",
          "docs": "the link anchor"
        }
      ],
      "dependents": [
        "ld-crumb"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "ld-crumb": [
          "ld-link"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-loading/ld-loading.tsx",
      "encapsulation": "shadow",
      "tag": "ld-loading",
      "readme": "---\neleventyNavigation:\n  key: Loading Indicator\n  parent: Components\nlayout: layout.njk\ntitle: Loading Indicator\npermalink: components/ld-loading/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-loading.css\">\n\n# ld-loading\n\nUse the `ld-loading` component to indicate that the user should wait for a process to complete. Combine it with textual information on what is going on for a better user experience. \n\n## Basic\n\n{% example %}\n<ld-loading></ld-loading>\n\n<!-- CSS component -->\n\n<svg class=\"ld-loading\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid meet\">\n  <title>Loading</title>\n  <circle cx=\"50\" cy=\"50\" r=\"50\" />\n  <g>\n    <circle cx=\"50\" cy=\"50\" r=\"50\" />\n    <circle cx=\"50\" cy=\"50\" r=\"50\" />\n    <circle cx=\"50\" cy=\"50\" r=\"50\" />\n    <animateTransform\n      attributeName=\"transform\"\n      attributeType=\"XML\"\n      type=\"rotate\"\n      from=\"0 50 50\"\n      to=\"360 50 50\"\n      dur=\"0.9s\"\n      repeatCount=\"indefinite\"\n    />\n  </g>\n</svg>\n{% endexample %}\n\n## Neutral\n\n{% example %}\n<ld-loading neutral></ld-loading>\n\n<!-- CSS component -->\n\n<svg class=\"ld-loading ld-loading--neutral\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid meet\">\n  <title>Loading</title>\n  <circle cx=\"50\" cy=\"50\" r=\"50\" />\n  <g>\n    <circle cx=\"50\" cy=\"50\" r=\"50\" />\n    <circle cx=\"50\" cy=\"50\" r=\"50\" />\n    <circle cx=\"50\" cy=\"50\" r=\"50\" />\n    <animateTransform\n      attributeName=\"transform\"\n      attributeType=\"XML\"\n      type=\"rotate\"\n      from=\"0 50 50\"\n      to=\"360 50 50\"\n      dur=\"0.9s\"\n      repeatCount=\"indefinite\"\n    />\n  </g>\n</svg>\n{% endexample %}\n\n## CSS Variables\n\n| Variable                     | Description                               | Default                   |\n| ---------------------------- | ----------------------------------------- | ------------------------- |\n| `--ld-loading-col-base`      | Base color of the loading indicator.      | `var(--ld-thm-warning)`   |\n| `--ld-loading-col-primary`   | Primary color of the loading indicator.   | `var(--ld-thm-primary)`   |\n| `--ld-loading-col-secondary` | Secondary color of the loading indicator. | `var(--ld-thm-secondary)` |\n| `--ld-loading-size`          | Size of the loading indicator.            | `var(--ld-sp-24)`         |\n",
      "docs": "---\neleventyNavigation:\n  key: Loading Indicator\n  parent: Components\nlayout: layout.njk\ntitle: Loading Indicator\npermalink: components/ld-loading/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-loading.css\">",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Used as svg title element content.",
          "docsTags": [],
          "default": "'Loading'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "neutral",
          "type": "boolean",
          "mutable": false,
          "attr": "neutral",
          "reflectToAttr": false,
          "docs": "Uses neutral colors.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "paused",
          "type": "boolean",
          "mutable": false,
          "attr": "paused",
          "reflectToAttr": false,
          "docs": "Pauses all animations.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-modal/ld-modal.tsx",
      "encapsulation": "shadow",
      "tag": "ld-modal",
      "readme": "---\neleventyNavigation:\n  key: Modal\n  parent: Components\nlayout: layout.njk\ntitle: Modal\npermalink: components/ld-modal/\ntags:\n  - dialog\n  - alert\n  - popup\n  - popover\n  - lightbox\n---\n\n# ld-modal\n\n<link rel=\"stylesheet\" href=\"css_components/ld-modal.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-typo.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-button.css\">\n\nThe `ld-modal` component represents a dismissible modal dialog box.\n\nThe [`<dialog>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog) element acts as the foundation for both, the Web Component version and the CSS component version of the component. The `ld-modal` Web Component wraps a `<dialog>` element and enhances its functionality which otherwise is not natively implemented, such as by emitting additional events and handling clicks on the dialog backdrop.\n\n## Examples\n\nHere is a minimalistic example of a modal dialog:\n\n{% example '{ \"styles\": { \"overflow\": \"visible\", \"will-change\": \"initial\" } }' %}\n<ld-modal>\n  <ld-typo style=\"text-align: center\">\n    I'm a modal dialog.\n  </ld-typo>\n</ld-modal>\n\n<ld-button onclick=\"event.target.previousElementSibling.showModal()\">Open Modal</ld-button>\n\n<!-- CSS component -->\n\n<dialog class=\"ld-modal\">\n  <header class=\"ld-modal__header\">\n    <button\n      class=\"ld-modal__x\"\n      aria-label=\"Dismiss\"\n      onclick=\"this.closest('dialog').close()\"\n    ></button>\n  </header>\n  <div class=\"ld-modal__content\">\n    <p class=\"ld-typo\" style=\"text-align: center\">\n      I'm a modal dialog.\n    </p>\n  </div>\n</dialog>\n\n<button class=\"ld-button\" onclick=\"event.target.previousElementSibling.showModal()\">Open Modal</button>\n{% endexample %}\n\n### With header and footer\n\nYou have two additional slots to your disposal for altering the modal header and footer which are both positioned fixed at top and bottom of the dialog element.\n\n{% example '{ \"styles\": { \"overflow\": \"visible\", \"will-change\": \"initial\" } }' %}\n<ld-modal>\n  <ld-typo slot=\"header\">Hello</ld-typo>\n  <ld-typo style=\"text-align: center\">\n    I'm a modal dialog.\n  </ld-typo>\n  <ld-button slot=\"footer\" style=\"width: 8rem\" mode=\"ghost\" onclick=\"this.closest('ld-modal').close()\">Cancel</ld-button>\n  <ld-button slot=\"footer\" style=\"width: 8rem\" onclick=\"this.closest('ld-modal').close()\">Submit</ld-button>\n</ld-modal>\n\n<ld-button onclick=\"event.target.previousElementSibling.showModal()\">Open Modal</ld-button>\n\n<!-- CSS component -->\n\n<dialog class=\"ld-modal\">\n  <header class=\"ld-modal__header\">\n    <p class=\"ld-typo\">Hello</p>\n    <button\n      class=\"ld-modal__x\"\n      aria-label=\"Dismiss\"\n      onclick=\"this.closest('dialog').close()\"\n    ></button>\n  </header>\n  <div class=\"ld-modal__content\">\n    <p class=\"ld-typo\" style=\"text-align: center\">\n      I'm a modal dialog.\n    </p>\n  </div>\n  <footer class=\"ld-modal__footer\">\n    <button class=\"ld-button ld-button--ghost\" style=\"width: 8rem\" onclick=\"this.closest('dialog').close()\">Cancel</button>\n    <button class=\"ld-button\" style=\"width: 8rem\" onclick=\"this.closest('dialog').close()\">Submit</button>\n  </footer>\n</dialog>\n\n<button class=\"ld-button\" onclick=\"event.target.previousElementSibling.showModal()\">Open Modal</button>\n{% endexample %}\n\n### Non-cancelable\n\n{% example '{ \"styles\": { \"overflow\": \"visible\", \"will-change\": \"initial\" } }' %}\n<ld-modal cancelable=\"false\">\n  <ld-typo slot=\"header\">Hello</ld-typo>\n  <ld-typo style=\"text-align: center\">\n    I'm a modal dialog.\n  </ld-typo>\n  <ld-button slot=\"footer\" style=\"width: 8rem\" onclick=\"this.closest('ld-modal').close()\">Submit</ld-button>\n</ld-modal>\n\n<ld-button onclick=\"event.target.previousElementSibling.showModal()\">Open Modal</ld-button>\n\n<!-- CSS component -->\n\n<dialog class=\"ld-modal\" oncancel=\"event.preventDefault()\">\n  <header class=\"ld-modal__header\">\n    <p class=\"ld-typo\">Hello</p>\n  </header>\n  <div class=\"ld-modal__content\">\n    <p class=\"ld-typo\" style=\"text-align: center\">\n      I'm a modal dialog.\n    </p>\n  </div>\n  <footer class=\"ld-modal__footer\">\n    <button class=\"ld-button\" style=\"width: 8rem\" onclick=\"this.closest('dialog').close()\">Submit</button>\n  </footer>\n</dialog>\n\n<button class=\"ld-button\" onclick=\"event.target.previousElementSibling.showModal()\">Open Modal</button>\n{% endexample %}\n\n### With blurry backdrop\n\n{% example '{ \"styles\": { \"overflow\": \"visible\", \"will-change\": \"initial\" } }' %}\n<ld-modal blurry-backdrop>\n  <ld-typo style=\"text-align: center\">\n    I'm a modal dialog.\n  </ld-typo>\n</ld-modal>\n\n<ld-button onclick=\"event.target.previousElementSibling.showModal()\">Open Modal</ld-button>\n\n<!-- CSS component -->\n\n<dialog class=\"ld-modal ld-modal--blurry-backdrop\">\n  <header class=\"ld-modal__header\">\n    <button\n      class=\"ld-modal__x\"\n      aria-label=\"Dismiss\"\n      onclick=\"this.closest('dialog').close()\"\n    ></button>\n  </header>\n  <div class=\"ld-modal__content\">\n    <p class=\"ld-typo\" style=\"text-align: center\">\n      I'm a modal dialog.\n    </p>\n  </div>\n</dialog>\n\n<button class=\"ld-button\" onclick=\"event.target.previousElementSibling.showModal()\">Open Modal</button>\n{% endexample %}\n",
      "docs": "---\neleventyNavigation:\n  key: Modal\n  parent: Components\nlayout: layout.njk\ntitle: Modal\npermalink: components/ld-modal/\ntags:\n  - dialog\n  - alert\n  - popup\n  - popover\n  - lightbox\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "dialog - Actual `dialog` element"
        },
        {
          "name": "part",
          "text": "content - `div` element wrapping the default slot"
        },
        {
          "name": "part",
          "text": "footer - `footer` element"
        },
        {
          "name": "part",
          "text": "header - `header` element"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "blurryBackdrop",
          "type": "boolean",
          "mutable": false,
          "attr": "blurry-backdrop",
          "reflectToAttr": false,
          "docs": "Use a blurry backdrop.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "cancelable",
          "type": "boolean",
          "mutable": false,
          "attr": "cancelable",
          "reflectToAttr": false,
          "docs": "The modal is cancelable by default. However, you can change this using this prop.",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "open",
          "type": "boolean",
          "mutable": true,
          "attr": "open",
          "reflectToAttr": true,
          "docs": "Indicates that the modal dialog is active and can be interacted with.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "close",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "close() => Promise<void>",
          "parameters": [],
          "docs": "Closes the modal dialog.",
          "docsTags": []
        },
        {
          "name": "showModal",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "showModal() => Promise<void>",
          "parameters": [],
          "docs": "Opens the modal dialog.",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "ldmodalclosed",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when modal has closed (after transition).",
          "docsTags": []
        },
        {
          "event": "ldmodalclosing",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when modal is closing (before transition).",
          "docsTags": []
        },
        {
          "event": "ldmodalopened",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when modal has opened (after transition).",
          "docsTags": []
        },
        {
          "event": "ldmodalopening",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when modal is opening (before transition).",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "keydown",
          "target": "window",
          "capture": false,
          "passive": true
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "content",
          "docs": "`div` element wrapping the default slot"
        },
        {
          "name": "dialog",
          "docs": "Actual `dialog` element"
        },
        {
          "name": "footer",
          "docs": "`footer` element"
        },
        {
          "name": "header",
          "docs": "`header` element"
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-notice/ld-notice.tsx",
      "encapsulation": "shadow",
      "tag": "ld-notice",
      "readme": "---\neleventyNavigation:\n  key: Notice\n  parent: Components\nlayout: layout.njk\ntitle: Notice\npermalink: components/ld-notice/\n---\n\n# ld-notice\n\n<link rel=\"stylesheet\" href=\"css_components/ld-notice.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-typo.css\">\n\nThis component is meant to be used in conjunction with the [`ld-input`](components/ld-input/) and the [`ld-label`](components/ld-label/) component. Please reffer to the [`ld-input`](components/ld-input/) docs for further usage examples.\n\n## Examples\n\n### As success message\n\n{% example %}\n<ld-notice headline=\"Success message\" mode=\"success\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Metus pellentesque facilisi nunc iaculis. Laoreet eget eu lacus cursus odio quam ut elementum. Faucibus cursus in placerat enim non senectus. In molestie volutpat at sem bibendum ac id. Suspendisse erat malesuada vulputate et congue blandit in erat ornare. Rhoncus interdum.</ld-notice>\n\n<!-- CSS component -->\n\n<div class=\"ld-notice ld-notice--success\">\n  <!-- Note that you can use an img element with the class ld-notice__icon here, as well. -->\n  <svg class=\"ld-notice__icon ld-icon ld-icon--lg\" width=\"24\" height=\"25\" viewBox=\"0 0 24 25\" fill=\"none\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 24.5C18.6274 24.5 24 19.1274 24 12.5C24 5.87258 18.6274 0.5 12 0.5C5.37258 0.5 0 5.87258 0 12.5C0 19.1274 5.37258 24.5 12 24.5Z\" fill=\"currentColor\"/>\n    <path d=\"M16.898 9.56123L10.4404 15.4388L7.10205 12.147\" stroke=\"var(--ld-icon-secondary-col)\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n  </svg>\n  <p class=\"ld-notice__headline ld-typo--h4\">Success message</p>\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Metus pellentesque facilisi nunc iaculis. Laoreet eget eu lacus cursus odio quam ut elementum. Faucibus cursus in placerat enim non senectus. In molestie volutpat at sem bibendum ac id. Suspendisse erat malesuada vulputate et congue blandit in erat ornare. Rhoncus interdum.\n</div>\n{% endexample %}\n\n### As error message\n\n{% example %}\n<ld-notice headline=\"An error occurred\" mode=\"error\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Metus pellentesque facilisi nunc iaculis. Laoreet eget eu lacus cursus odio quam ut elementum. Faucibus cursus in placerat enim non senectus. In molestie volutpat at sem bibendum ac id. Suspendisse erat malesuada vulputate et congue blandit in erat ornare. Rhoncus interdum.</ld-notice>\n\n<!-- CSS component -->\n\n<div class=\"ld-notice ld-notice--error\">\n  <!-- Note that you can use an img element with the class ld-notice__icon here, as well. -->\n  <svg class=\"ld-notice__icon ld-icon ld-icon--lg\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"currentColor\"/>\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.18234 11.0254C6.79228 11.0254 6.48657 10.9147 6.26518 10.6933C6.0438 10.472 5.93311 10.1662 5.93311 9.77618V6.12335C5.93311 5.99685 6.0069 5.93359 6.15449 5.93359H6.89771C7.28776 5.93359 7.59348 6.04428 7.81487 6.26567C8.03625 6.48705 8.14694 6.79277 8.14694 7.18283V10.8357C8.14694 10.9622 8.07315 11.0254 7.92556 11.0254H7.18234Z\" fill=\"var(--ld-icon-secondary-col)\"/>\n    <ellipse cx=\"6.99977\" cy=\"3.80007\" rx=\"1.06667\" ry=\"1.06667\" fill=\"var(--ld-icon-secondary-col)\"/>\n  </svg>\n  <p class=\"ld-notice__headline ld-typo--h4\">An error occurred</p>\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Metus pellentesque facilisi nunc iaculis. Laoreet eget eu lacus cursus odio quam ut elementum. Faucibus cursus in placerat enim non senectus. In molestie volutpat at sem bibendum ac id. Suspendisse erat malesuada vulputate et congue blandit in erat ornare. Rhoncus interdum.\n</div>\n{% endexample %}\n\n### As info message\n\n{% example %}\n<ld-notice headline=\"Information\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Metus pellentesque facilisi nunc iaculis. Laoreet eget eu lacus cursus odio quam ut elementum. Faucibus cursus in placerat enim non senectus. In molestie volutpat at sem bibendum ac id. Suspendisse erat malesuada vulputate et congue blandit in erat ornare. Rhoncus interdum.</ld-notice>\n\n<!-- CSS component -->\n\n<div class=\"ld-notice ld-notice--info\">\n  <!-- Note that you can use an img element with the class ld-notice__icon here, as well. -->\n  <svg class=\"ld-notice__icon ld-icon ld-icon--lg\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"currentColor\"/>\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.18234 11.0254C6.79228 11.0254 6.48657 10.9147 6.26518 10.6933C6.0438 10.472 5.93311 10.1662 5.93311 9.77618V6.12335C5.93311 5.99685 6.0069 5.93359 6.15449 5.93359H6.89771C7.28776 5.93359 7.59348 6.04428 7.81487 6.26567C8.03625 6.48705 8.14694 6.79277 8.14694 7.18283V10.8357C8.14694 10.9622 8.07315 11.0254 7.92556 11.0254H7.18234Z\" fill=\"var(--ld-icon-secondary-col)\"/>\n    <ellipse cx=\"6.99977\" cy=\"3.80007\" rx=\"1.06667\" ry=\"1.06667\" fill=\"var(--ld-icon-secondary-col)\"/>\n  </svg>\n  <p class=\"ld-notice__headline ld-typo--h4\">Information</p>\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Metus pellentesque facilisi nunc iaculis. Laoreet eget eu lacus cursus odio quam ut elementum. Faucibus cursus in placerat enim non senectus. In molestie volutpat at sem bibendum ac id. Suspendisse erat malesuada vulputate et congue blandit in erat ornare. Rhoncus interdum.\n</div>\n{% endexample %}\n\n### As warning message\n\n{% example %}\n<ld-notice headline=\"Warning!\" mode=\"warning\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Metus pellentesque facilisi nunc iaculis. Laoreet eget eu lacus cursus odio quam ut elementum. Faucibus cursus in placerat enim non senectus. In molestie volutpat at sem bibendum ac id. Suspendisse erat malesuada vulputate et congue blandit in erat ornare. Rhoncus interdum.</ld-notice>\n\n<!-- CSS component -->\n\n<div class=\"ld-notice ld-notice--warning\">\n  <!-- Note that you can use an img element with the class ld-notice__icon here, as well. -->\n  <svg class=\"ld-notice__icon ld-icon ld-icon--lg\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"currentColor\"/>\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.18234 11.0254C6.79228 11.0254 6.48657 10.9147 6.26518 10.6933C6.0438 10.472 5.93311 10.1662 5.93311 9.77618V6.12335C5.93311 5.99685 6.0069 5.93359 6.15449 5.93359H6.89771C7.28776 5.93359 7.59348 6.04428 7.81487 6.26567C8.03625 6.48705 8.14694 6.79277 8.14694 7.18283V10.8357C8.14694 10.9622 8.07315 11.0254 7.92556 11.0254H7.18234Z\" fill=\"var(--ld-icon-secondary-col)\"/>\n    <ellipse cx=\"6.99977\" cy=\"3.80007\" rx=\"1.06667\" ry=\"1.06667\" fill=\"var(--ld-icon-secondary-col)\"/>\n  </svg>\n  <p class=\"ld-notice__headline ld-typo--h4\">Warning!</p>\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Metus pellentesque facilisi nunc iaculis. Laoreet eget eu lacus cursus odio quam ut elementum. Faucibus cursus in placerat enim non senectus. In molestie volutpat at sem bibendum ac id. Suspendisse erat malesuada vulputate et congue blandit in erat ornare. Rhoncus interdum.\n</div>\n{% endexample %}\n\n### With custom icon\n\n{% example %}\n<ld-notice headline=\"With custom icon\" mode=\"success\">\n  <ld-icon slot=\"custom-icon\" name=\"placeholder\" size=\"lg\"></ld-icon>\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Metus pellentesque facilisi nunc iaculis. Laoreet eget eu lacus cursus odio quam ut elementum. Faucibus cursus in placerat enim non senectus. In molestie volutpat at sem bibendum ac id. Suspendisse erat malesuada vulputate et congue blandit in erat ornare. Rhoncus interdum.\n</ld-notice>\n\n<!-- CSS component -->\n\n<div class=\"ld-notice ld-notice--success\">\n  <!-- Note that you can use an img element with the class ld-notice__icon here, as well. -->\n  <svg class=\"ld-notice__icon ld-icon ld-icon--lg\" viewBox=\"0 0 16 16\" fill=\"none\"><rect x=\"1\" y=\"1\" width=\"14\" height=\"14\" rx=\"3\" stroke=\"currentcolor\" stroke-width=\"2\"/><circle cx=\"8\" cy=\"8\" r=\"3\" stroke=\"currentColor\" stroke-width=\"2\"/></svg>\n  <p class=\"ld-notice__headline ld-typo--h4\">With custom icon</p>\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Metus pellentesque facilisi nunc iaculis. Laoreet eget eu lacus cursus odio quam ut elementum. Faucibus cursus in placerat enim non senectus. In molestie volutpat at sem bibendum ac id. Suspendisse erat malesuada vulputate et congue blandit in erat ornare. Rhoncus interdum.\n</div>\n{% endexample %}\n\n",
      "docs": "---\neleventyNavigation:\n  key: Notice\n  parent: Components\nlayout: layout.njk\ntitle: Notice\npermalink: components/ld-notice/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "headline - `ld-typo` element used for the headline"
        },
        {
          "name": "part",
          "text": "icon - Image tag used for the icon"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "headline",
          "type": "string",
          "mutable": false,
          "attr": "headline",
          "reflectToAttr": false,
          "docs": "Headline of the notice.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "mode",
          "type": "\"error\" | \"info\" | \"success\" | \"warning\"",
          "mutable": false,
          "attr": "mode",
          "reflectToAttr": false,
          "docs": "Mode of the notice.",
          "docsTags": [],
          "default": "'info'",
          "values": [
            {
              "value": "error",
              "type": "string"
            },
            {
              "value": "info",
              "type": "string"
            },
            {
              "value": "success",
              "type": "string"
            },
            {
              "value": "warning",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "headline",
          "docs": "`ld-typo` element used for the headline"
        },
        {
          "name": "icon",
          "docs": "Image tag used for the icon"
        }
      ],
      "dependents": [],
      "dependencies": [
        "ld-icon",
        "ld-typo"
      ],
      "dependencyGraph": {
        "ld-notice": [
          "ld-icon",
          "ld-typo"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-notification/ld-notification.tsx",
      "encapsulation": "shadow",
      "tag": "ld-notification",
      "readme": "---\neleventyNavigation:\n  key: Notification\n  parent: Components\nlayout: layout.njk\ntitle: Notification\npermalink: components/ld-notification/\n---\n\n# ld-notification\n\nUse the `ld-notification` component in your application to display popup notifications.\n\n---\n\n## How it works\n\nAdd the component to your application, preferably close after the opening `<body>` tag. The component is invisible as long as no new notifications are triggered. It listens to three [custom events](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent) on the `window`: the `ldNotificationAdd` the `ldNotificationDismiss` and the `ldNotificationClear` event. As soon as one of those events reaches the `window`, the component either queues and displays new notifications or removes queued notifications from its queue. The content and type of each notification is set via the `event.detail` property. Here is an example on how you can trigger a notification containing an alert message:\n\n```js\ndispatchEvent(new CustomEvent('ldNotificationAdd', {\n  detail: {\n    content: 'Something went wrong.',\n    type: 'alert',\n  }\n}))\n```\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  You should not use more than one <code>ld-notification</code> component in your app. It wouldn't make much sense to have multiple components managing notification queues and displaying them independently, would it?\n</ld-notice>\n\n## Accessibility\n\nEach notification item that appears on the screen has either the ARIA role `status` or `alert`, so that assistive technology should announce the notification content to the user.\n\nKeep in mind that focus is not explicitly changed when a notification appears. This means that users with visual disabilities may have problems navigating to a notification. This is especially the case for notifications which time out. And even more for notifications containing interaction elements, such as confirmation buttons etc. Thus, we recommend you avoid using notifications for critical information that users need to act on immediately. In summary, notifications may be difficult for users with low vision or low dexterity to access because they\n\n- Disappear automatically\n- Can’t be easily accessed with the keyboard\n- Might appear outside the proximity of the user’s current focus\n\n### Notifications with interactive content\n\nMake sure that users can accomplish the interaction in the notification another way, since an interaction element within a notification may be difficult to access for some users.\n\nIf you really do want to include an interaction element within a notification, [make sure the notification doesn't time out](components/ld-notification/#preventing-a-timeout) so that the user has enough time to navigate to and interact with the notification.\n\n## Notification hierarchy\n\nNotifications of type `'alert'` take precedence of notifications of type `'info'` and `'warn'`, which means that if a notification of type `'info'` or `'warn'` is fired after a notification of type `'alert'` and the notification of type `'alert'` has not been dismissed yet, the potentially less important notifications get placed behind the notification of type `'alert'`. Other than that most recent notifications take precedence of older notifications, pushing the older ones back in the queue and resetting and pausing their timeouts.\n\n## Notification timeout\n\nWhile notifications with type `'alert'` do not time out, notifications of type `'info'` and `'warn'` have a default timeout of **six seconds** after which they disappear automatically. You can customize this timeout by attaching a timeout value of your choice to the appropriate property on the event detail object: \n\n```js\ndispatchEvent(new CustomEvent('ldNotificationAdd', {\n  detail: {\n    content: 'Here is a message for you.',\n    type: 'info',\n    timeout: 8000, // in milliseconds\n  }\n}))\n```\n\n### Preventing a timeout\n\nIf you want to prevent a notification of type `'info'` and `'warn'` from timing out, use the timeout value `0`:\n\n```js\ndispatchEvent(new CustomEvent('ldNotificationAdd', {\n  detail: {\n    content: 'Here is a message for you.',\n    type: 'info',\n    timeout: 0, // notification will not time out\n  }\n}))\n```\n\n### Timeout handling for queued notifications\n\nIf a notification gets queued behind another notification, its timeout is reset to its initial value and on pause.\n\n## Notification content\n\nThe examples above used simple text as content for the notification. But you can also use an HTML string containing links and other components:\n\n ```js\ndispatchEvent(new CustomEvent('ldNotificationAdd', {\n  detail: {\n    content: '<ld-icon name=\"placeholder\"></ld-icon> A notification with an icon.',\n    type: 'info',\n  }\n}))\n```\n\n### Redundant notifications handling\n\nIf a notification event is triggered containing the same content and type as another notification which already is queued for notification display, the event is ignored. If you still need to trigger another notification with the same content, you can append a zero-space character to your content.\n\n## Dismissing notificaitons\n\nWhile the user can dismiss the currently displayed notification by pressing the cross button on the notification, there also exist ways to programmatically dismiss notifications.\n\n### Dismissing current notificaiton\n\nYou can dismiss the current notification programmatically by dispatching the `ldNotificationDismiss` event on the `window`:\n\n```js\ndispatchEvent(new CustomEvent('ldNotificationDismiss'))\n```\n\n### Clearing all notifications\n\nYou can dismiss all notifications programmatically by dispatching the `ldNotificationClear` event on the `window`:\n\n```js\ndispatchEvent(new CustomEvent('ldNotificationClear'))\n```\n\n## Theming\n\nNotifications of type `'info'` can be themed by wrapping `ld-notification` in a [theme container](components/ld-theme/). \n\n## Examples\n\nThe examples below illustrate how you can trigger notifications using different parameters:\n\n{% example '{ \"stacked\": true, \"styles\": { \"overflow\": \"visible\", \"will-change\": \"initial\" } }' %}\n<style>\n.notification-form {\n  display: grid;\n  grid-template-columns: 1fr auto;\n  align-items: flex-end;\n  grid-gap: 1rem;\n  width: calc(100% - 2 * var(--ld-sp-24));\n}\n</style>\n\n<ld-notification placement=\"bottom\"></ld-notification>\n\n<form class=\"notification-form\" id=\"form-info\">\n  <ld-label>\n    Info message\n    <ld-input id=\"input-info\" value=\"I have an info for you.\"></ld-input>\n  </ld-label>\n  <ld-button type=\"submit\">Submit</ld-button>\n</form>\n\n<form class=\"notification-form\" id=\"form-warn\">\n  <ld-label>\n    Warning\n    <ld-input id=\"input-warn\" value=\"I warn you!\"></ld-input>\n  </ld-label>\n  <ld-button type=\"submit\">Submit</ld-button>\n</form>\n\n<form class=\"notification-form\" id=\"form-info-custom-timeout\">\n  <ld-label>\n    Info message which times out after 10 seconds\n    <ld-input id=\"input-info-custom-timeout\" value=\"I'll take my time.\"></ld-input>\n  </ld-label>\n  <ld-button type=\"submit\">Submit</ld-button>\n</form>\n\n<form class=\"notification-form\" id=\"form-info-no-timeout\">\n  <ld-label>\n    Info message which doesn't time out\n    <ld-input id=\"input-info-no-timeout\" value=\"I'm here to stay!\"></ld-input>\n  </ld-label>\n  <ld-button type=\"submit\">Submit</ld-button>\n</form>\n\n<form class=\"notification-form\" id=\"form-alert\">\n  <ld-label>\n    alert message\n    <ld-input id=\"input-alert\" value=\"Ooops.\"></ld-input>\n  </ld-label>\n  <ld-button type=\"submit\">Submit</ld-button>\n</form>\n\n<form id=\"form-dismiss\">\n  <ld-button type=\"submit\">Dismiss current notification</ld-button>\n</form>\n\n<form id=\"form-clear\">\n  <ld-button type=\"submit\">Clear all notifications</ld-button>\n</form>\n\n<script>\nconst formInfo = document.getElementById('form-info')\nconst inputInfo = document.getElementById('input-info')\nformInfo.addEventListener('submit', ev => {\n  ev.preventDefault()\n  dispatchEvent(new CustomEvent('ldNotificationAdd', {\n    detail: {\n      content: inputInfo.value || '',\n      type: 'info',\n    }\n  }))\n})\n\nconst formWarn = document.getElementById('form-warn')\nconst inputWarn = document.getElementById('input-warn')\nformWarn.addEventListener('submit', ev => {\n  ev.preventDefault()\n  dispatchEvent(new CustomEvent('ldNotificationAdd', {\n    detail: {\n      content: inputWarn.value || '',\n      type: 'warn',\n    }\n  }))\n})\n\nconst formInfoCustomTimeout = document.getElementById('form-info-custom-timeout')\nconst inputInfoCustomTimeout = document.getElementById('input-info-custom-timeout')\nformInfoCustomTimeout.addEventListener('submit', ev => {\n  ev.preventDefault()\n  dispatchEvent(new CustomEvent('ldNotificationAdd', {\n    detail: {\n      content: inputInfoCustomTimeout.value || '',\n      type: 'info',\n      timeout: 10000,\n    }\n  }))\n})\n\nconst formInfoNoTimeout = document.getElementById('form-info-no-timeout')\nconst inputInfoNoTimeout = document.getElementById('input-info-no-timeout')\nformInfoNoTimeout.addEventListener('submit', ev => {\n  ev.preventDefault()\n  dispatchEvent(new CustomEvent('ldNotificationAdd', {\n    detail: {\n      content: inputInfoNoTimeout.value || '',\n      type: 'info',\n      timeout: 0,\n    }\n  }))\n})\n\nconst formAlert = document.getElementById('form-alert')\nconst inputAlert = document.getElementById('input-alert')\nformAlert.addEventListener('submit', ev => {\n  ev.preventDefault()\n  dispatchEvent(new CustomEvent('ldNotificationAdd', {\n    detail: {\n      content: inputAlert.value || '',\n      type: 'alert',\n    }\n  }))\n})\n\nconst formDismiss = document.getElementById('form-dismiss')\nformDismiss.addEventListener('submit', ev => {\n  ev.preventDefault()\n  dispatchEvent(new CustomEvent('ldNotificationDismiss'))\n})\n\nconst formClear = document.getElementById('form-clear')\nformClear.addEventListener('submit', ev => {\n  ev.preventDefault()\n  dispatchEvent(new CustomEvent('ldNotificationClear'))\n})\n</script>\n{% endexample %}\n",
      "docs": "---\neleventyNavigation:\n  key: Notification\n  parent: Components\nlayout: layout.njk\ntitle: Notification\npermalink: components/ld-notification/\n---",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "placement",
          "type": "\"bottom\" | \"top\"",
          "mutable": false,
          "attr": "placement",
          "reflectToAttr": false,
          "docs": "Notification placement within the screen.",
          "docsTags": [],
          "default": "'top'",
          "values": [
            {
              "value": "bottom",
              "type": "string"
            },
            {
              "value": "top",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [
        {
          "event": "ldNotificationAdd",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "ldNotificationDismiss",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "ldNotificationClear",
          "target": "window",
          "capture": false,
          "passive": true
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "btn-dismiss",
          "docs": ""
        },
        {
          "name": "btn-dismiss-icon",
          "docs": ""
        },
        {
          "name": "content",
          "docs": ""
        },
        {
          "name": "focusable",
          "docs": ""
        },
        {
          "name": "item",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-select/ld-option/ld-option.tsx",
      "encapsulation": "shadow",
      "tag": "ld-option",
      "readme": "---\neleventyNavigation:\n  key: Option\n  parent: Select\nlayout: layout.njk\ntitle: Option\npermalink: components/ld-select/ld-option/\n---\n\n# ld-option\n\nThe `ld-option` component is a subcomponent for `ld-select`.\n\nPlease refer to the [`ld-select` documentation](components/ld-select) for usage examples.\n\n---\n\n",
      "docs": "---\neleventyNavigation:\n  key: Option\n  parent: Select\nlayout: layout.njk\ntitle: Option\npermalink: components/ld-select/ld-option/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disables the option.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "hidden",
          "type": "boolean",
          "mutable": false,
          "attr": "hidden",
          "reflectToAttr": true,
          "docs": "Set to true on filtering via select input.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "If present, this boolean attribute indicates that the option is selected.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The content of this attribute represents the value to be submitted with the form,\nshould this option be selected. If this attribute is omitted, the value is taken\nfrom the text content of the option element.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-pagination/ld-pagination.tsx",
      "encapsulation": "shadow",
      "tag": "ld-pagination",
      "readme": "---\neleventyNavigation:\n  key: Pagination\n  parent: Components\nlayout: layout.njk\ntitle: Pagination\npermalink: components/ld-pagination/\n---\n\n# ld-pagination\n\nAn pagination provides a visual hint for content or interactions. Combine it with textual information for a better user experience. When using an pagination on its own, make sure to either apply an [`aria-label`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-label_attribute) or use the [ld-sr-only](components/ld-sr-only/) component.\n\n---\n\n## Examples\n\n### Default\n\n{% example '{ \"centered\": true, \"stacked\": true }' %}\n<ld-pagination length=\"15\"></ld-pagination>\n{% endexample %}\n\n### With sticky items\n\n{% example '{ \"centered\": true, \"stacked\": true }' %}\n<ld-pagination sticky=\"1\" length=\"15\"></ld-pagination>\n<ld-pagination sticky=\"3\" length=\"15\"></ld-pagination>\n{% endexample %}\n\n### Offset\n\n{% example '{ \"centered\": true, \"stacked\": true }'  %}\n<ld-pagination offset=\"1\" length=\"15\"></ld-pagination>\n<ld-pagination offset=\"0\" length=\"15\"></ld-pagination>\n{% endexample %}\n\n### Indefinite length\n\n{% example %}\n<ld-pagination></ld-pagination>\n{% endexample %}\n\n### Item label\n\n{% example %}\n<ld-pagination item-label=\"Slide\" length=\"15\"></ld-pagination>\n{% endexample %}\n\n### Hide arrow buttons\n\n{% example '{ \"centered\": true, \"stacked\": true }'  %}\n<ld-pagination hide-prev-next hide-start-end length=\"15\"></ld-pagination>\n<ld-pagination hide-prev-next length=\"15\"></ld-pagination>\n<ld-pagination hide-start-end length=\"15\"></ld-pagination>\n{% endexample %}\n\n### Text instead of arrow buttons\n\n{% example '{ \"centered\": true, \"stacked\": true }'  %}\n<ld-pagination end-label=\"Last\" length=\"15\" next-label=\"Next\" prev-label=\"Prev\" start-label=\"First\"></ld-pagination>\n<ld-pagination hide-prev-next length=\"15\" start-label=\"First\" end-label=\"Last\"></ld-pagination>\n<ld-pagination hide-start-end length=\"15\" next-label=\"Next\" prev-label=\"Prev\"></ld-pagination>\n{% endexample %}\n\n### Size\n\n{% example '{ \"centered\": true, \"stacked\": true }' %}\n<ld-pagination length=\"15\" size=\"sm\"></ld-pagination>\n<ld-pagination length=\"15\"></ld-pagination>\n<ld-pagination length=\"15\" size=\"lg\"></ld-pagination>\n{% endexample %}\n\n### Preselected index\n\n{% example %}\n<ld-pagination selected-index=\"7\" length=\"15\"></ld-pagination>\n{% endexample %}\n\n### Programmatic manipulation\n\n{% example %}\n<ld-button onclick=\"jump(-10);\"><< 10</ld-button>\n<ld-pagination id=\"pagination-1\" length=\"15\"></ld-pagination>\n<ld-button onclick=\"jump(10);\">>> 10</ld-button>\n<ld-button onclick=\"add(-10);\">Remove 10</ld-button>\n<ld-button onclick=\"add(10);\">Add 10</ld-button>\n\n<script>\n  const pagination1 = document.getElementById('pagination-1')\n  function jump(steps) {\n    pagination1.selectedIndex += steps;\n  }\n\n  function add(amount) {\n    pagination1.length += amount;\n  }\n</script>\n{% endexample %}\n\n### Event handling\n\n{% example %}\n<ld-pagination id=\"pagination-2\" length=\"15\"></ld-pagination>\n\n<script>\n  const pagination2 = document.getElementById('pagination-2');\n  pagination2.addEventListener(\"ldchange\", (event) => {\n    console.log(\"Selected index is:\", event.detail)\n  })\n</script>\n{% endexample %}\n\n### Dots mode\n\n{% example %}\n<ld-pagination mode=\"dots\" hide-prev-next hide-start-end selected-index=\"3\" size=\"sm\" length=\"7\"></ld-pagination>\n<ld-pagination mode=\"dots\" hide-prev-next hide-start-end selected-index=\"3\" length=\"15\"></ld-pagination>\n<ld-pagination mode=\"dots\" hide-prev-next hide-start-end selected-index=\"3\" size=\"lg\" length=\"7\"></ld-pagination>\n{% endexample %}\n\n### Dots mode with custom space\n\n{% example %}\n<ld-pagination space=\"1.5rem\" mode=\"dots\" hide-prev-next hide-start-end length=\"7\"></ld-pagination>\n{% endexample %}\n\n### On brand color\n\n{% example '{ \"background\": \"brand\", \"hasBorder\": false }' %}\n<ld-pagination brand-color mode=\"dots\" hide-prev-next hide-start-end length=\"7\"></ld-pagination>\n<ld-pagination brand-color length=\"7\"></ld-pagination>\n{% endexample %}\n",
      "docs": "---\neleventyNavigation:\n  key: Pagination\n  parent: Components\nlayout: layout.njk\ntitle: Pagination\npermalink: components/ld-pagination/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "arrow - all arrow items (`ld-button` elements)"
        },
        {
          "name": "part",
          "text": "more-indicator - list-items containing more-indicator"
        },
        {
          "name": "part",
          "text": "end - arrow to jump to the last item (`ld-button` element)"
        },
        {
          "name": "part",
          "text": "item - all pagination items containing a number (`ld-button` elements)"
        },
        {
          "name": "part",
          "text": "items - list containing all slidable items and the marker"
        },
        {
          "name": "part",
          "text": "list-wrapper - list-item containing the `ul` element with slidable items"
        },
        {
          "name": "part",
          "text": "marker - marker highlighting the selected item"
        },
        {
          "name": "part",
          "text": "next - arrow to go to the next item (`ld-button` element)"
        },
        {
          "name": "part",
          "text": "prev - arrow to go to the previous item (`ld-button` element)"
        },
        {
          "name": "part",
          "text": "start - arrow to jump to the first item (`ld-button` element)"
        },
        {
          "name": "part",
          "text": "sticky - all sticky items (`ld-button` elements)"
        },
        {
          "name": "part",
          "text": "wrapper - list containing all pagination items"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "brandColor",
          "type": "boolean",
          "mutable": false,
          "attr": "brand-color",
          "reflectToAttr": false,
          "docs": "Switch colors for brand background.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "endLabel",
          "type": "string",
          "mutable": false,
          "attr": "end-label",
          "reflectToAttr": false,
          "docs": "Label text for the end button (replaces the icon).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "hidePrevNext",
          "type": "boolean",
          "mutable": false,
          "attr": "hide-prev-next",
          "reflectToAttr": false,
          "docs": "Hide the buttons to navigate forward/backward.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "hideStartEnd",
          "type": "boolean",
          "mutable": false,
          "attr": "hide-start-end",
          "reflectToAttr": false,
          "docs": "Hide the buttons to navigate to the first/last item.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "itemLabel",
          "type": "string",
          "mutable": false,
          "attr": "item-label",
          "reflectToAttr": false,
          "docs": "Label to communicate the type of an item.",
          "docsTags": [],
          "default": "'Page'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "length",
          "type": "number",
          "mutable": true,
          "attr": "length",
          "reflectToAttr": false,
          "docs": "The number of items/pages available for pagination (required to let the user jump to the last item/page).",
          "docsTags": [],
          "default": "Infinity",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "mode",
          "type": "\"dots\" | \"numbers\"",
          "mutable": false,
          "attr": "mode",
          "reflectToAttr": false,
          "docs": "Items display mode, default as numbers.",
          "docsTags": [],
          "default": "'numbers'",
          "values": [
            {
              "value": "dots",
              "type": "string"
            },
            {
              "value": "numbers",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "nextLabel",
          "type": "string",
          "mutable": false,
          "attr": "next-label",
          "reflectToAttr": false,
          "docs": "Label text for the forward button (replaces the icon).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "offset",
          "type": "number",
          "mutable": false,
          "attr": "offset",
          "reflectToAttr": false,
          "docs": "Number of next/previous items visible.",
          "docsTags": [],
          "default": "2",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "prevLabel",
          "type": "string",
          "mutable": false,
          "attr": "prev-label",
          "reflectToAttr": false,
          "docs": "Label text for the backward button (replaces the icon).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selectedIndex",
          "type": "number",
          "mutable": true,
          "attr": "selected-index",
          "reflectToAttr": false,
          "docs": "The currently selected item (an index of `-1` means nothing is selected).",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "\"lg\" | \"sm\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Size of the pagination.",
          "docsTags": [],
          "values": [
            {
              "value": "lg",
              "type": "string"
            },
            {
              "value": "sm",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "space",
          "type": "string",
          "mutable": false,
          "attr": "space",
          "reflectToAttr": false,
          "docs": "Space between dots (dots mode only, default depending on `size` prop).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "startLabel",
          "type": "string",
          "mutable": false,
          "attr": "start-label",
          "reflectToAttr": false,
          "docs": "Label text for the start button (replaces the icon).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "sticky",
          "type": "number",
          "mutable": false,
          "attr": "sticky",
          "reflectToAttr": false,
          "docs": "Number of items permanently visible at the start/end.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "ldchange",
          "detail": "number",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Dispatched, if the selected index changes.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "arrow",
          "docs": "all arrow items (`ld-button` elements)"
        },
        {
          "name": "end",
          "docs": "arrow to jump to the last item (`ld-button` element)"
        },
        {
          "name": "focusable",
          "docs": ""
        },
        {
          "name": "item",
          "docs": "all pagination items containing a number (`ld-button` elements)"
        },
        {
          "name": "items",
          "docs": "list containing all slidable items and the marker"
        },
        {
          "name": "list-wrapper",
          "docs": "list-item containing the `ul` element with slidable items"
        },
        {
          "name": "marker",
          "docs": "marker highlighting the selected item"
        },
        {
          "name": "more-indicator",
          "docs": "list-items containing more-indicator"
        },
        {
          "name": "next",
          "docs": "arrow to go to the next item (`ld-button` element)"
        },
        {
          "name": "prev",
          "docs": "arrow to go to the previous item (`ld-button` element)"
        },
        {
          "name": "slide-wrapper",
          "docs": ""
        },
        {
          "name": "start",
          "docs": "arrow to jump to the first item (`ld-button` element)"
        },
        {
          "name": "sticky",
          "docs": "all sticky items (`ld-button` elements)"
        },
        {
          "name": "wrapper",
          "docs": "list containing all pagination items"
        }
      ],
      "dependents": [],
      "dependencies": [
        "ld-button",
        "ld-icon"
      ],
      "dependencyGraph": {
        "ld-pagination": [
          "ld-button",
          "ld-icon"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-progress/ld-progress.tsx",
      "encapsulation": "shadow",
      "tag": "ld-progress",
      "readme": "---\neleventyNavigation:\n  key: Progress\n  parent: Components\nlayout: layout.njk\ntitle: Progress\npermalink: components/ld-progress/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-progress.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-sr-only.css\">\n\n# ld-progress\n\nThe `ld-progress` component can be used to displays the progress status for tasks that take a long time.\n\n---\n\n## Default\n\n{% example %}\n<ld-sr-only id=\"progress-label\">Progress</ld-sr-only>\n<ld-progress aria-labeledby=\"progress-label\" aria-valuenow=\"25\"></ld-progress>\n\n<!-- CSS component -->\n\n<span class=\"ld-sr-only\" id=\"progress-label-css\">Progress</span>\n<div class=\"ld-progress\"\n     aria-labeledby=\"progress-label-css\"\n     aria-valuenow=\"25\"\n     role=\"progressbar\"\n     style=\"--ld-progress-valuenow: 25\"></div>\n{% endexample %}\n\nInteractive example:\n\n{% example '{ \"stacked\": true, \"centered\": true }' %}\n<ld-sr-only id=\"progress-label\">Progress</ld-sr-only>\n<ld-progress aria-labeledby=\"progress-label\" aria-valuenow=\"25\"></ld-progress>\n\n<ld-slider value=\"25\" max=\"200\" width=\"14rem\"></ld-slider>\n\n<script>\n  void function() {\n    const slider = document.currentScript.previousElementSibling\n    const progress = slider.previousElementSibling\n    slider.addEventListener('ldchange', ev => {\n      progress.ariaValuenow = ev.detail[0]\n    })\n  }()\n</script>\n\n<!-- CSS component -->\n\n<span class=\"ld-sr-only\" id=\"progress-label-css\">Progress</span>\n<div class=\"ld-progress\"\n     aria-labeledby=\"progress-label-css\"\n     aria-valuenow=\"25\"\n     role=\"progressbar\"\n     style=\"--ld-progress-valuenow: 25\"></div>\n\n<ld-slider value=\"25\" max=\"200\" width=\"14rem\"></ld-slider>\n\n<script>\n  void function() {\n    const slider = document.currentScript.previousElementSibling\n    const progress = slider.previousElementSibling\n    slider.addEventListener('ldchange', ev => {\n      const val = ev.detail[0]\n      progress.ariaValuenow = val\n      progress.style.setProperty('--ld-progress-valuenow', val)\n    })\n  }()\n</script>\n{% endexample %}\n\n## With custom min and max values\n\n{% example %}\n<ld-progress aria-valuemax=\"300\"\n             aria-valuemin=\"100\"\n             aria-valuenow=\"150\"></ld-progress>\n\n<!-- CSS component -->\n\n<div class=\"ld-progress\"\n     aria-valuemax=\"300\"\n     aria-valuemin=\"100\"\n     aria-valuenow=\"150\"\n     role=\"progressbar\"\n     style=\"--ld-progress-valuemax: 300; --ld-progress-valuemin: 100; --ld-progress-valuenow: 150\"></div>\n{% endexample %}\n\n## Overflow\n\nThe component can visualize an overflow value up to 200% of the maximum progress value.\n\n{% example %}\n<ld-progress aria-valuenow=\"125\"></ld-progress>\n<ld-progress aria-valuenow=\"225\"></ld-progress>\n\n<!-- CSS component -->\n<div class=\"ld-progress\"\n     aria-valuenow=\"125\"\n     role=\"progressbar\"\n     style=\"--ld-progress-valuenow: 125\"></div>\n<div class=\"ld-progress\"\n     aria-valuenow=\"225\"\n     role=\"progressbar\"\n     style=\"--ld-progress-valuenow: 225\"></div>\n{% endexample %}\n\n## Steps\n\n{% example %}\n<ld-progress aria-valuemax=\"4\" aria-valuenow=\"1\" steps></ld-progress>\n\n<!-- CSS component -->\n\n<div class=\"ld-progress ld-progress--steps\"\n     aria-valuemax=\"4\"\n     aria-valuenow=\"1\"\n     role=\"progressbar\"\n     style=\"--ld-progress-valuemax: 4; --ld-progress-valuenow: 1\"></div>\n{% endexample %}\n\n## Pending\n\n{% example %}\n<ld-progress pending aria-valuetext=\"indeterminate\"></ld-progress>\n<ld-progress pending aria-valuenow=\"25\"></ld-progress>\n\n<!-- CSS component -->\n\n<div class=\"ld-progress ld-progress--pending\"\n     aria-valuetext=\"indeterminate\"\n     role=\"progressbar\"\n     style=\"--ld-progress-valuenow: 100\"></div>\n<div class=\"ld-progress ld-progress--pending\"\n     aria-valuenow=\"25\"\n     role=\"progressbar\"\n     style=\"--ld-progress-valuenow: 25\"></div>\n{% endexample %}\n\n## On brand color\n\nUse this mode on backgrounds with brand color.\n\n{% example '{ \"background\": \"brand\", \"hasBorder\": false }' %}\n<ld-progress brand-color aria-valuenow=\"25\"></ld-progress>\n\n<!-- CSS component -->\n\n<div class=\"ld-progress ld-progress--brand-color\"\n     aria-valuenow=\"25\"\n     role=\"progressbar\"\n     style=\"--ld-progress-valuenow: 25\"></div>\n{% endexample %}\n",
      "docs": "---\neleventyNavigation:\n  key: Progress\n  parent: Components\nlayout: layout.njk\ntitle: Progress\npermalink: components/ld-progress/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-progress.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-sr-only.css\">",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "ariaLabeledby",
          "type": "string",
          "mutable": false,
          "attr": "aria-labeledby",
          "reflectToAttr": true,
          "docs": "Defines the string value or identifies the element (or elements)\nthat label the progressbar element providing an accessible name.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ariaValuemax",
          "type": "number",
          "mutable": false,
          "attr": "aria-valuemax",
          "reflectToAttr": true,
          "docs": "Set to a decimal value representing the maximum value, and greater\nthan aria-valuemin. If not present, the default value is 100.",
          "docsTags": [],
          "default": "100",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ariaValuemin",
          "type": "number",
          "mutable": false,
          "attr": "aria-valuemin",
          "reflectToAttr": true,
          "docs": "Set to a decimal value representing the minimum value, and less\nthan aria-valuemax. If not present, the default value is 0.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ariaValuenow",
          "type": "number",
          "mutable": false,
          "attr": "aria-valuenow",
          "reflectToAttr": true,
          "docs": "Only present and required if the value is not indeterminate.\nSet to a decimal value between 0, or valuemin if present,\nand aria-valuemax indicating the current value of the progress bar.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ariaValuetext",
          "type": "string",
          "mutable": false,
          "attr": "aria-valuetext",
          "reflectToAttr": true,
          "docs": "Assistive technologies often present the value of aria-valuenow\nas a percentage. If this would not be accurate use this property\nto make the progress bar value understandable.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "brandColor",
          "type": "boolean",
          "mutable": false,
          "attr": "brand-color",
          "reflectToAttr": false,
          "docs": "Styles the progress bar in a way that it looks good on the\nprimary color of the current theme.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "pending",
          "type": "boolean",
          "mutable": false,
          "attr": "pending",
          "reflectToAttr": false,
          "docs": "Used to show indeterminate or pending progress state.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "steps",
          "type": "boolean",
          "mutable": false,
          "attr": "steps",
          "reflectToAttr": false,
          "docs": "Devides progress bar in multiple progress steps.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-radio/ld-radio.tsx",
      "encapsulation": "shadow",
      "tag": "ld-radio",
      "readme": "---\neleventyNavigation:\n  key: Radio Button\n  parent: Components\nlayout: layout.njk\ntitle: Radio Button\npermalink: components/ld-radio/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-radio.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-label.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-input-message.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n\n# ld-radio\n\nThe `ld-radio` component is meant to be used in **radio groups** — collections of radio buttons describing a set of related options (i.e. using a [`fieldset`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset) and a [`legend`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend)). Only one radio button in a given group can be selected at the same time.\n\nThis component can be used in conjunction with the [`ld-label`](components/ld-label/) and the [`ld-input-message`](components/ld-input-message/) component.\n\n---\n\n## Examples\n\n### Primary\n\n{% example %}\n<ld-radio name=\"example-1\"></ld-radio>\n<ld-radio name=\"example-1\" checked></ld-radio>\n\n<!-- CSS component -->\n\n<div class=\"ld-radio\">\n  <input type=\"radio\" name=\"example-1-css\">\n  <div class=\"ld-radio__dot\"></div>\n  <div class=\"ld-radio__box\"></div>\n</div>\n<div class=\"ld-radio\">\n  <input type=\"radio\" name=\"example-1-css\" checked>\n  <div class=\"ld-radio__dot\"></div>\n  <div class=\"ld-radio__box\"></div>\n</div>\n{% endexample %}\n\n### Disabled\n\n{% example %}\n<ld-radio name=\"example-2\" disabled></ld-radio>\n<ld-radio name=\"example-2\" disabled checked></ld-radio>\n\n<!-- CSS component -->\n\n<div class=\"ld-radio\">\n  <input type=\"radio\" disabled name=\"example-2-css\">\n  <div class=\"ld-radio__dot\"></div>\n  <div class=\"ld-radio__box\"></div>\n</div>\n<div class=\"ld-radio\">\n  <input type=\"radio\" disabled name=\"example-2-css\" checked>\n  <div class=\"ld-radio__dot\"></div>\n  <div class=\"ld-radio__box\"></div>\n</div>\n{% endexample %}\n\n**If you want the radio button to stay focusable** even if it is disabled, use `aria-disabled` in place of `disabled`:\n\n{% example %}\n<ld-radio name=\"example-3\" aria-disabled=\"true\"></ld-radio>\n<ld-radio name=\"example-3\" aria-disabled=\"true\" checked></ld-radio>\n\n<!-- CSS component -->\n\n<div class=\"ld-radio\">\n  <input\n    type=\"radio\"\n    aria-disabled=\"true\"\n    name=\"example-3-css\"\n    id=\"focusable-disabled-radio-1\">\n  <div class=\"ld-radio__dot\"></div>\n  <div class=\"ld-radio__box\"></div>\n</div>\n<div class=\"ld-radio\">\n  <input\n    type=\"radio\"\n    aria-disabled=\"true\"\n    name=\"example-3-css\"\n    checked\n    id=\"focusable-disabled-radio-2\">\n  <div class=\"ld-radio__dot\"></div>\n  <div class=\"ld-radio__box\"></div>\n</div>\n\n<!-- Example code for input prevention on aria-disabled radio buttons -->\n<script>\n  const inputs = document.querySelectorAll('#focusable-disabled-radio-1, #focusable-disabled-radio-2')\n  Array.from(inputs).forEach(input => {\n    input.addEventListener('click', (ev) => {\n      ev.preventDefault()\n    })\n  })\n</script>\n{% endexample %}\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  When <code>aria-disabled</code> is applied on the radio button, the component will try to prevent user interaction using an internal click event handler, calling <code>preventDefault()</code> on the click event. With the CSS component version on the other hand, you will need to take care of preventing the default behaviour of the radio button yourself.\n</ld-notice>\n\n### Dark\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  Dark tone radio buttons should only be used on white backgrounds.\n</ld-notice>\n\n{% example '{ \"background\": \"light\" }' %}\n<ld-radio name=\"example-4\" tone=\"dark\"></ld-radio>\n<ld-radio name=\"example-4\" tone=\"dark\" checked></ld-radio>\n\n<!-- CSS component -->\n\n<div class=\"ld-radio ld-radio--dark\">\n  <input type=\"radio\" name=\"example-4-css\">\n  <div class=\"ld-radio__dot\"></div>\n  <div class=\"ld-radio__box\"></div>\n</div>\n<div class=\"ld-radio ld-radio--dark\">\n  <input type=\"radio\" name=\"example-4-css\" checked>\n  <div class=\"ld-radio__dot\"></div>\n  <div class=\"ld-radio__box\"></div>\n</div>\n{% endexample %}\n\n### Highlight\n\n{% example %}\n<ld-radio name=\"example-5\" mode=\"highlight\"></ld-radio>\n<ld-radio name=\"example-5\" mode=\"highlight\" checked></ld-radio>\n\n<!-- CSS component -->\n\n<div class=\"ld-radio ld-radio--highlight\">\n  <input type=\"radio\" name=\"example-5-css\">\n  <div class=\"ld-radio__dot\"></div>\n  <div class=\"ld-radio__box\"></div>\n</div>\n<div class=\"ld-radio ld-radio--highlight\">\n  <input type=\"radio\" name=\"example-5-css\" checked>\n  <div class=\"ld-radio__dot\"></div>\n  <div class=\"ld-radio__box\"></div>\n</div>\n{% endexample %}\n\n### Invalid\n\nAn invalid state for a radio inputs inside a group makes sense, if for instance a selection is required, but no value is selected.\n\n{% example %}\n<ld-radio name=\"example-6\" invalid required></ld-radio>\n<ld-radio name=\"example-6\" invalid required></ld-radio>\n\n<!-- CSS component -->\n\n<div class=\"ld-radio ld-radio--invalid\">\n  <input type=\"radio\" name=\"example-6-css\" required>\n  <div class=\"ld-radio__dot\"></div>\n  <div class=\"ld-radio__box\"></div>\n</div>\n<div class=\"ld-radio ld-radio--invalid\">\n  <input type=\"radio\" name=\"example-6-css\" required>\n  <div class=\"ld-radio__dot\"></div>\n  <div class=\"ld-radio__box\"></div>\n</div>\n{% endexample %}\n\n### Danger\n\nThe radio button in mode \"danger\" looks and behaves the same as a radio button with the [`invalid`](components/ld-radio/#invalid) property. The only difference lies in the semantics of the properties, which helps to understand the context when reading the code.\n\n{% example %}\n<ld-radio name=\"example-7\" mode=\"danger\"></ld-radio>\n<ld-radio name=\"example-7\" mode=\"danger\" checked></ld-radio>\n\n<!-- CSS component -->\n\n<div class=\"ld-radio ld-radio--highlight ld-radio--danger\">\n  <input type=\"radio\" name=\"example-7-css\">\n  <div class=\"ld-radio__dot\"></div>\n  <div class=\"ld-radio__box\"></div>\n</div>\n<div class=\"ld-radio ld-radio--highlight ld-radio--danger\">\n  <input type=\"radio\" name=\"example-7-css\" checked>\n  <div class=\"ld-radio__dot\"></div>\n  <div class=\"ld-radio__box\"></div>\n</div>\n{% endexample %}\n\n### With label\n\n{% example %}\n<ld-label position=\"right\" size=\"m\">\n  Orange\n  <ld-radio name=\"example-8\" value=\"orange\"></ld-radio>\n</ld-label>\n\n<ld-label position=\"right\" size=\"m\">\n  Banana\n  <ld-radio name=\"example-8\" value=\"banana\"></ld-radio>\n</ld-label>\n\n<!-- CSS component -->\n\n<label class=\"ld-label ld-label--right ld-label--m\">\n  Orange\n  <div class=\"ld-radio\">\n    <input type=\"radio\" name=\"example-8-css\" value=\"orange\">\n    <div class=\"ld-radio__dot\"></div>\n    <div class=\"ld-radio__box\"></div>\n  </div>\n</label>\n\n<label class=\"ld-label ld-label--right ld-label--m\">\n  Banana\n  <div class=\"ld-radio\">\n    <input type=\"radio\" name=\"example-8-css\" value=\"banana\">\n    <div class=\"ld-radio__dot\"></div>\n    <div class=\"ld-radio__box\"></div>\n  </div>\n</label>\n{% endexample %}\n\nPlease reffer to the [ld-label](components/ld-label/) docs for more information on the label component.\n\n### With label and input message\n\n{% example %}\n<ld-label position=\"right\" size=\"m\">\n  Orange\n  <ld-radio name=\"example-9\"></ld-radio>\n  <ld-input-message mode=\"info\">You'll join the orange team.</ld-input-message>\n</ld-label>\n\n<ld-label position=\"right\" size=\"m\">\n  Banana\n  <ld-radio name=\"example-9\"></ld-radio>\n  <ld-input-message mode=\"info\">You'll join the banana team.</ld-input-message>\n</ld-label>\n\n<!-- CSS component -->\n\n<label class=\"ld-label ld-label--right ld-label--m\">\n  Orange\n  <div class=\"ld-radio\">\n    <input type=\"radio\" name=\"example-9-css\">\n    <div class=\"ld-radio__dot\"></div>\n    <div class=\"ld-radio__box\"></div>\n  </div>\n  <span class=\"ld-input-message\">\n    <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"var(--ld-thm-warning)\"/>\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.18234 11.0254C6.79228 11.0254 6.48657 10.9147 6.26518 10.6933C6.0438 10.472 5.93311 10.1662 5.93311 9.77618V6.12335C5.93311 5.99685 6.0069 5.93359 6.15449 5.93359H6.89771C7.28776 5.93359 7.59348 6.04428 7.81487 6.26567C8.03625 6.48705 8.14694 6.79277 8.14694 7.18283V10.8357C8.14694 10.9622 8.07315 11.0254 7.92556 11.0254H7.18234Z\" fill=\"var(--ld-col-neutral-900)\"/>\n      <ellipse cx=\"6.99977\" cy=\"3.80007\" rx=\"1.06667\" ry=\"1.06667\" fill=\"var(--ld-col-neutral-900)\"/>\n    </svg>\n    You'll join the orange team.\n  </span>\n</label>\n\n<label class=\"ld-label ld-label--right ld-label--m\">\n  Banana\n  <div class=\"ld-radio\">\n    <input type=\"radio\" name=\"example-9-css\">\n    <div class=\"ld-radio__dot\"></div>\n    <div class=\"ld-radio__box\"></div>\n  </div>\n  <span class=\"ld-input-message\">\n    <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"var(--ld-thm-warning)\"/>\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.18234 11.0254C6.79228 11.0254 6.48657 10.9147 6.26518 10.6933C6.0438 10.472 5.93311 10.1662 5.93311 9.77618V6.12335C5.93311 5.99685 6.0069 5.93359 6.15449 5.93359H6.89771C7.28776 5.93359 7.59348 6.04428 7.81487 6.26567C8.03625 6.48705 8.14694 6.79277 8.14694 7.18283V10.8357C8.14694 10.9622 8.07315 11.0254 7.92556 11.0254H7.18234Z\" fill=\"var(--ld-col-neutral-900)\"/>\n      <ellipse cx=\"6.99977\" cy=\"3.80007\" rx=\"1.06667\" ry=\"1.06667\" fill=\"var(--ld-col-neutral-900)\"/>\n    </svg>\n    You'll join the banana team.\n  </span>\n</label>\n{% endexample %}\n\n### Input validation\n\nThe `ld-radio` Web Component provides a low level API for integrating the component with the form validation solution of your choice. It allows you to listen for `focus`, `input` and `blur` events.\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  You can find examples for different kinds of input validation in the <a href=\"guides/form-validation/\">Form validation</a> documentation. Please also be aware of differences in event handling compared to native elements that come with Web Components. Details can be found in our <a href=\"guides/event-handling/\">Event handling</a> documentation.\n</ld-notice>\n",
      "docs": "---\neleventyNavigation:\n  key: Radio Button\n  parent: Components\nlayout: layout.njk\ntitle: Radio Button\npermalink: components/ld-radio/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-radio.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-label.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-input-message.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "input - Actual input element"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "autofocus",
          "type": "boolean",
          "mutable": false,
          "attr": "autofocus",
          "reflectToAttr": true,
          "docs": "Automatically focus the form control when the page is loaded.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "checked",
          "type": "boolean",
          "mutable": true,
          "attr": "checked",
          "reflectToAttr": false,
          "docs": "Indicates whether the radio button is selected.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disabled state of the radio.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "form",
          "type": "string",
          "mutable": false,
          "attr": "form",
          "reflectToAttr": false,
          "docs": "Associates the control with a form element.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "mutable": false,
          "attr": "invalid",
          "reflectToAttr": false,
          "docs": "Set this property to `true` in order to mark the radio visually as invalid.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ldTabindex",
          "type": "number",
          "mutable": false,
          "attr": "ld-tabindex",
          "reflectToAttr": false,
          "docs": "Tab index of the input.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "mode",
          "type": "\"danger\" | \"highlight\"",
          "mutable": false,
          "attr": "mode",
          "reflectToAttr": false,
          "docs": "Display mode.",
          "docsTags": [],
          "values": [
            {
              "value": "danger",
              "type": "string"
            },
            {
              "value": "highlight",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Used to specify the name of the control.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "The value is not editable.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Set this property to `true` in order to mark the radio button as required.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "tone",
          "type": "\"dark\"",
          "mutable": false,
          "attr": "tone",
          "reflectToAttr": false,
          "docs": "radio tone. Use `'dark'` on white backgrounds. Default is a light tone.",
          "docsTags": [],
          "values": [
            {
              "value": "dark",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The input value.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "focusInner",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "focusInner() => Promise<void>",
          "parameters": [],
          "docs": "Sets focus on the radio button.",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "ldchange",
          "detail": "boolean",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input value changed and the element loses focus.",
          "docsTags": []
        },
        {
          "event": "ldinput",
          "detail": "boolean",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input value changed.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "box",
          "docs": ""
        },
        {
          "name": "dot",
          "docs": ""
        },
        {
          "name": "input",
          "docs": "Actual input element"
        },
        {
          "name": "root",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-select/ld-select.tsx",
      "encapsulation": "shadow",
      "tag": "ld-select",
      "readme": "---\neleventyNavigation:\n  key: Select\n  parent: Components\nlayout: layout.njk\ntitle: Select\npermalink: components/ld-select/\ntags:\n  - select\n  - dropdown\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-select.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-input-message.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-label.css\">\n\n# ld-select\n\nThe `ld-select` component represents a control that provides a menu of options. This control can be used in forms to accept a selection of these options from the user.\n\nThe feature set of the `ld-select` Web Component differs from its CSS Component counterpart. While the first offers more display and input modes, the latter is a lightweight alternative, which only styles the native HTML select element.\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  If your application is mounted to a different element than the <code>body</code> element, or you have <em>z-order</em> related issues, you may need to configure the <code>bodyElement</code> option using the <code>tetherOptions</code> property. For more details check out the <a href=\"guides/troubleshooting/#popped-out-element-is-rendered-in-wrong-container\">related troubleshooting section</a>.\n</ld-notice>\n\n## Examples\n\n### Single select mode\n\n{% example %}\n<ld-select placeholder=\"Pick a fruit\" name=\"fruit\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n\n<!-- CSS component -->\n\n<div class='ld-select'>\n  <select name=\"fruits\">\n    <option value=\"\">Pick a fruit</option>\n    <option value=\"apple\">Apple</option>\n    <option value=\"banana\">Banana</option>\n    <option value=\"strawberry\">Strawberry</option>\n    <option value=\"watermelon\" disabled>Watermelon</option>\n    <option value=\"honeymelon\">Honeymelon</option>\n    <option value=\"rasberry\">Rasberry</option>\n    <option value=\"cherry\">Cherry</option>\n    <option value=\"blueberry\">Blueberry</option>\n    <option value=\"peach\">Peach</option>\n    <option value=\"grape\">Grape</option>\n    <option value=\"fuyu persimmon\">Fuyu Persimmon</option>\n    <option value=\"monstera deliciosa\">Monstera Deliciosa</option>\n    <option value=\"pear\">Pear</option>\n    <option value=\"pineapple\">Pineapple</option>\n    <option value=\"plum\">Plum</option>\n  </select>\n  <svg\n    role=\"presentation\"\n    class=\"ld-select__icon\"\n    viewBox=\"0 0 16 16\"\n  >\n    <path\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"3\"\n      d=\"M3 6l5 4 5-4\"\n    />\n  </svg>\n</div>\n{% endexample %}\n\n#### Prevent deselection\n\nYou can prevent a state with no options selected after initial selection in single select mode.\n\n{% example %}\n<ld-select placeholder=\"Pick a fruit\" name=\"fruit\" prevent-deselection>\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n{% endexample %}\n\n### Multiple select mode\n\n{% example %}\n<ld-select placeholder=\"Pick some fruits\" name=\"fruits\" multiple>\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n{% endexample %}\n\n#### Width\n\nYou may have noticed, that in multiple mode the component grows horizontally with the number of selected options. You can prevent this behaviour by either applying a `width` or a `max-width` style on the `ld-select` element:\n\n{% example %}\n<style>\n.my-select-width {\n  width: 14rem;\n}\n.my-select-max-width {\n  max-width: 24rem;\n}\n</style>\n\n<ld-select class=\"my-select-width\" placeholder=\"Pick some fruits\" name=\"fruits\" multiple>\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\" selected>Banana</ld-option>\n  <ld-option value=\"strawberry\" selected>Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\" selected>Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\" selected>Peach</ld-option>\n  <ld-option value=\"grape\" selected>Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\" selected>Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\" selected>Pear</ld-option>\n  <ld-option value=\"pineapple\" selected>Pineapple</ld-option>\n  <ld-option value=\"plum\" selected>Plum</ld-option>\n</ld-select>\n\n<ld-select class=\"my-select-max-width\" placeholder=\"Pick some fruits\" name=\"fruits\" multiple>\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\" selected>Banana</ld-option>\n  <ld-option value=\"strawberry\" selected>Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\" selected>Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\" selected>Peach</ld-option>\n  <ld-option value=\"grape\" selected>Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\" selected>Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\" selected>Pear</ld-option>\n  <ld-option value=\"pineapple\" selected>Pineapple</ld-option>\n  <ld-option value=\"plum\" selected>Plum</ld-option>\n</ld-select>\n{% endexample %}\n\n#### Max rows\n\nIf you have limited vertical space (this may especially be the case on mobile devices), you can define a maximum of available rows of the select trigger element, which displays the current selection. \n\n{% example %}\n<ld-select placeholder=\"Pick some fruits\" name=\"fruits\" multiple max-rows=\"1\" style=\"width: 14rem\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\" selected>Banana</ld-option>\n  <ld-option value=\"strawberry\" selected>Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\" selected>Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\" selected>Peach</ld-option>\n  <ld-option value=\"grape\" selected>Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\" selected>Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\" selected>Pear</ld-option>\n  <ld-option value=\"pineapple\" selected>Pineapple</ld-option>\n  <ld-option value=\"plum\" selected>Plum</ld-option>\n</ld-select>\n\n<ld-select placeholder=\"Pick some fruits\" name=\"fruits\" multiple max-rows=\"2\" style=\"max-width: 24rem\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\" selected>Banana</ld-option>\n  <ld-option value=\"strawberry\" selected>Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\" selected>Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\" selected>Peach</ld-option>\n  <ld-option value=\"grape\" selected>Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\" selected>Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\" selected>Pear</ld-option>\n  <ld-option value=\"pineapple\" selected>Pineapple</ld-option>\n  <ld-option value=\"plum\" selected>Plum</ld-option>\n</ld-select>\n{% endexample %}\n\n### Disabled\n\n{% example %}\n<ld-select placeholder=\"Pick a fruit\" name=\"fruit\" disabled>\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n\n<ld-select placeholder=\"Pick some fruits\" name=\"fruits\" multiple disabled>\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n\n<ld-select placeholder=\"Pick a fruit\" name=\"fruit\" disabled>\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\" selected>Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n\n<ld-select placeholder=\"Pick some fruits\" name=\"fruits\" multiple disabled>\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\" selected>Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\" selected>Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\" selected>Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n\n<!-- CSS component -->\n\n<div class='ld-select'>\n  <select name=\"fruits\" disabled>\n    <option value=\"\">Pick a fruit</option>\n    <option value=\"apple\">Apple</option>\n    <option value=\"banana\">Banana</option>\n    <option value=\"strawberry\">Strawberry</option>\n    <option value=\"watermelon\" disabled>Watermelon</option>\n    <option value=\"honeymelon\">Honeymelon</option>\n    <option value=\"rasberry\">Rasberry</option>\n    <option value=\"cherry\">Cherry</option>\n    <option value=\"blueberry\">Blueberry</option>\n    <option value=\"peach\">Peach</option>\n    <option value=\"grape\">Grape</option>\n    <option value=\"fuyu persimmon\">Fuyu Persimmon</option>\n    <option value=\"monstera deliciosa\">Monstera Deliciosa</option>\n    <option value=\"pear\">Pear</option>\n    <option value=\"pineapple\">Pineapple</option>\n    <option value=\"plum\">Plum</option>\n  </select>\n  <svg\n    role=\"presentation\"\n    class=\"ld-select__icon\"\n    viewBox=\"0 0 16 16\"\n  >\n    <path\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"3\"\n      d=\"M3 6l5 4 5-4\"\n    />\n  </svg>\n</div>\n{% endexample %}\n\n**If you want the select to stay focusable** even if it is disabled, use `aria-disabled` in place of `disabled`:\n\n{% example %}\n<ld-select placeholder=\"Pick a fruit\" name=\"fruit\" aria-disabled=\"true\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n\n<ld-select placeholder=\"Pick some fruits\" name=\"fruits\" multiple aria-disabled=\"true\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n\n<ld-select placeholder=\"Pick a fruit\" name=\"fruit\" aria-disabled=\"true\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\" selected>Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n\n<ld-select placeholder=\"Pick some fruits\" name=\"fruits\" multiple aria-disabled=\"true\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\" selected>Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\" selected>Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\" selected>Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n\n<!-- CSS component -->\n\n<div class='ld-select'>\n  <select name=\"fruits\" aria-disabled=\"true\">\n    <option value=\"\">Pick a fruit</option>\n    <option value=\"apple\">Apple</option>\n    <option value=\"banana\">Banana</option>\n    <option value=\"strawberry\">Strawberry</option>\n    <option value=\"watermelon\" disabled>Watermelon</option>\n    <option value=\"honeymelon\">Honeymelon</option>\n    <option value=\"rasberry\">Rasberry</option>\n    <option value=\"cherry\">Cherry</option>\n    <option value=\"blueberry\">Blueberry</option>\n    <option value=\"peach\">Peach</option>\n    <option value=\"grape\">Grape</option>\n    <option value=\"fuyu persimmon\">Fuyu Persimmon</option>\n    <option value=\"monstera deliciosa\">Monstera Deliciosa</option>\n    <option value=\"pear\">Pear</option>\n    <option value=\"pineapple\">Pineapple</option>\n    <option value=\"plum\">Plum</option>\n  </select>\n  <svg\n    role=\"presentation\"\n    class=\"ld-select__icon\"\n    viewBox=\"0 0 16 16\"\n  >\n    <path\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"3\"\n      d=\"M3 6l5 4 5-4\"\n    />\n  </svg>\n</div>\n{% endexample %}\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  When aria-disabled is applied on the Web Component, it will prevent user interaction. With the CSS Component version on the other hand, after applying aria-disabled on the select element, you will need to take care of preventing its default behaviour yourself.\n</ld-notice>\n\n### Invalid\n\n{% example %}\n<ld-select placeholder=\"Pick a fruit\" name=\"fruit\" invalid>\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n\n<ld-select placeholder=\"Pick some fruits\" name=\"fruits\" multiple invalid>\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\" selected>Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\" selected>Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\" selected>Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n\n<!-- CSS component -->\n\n<div class='ld-select ld-select--invalid'>\n  <select name=\"fruits\">\n    <option value=\"\">Pick a fruit</option>\n    <option value=\"apple\">Apple</option>\n    <option value=\"banana\">Banana</option>\n    <option value=\"strawberry\">Strawberry</option>\n    <option value=\"watermelon\" disabled>Watermelon</option>\n    <option value=\"honeymelon\">Honeymelon</option>\n    <option value=\"rasberry\">Rasberry</option>\n    <option value=\"cherry\">Cherry</option>\n    <option value=\"blueberry\">Blueberry</option>\n    <option value=\"peach\">Peach</option>\n    <option value=\"grape\">Grape</option>\n    <option value=\"fuyu persimmon\">Fuyu Persimmon</option>\n    <option value=\"monstera deliciosa\">Monstera Deliciosa</option>\n    <option value=\"pear\">Pear</option>\n    <option value=\"pineapple\">Pineapple</option>\n    <option value=\"plum\">Plum</option>\n  </select>\n  <svg\n    role=\"presentation\"\n    class=\"ld-select__icon\"\n    viewBox=\"0 0 16 16\"\n  >\n    <path\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"3\"\n      d=\"M3 6l5 4 5-4\"\n    />\n  </svg>\n</div>\n{% endexample %}\n\n### Detached\n\nIn detached mode the component positions the popper element with a small vertical offset, effectively rendering a small gap between trigger button and popper element.\n\n{% example %}\n<ld-select placeholder=\"Pick a fruit\" name=\"fruit\" mode=\"detached\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n{% endexample %}\n\n### Inline\n\nIn inline mode, while the popper element has a minimum width, the component's trigger button width is defined by its content. Though you can still apply a `width` or `min-width` style on the trigger button, if you need to.\n\n{% example %}\n<ld-select placeholder=\"Pick a fruit\" name=\"fruit\" mode=\"inline\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n\n<ld-select placeholder=\"Pick some fruits\" name=\"fruits\" multiple mode=\"inline\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n\n<ld-select placeholder=\"Pick some fruits\" name=\"fruits\" multiple mode=\"inline\" style=\"width: 6.9375rem\" max-rows=\"1\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n{% endexample %}\n\n### Ghost\n\nIn ghost mode the component works the same way as it does in inline mode while additionally rendering the background of the trigger button transparently. This mode is **not** combinable with the multiple select mode, because otherwise too many elements would potentially \"loosely fly around\" without any container establishing a connection between the elements.\n\n{% example %}\n<ld-select placeholder=\"Pick a fruit\" name=\"fruit\" mode=\"ghost\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n{% endexample %}\n\n### Size\n\n{% example %}\n<ld-select placeholder=\"Pick a fruit\" name=\"fruit\" size=\"sm\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n\n<ld-select placeholder=\"Pick a fruit\" name=\"fruit\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n\n<ld-select placeholder=\"Pick a fruit\" name=\"fruit\" size=\"lg\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n\n<ld-select placeholder=\"Pick some fruits\" name=\"fruits\" multiple size=\"sm\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n\n<ld-select placeholder=\"Pick some fruits\" name=\"fruits\" multiple>\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n\n<ld-select placeholder=\"Pick some fruits\" name=\"fruits\" multiple size=\"lg\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n\n<!-- CSS component -->\n\n<div class='ld-select ld-select--sm'>\n  <select name=\"fruits\">\n    <option value=\"\">Pick a fruit</option>\n    <option value=\"apple\">Apple</option>\n    <option value=\"banana\">Banana</option>\n    <option value=\"strawberry\">Strawberry</option>\n    <option value=\"watermelon\" disabled>Watermelon</option>\n    <option value=\"honeymelon\">Honeymelon</option>\n    <option value=\"rasberry\">Rasberry</option>\n    <option value=\"cherry\">Cherry</option>\n    <option value=\"blueberry\">Blueberry</option>\n    <option value=\"peach\">Peach</option>\n    <option value=\"grape\">Grape</option>\n    <option value=\"fuyu persimmon\">Fuyu Persimmon</option>\n    <option value=\"monstera deliciosa\">Monstera Deliciosa</option>\n    <option value=\"pear\">Pear</option>\n    <option value=\"pineapple\">Pineapple</option>\n    <option value=\"plum\">Plum</option>\n  </select>\n  <svg\n    role=\"presentation\"\n    class=\"ld-select__icon\"\n    viewBox=\"0 0 16 16\"\n  >\n    <path\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"3\"\n      d=\"M3 6l5 4 5-4\"\n    />\n  </svg>\n</div>\n\n<div class='ld-select'>\n  <select name=\"fruits\">\n    <option value=\"\">Pick a fruit</option>\n    <option value=\"apple\">Apple</option>\n    <option value=\"banana\">Banana</option>\n    <option value=\"strawberry\">Strawberry</option>\n    <option value=\"watermelon\" disabled>Watermelon</option>\n    <option value=\"honeymelon\">Honeymelon</option>\n    <option value=\"rasberry\">Rasberry</option>\n    <option value=\"cherry\">Cherry</option>\n    <option value=\"blueberry\">Blueberry</option>\n    <option value=\"peach\">Peach</option>\n    <option value=\"grape\">Grape</option>\n    <option value=\"fuyu persimmon\">Fuyu Persimmon</option>\n    <option value=\"monstera deliciosa\">Monstera Deliciosa</option>\n    <option value=\"pear\">Pear</option>\n    <option value=\"pineapple\">Pineapple</option>\n    <option value=\"plum\">Plum</option>\n  </select>\n  <svg\n    role=\"presentation\"\n    class=\"ld-select__icon\"\n    viewBox=\"0 0 16 16\"\n  >\n    <path\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"3\"\n      d=\"M3 6l5 4 5-4\"\n    />\n  </svg>\n</div>\n\n<div class='ld-select ld-select--lg'>\n  <select name=\"fruits\">\n    <option value=\"\">Pick a fruit</option>\n    <option value=\"apple\">Apple</option>\n    <option value=\"banana\">Banana</option>\n    <option value=\"strawberry\">Strawberry</option>\n    <option value=\"watermelon\" disabled>Watermelon</option>\n    <option value=\"honeymelon\">Honeymelon</option>\n    <option value=\"rasberry\">Rasberry</option>\n    <option value=\"cherry\">Cherry</option>\n    <option value=\"blueberry\">Blueberry</option>\n    <option value=\"peach\">Peach</option>\n    <option value=\"grape\">Grape</option>\n    <option value=\"fuyu persimmon\">Fuyu Persimmon</option>\n    <option value=\"monstera deliciosa\">Monstera Deliciosa</option>\n    <option value=\"pear\">Pear</option>\n    <option value=\"pineapple\">Pineapple</option>\n    <option value=\"plum\">Plum</option>\n  </select>\n  <svg\n    role=\"presentation\"\n    class=\"ld-select__icon\"\n    viewBox=\"0 0 16 16\"\n  >\n    <path\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"3\"\n      d=\"M3 6l5 4 5-4\"\n    />\n  </svg>\n</div>\n{% endexample %}\n\n### With custom trigger button icon\n\nFor both, the ld-select Web Component and the CSS Component, you can use a custom trigger button icon in place of the default caret. If you want to apply theme colors, with the icon reacting to pseudo classes such as `:hover`, `:active` and `:focus`, use [`currentColor`](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#currentcolor_keyword) on your icon.\n\n{% example %}\n<ld-select placeholder=\"Pick a fruit\" name=\"fruit\" size=\"sm\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n  <ld-icon slot=\"icon\" name=\"placeholder\"></ld-icon>\n</ld-select>\n\n<ld-select placeholder=\"Pick a fruit\" name=\"fruit\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n  <ld-icon slot=\"icon\" name=\"placeholder\"></ld-icon>\n</ld-select>\n\n<ld-select placeholder=\"Pick a fruit\" name=\"fruit\" size=\"lg\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n  <ld-icon slot=\"icon\" name=\"placeholder\"></ld-icon>\n</ld-select>\n\n<!-- CSS component -->\n\n<div class='ld-select ld-select--sm'>\n  <select name=\"fruits\">\n    <option value=\"\">Pick a fruit</option>\n    <option value=\"apple\">Apple</option>\n    <option value=\"banana\">Banana</option>\n    <option value=\"strawberry\">Strawberry</option>\n    <option value=\"watermelon\" disabled>Watermelon</option>\n    <option value=\"honeymelon\">Honeymelon</option>\n    <option value=\"rasberry\">Rasberry</option>\n    <option value=\"cherry\">Cherry</option>\n    <option value=\"blueberry\">Blueberry</option>\n    <option value=\"peach\">Peach</option>\n    <option value=\"grape\">Grape</option>\n    <option value=\"fuyu persimmon\">Fuyu Persimmon</option>\n    <option value=\"monstera deliciosa\">Monstera Deliciosa</option>\n    <option value=\"pear\">Pear</option>\n    <option value=\"pineapple\">Pineapple</option>\n    <option value=\"plum\">Plum</option>\n  </select>\n  <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n</div>\n\n<div class='ld-select'>\n  <select name=\"fruits\">\n    <option value=\"\">Pick a fruit</option>\n    <option value=\"apple\">Apple</option>\n    <option value=\"banana\">Banana</option>\n    <option value=\"strawberry\">Strawberry</option>\n    <option value=\"watermelon\" disabled>Watermelon</option>\n    <option value=\"honeymelon\">Honeymelon</option>\n    <option value=\"rasberry\">Rasberry</option>\n    <option value=\"cherry\">Cherry</option>\n    <option value=\"blueberry\">Blueberry</option>\n    <option value=\"peach\">Peach</option>\n    <option value=\"grape\">Grape</option>\n    <option value=\"fuyu persimmon\">Fuyu Persimmon</option>\n    <option value=\"monstera deliciosa\">Monstera Deliciosa</option>\n    <option value=\"pear\">Pear</option>\n    <option value=\"pineapple\">Pineapple</option>\n    <option value=\"plum\">Plum</option>\n  </select>\n  <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n</div>\n\n<div class='ld-select ld-select--lg'>\n  <select name=\"fruits\">\n    <option value=\"\">Pick a fruit</option>\n    <option value=\"apple\">Apple</option>\n    <option value=\"banana\">Banana</option>\n    <option value=\"strawberry\">Strawberry</option>\n    <option value=\"watermelon\" disabled>Watermelon</option>\n    <option value=\"honeymelon\">Honeymelon</option>\n    <option value=\"rasberry\">Rasberry</option>\n    <option value=\"cherry\">Cherry</option>\n    <option value=\"blueberry\">Blueberry</option>\n    <option value=\"peach\">Peach</option>\n    <option value=\"grape\">Grape</option>\n    <option value=\"fuyu persimmon\">Fuyu Persimmon</option>\n    <option value=\"monstera deliciosa\">Monstera Deliciosa</option>\n    <option value=\"pear\">Pear</option>\n    <option value=\"pineapple\">Pineapple</option>\n    <option value=\"plum\">Plum</option>\n  </select>\n  <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n</div>\n{% endexample %}\n\n### With filter\n\n{% example %}\n<ld-select filter placeholder=\"Pick a fruit\" name=\"fruit\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\">Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\">Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n\n<ld-select filter placeholder=\"Pick some fruits\" name=\"fruits\" multiple max-rows=\"2\" style=\"max-width: 17rem\">\n  <ld-option value=\"apple\">Apple</ld-option>\n  <ld-option value=\"banana\" selected>Banana</ld-option>\n  <ld-option value=\"strawberry\">Strawberry</ld-option>\n  <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n  <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n  <ld-option value=\"rasberry\">Rasberry</ld-option>\n  <ld-option value=\"cherry\" selected>Cherry</ld-option>\n  <ld-option value=\"blueberry\">Blueberry</ld-option>\n  <ld-option value=\"peach\">Peach</ld-option>\n  <ld-option value=\"grape\">Grape</ld-option>\n  <ld-option value=\"fuyu persimmon\" selected>Fuyu Persimmon</ld-option>\n  <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n  <ld-option value=\"pear\">Pear</ld-option>\n  <ld-option value=\"pineapple\">Pineapple</ld-option>\n  <ld-option value=\"plum\">Plum</ld-option>\n</ld-select>\n{% endexample %}\n\n### With label\n\n{% example %}\n<ld-label>\n  Favorite fruit\n  <ld-select placeholder=\"Pick a fruit\" name=\"fruit\">\n    <ld-option value=\"apple\">Apple</ld-option>\n    <ld-option value=\"banana\">Banana</ld-option>\n    <ld-option value=\"strawberry\">Strawberry</ld-option>\n    <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n    <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n    <ld-option value=\"rasberry\">Rasberry</ld-option>\n    <ld-option value=\"cherry\">Cherry</ld-option>\n    <ld-option value=\"blueberry\">Blueberry</ld-option>\n    <ld-option value=\"peach\">Peach</ld-option>\n    <ld-option value=\"grape\">Grape</ld-option>\n    <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n    <ld-option value=\"monstera deliciosa\">Monstera Deliciosa</ld-option>\n    <ld-option value=\"pear\">Pear</ld-option>\n    <ld-option value=\"pineapple\">Pineapple</ld-option>\n    <ld-option value=\"plum\">Plum</ld-option>\n  </ld-select>\n</ld-label>\n\n<!-- CSS component -->\n\n<label class=\"ld-label\">\n  Favorite fruit\n  <div class='ld-select'>\n    <select name=\"fruits\">\n      <option value=\"\">Pick a fruit</option>\n      <option value=\"apple\">Apple</option>\n      <option value=\"banana\">Banana</option>\n      <option value=\"strawberry\">Strawberry</option>\n      <option value=\"watermelon\" disabled>Watermelon</option>\n      <option value=\"honeymelon\">Honeymelon</option>\n      <option value=\"rasberry\">Rasberry</option>\n      <option value=\"cherry\">Cherry</option>\n      <option value=\"blueberry\">Blueberry</option>\n      <option value=\"peach\">Peach</option>\n      <option value=\"grape\">Grape</option>\n      <option value=\"fuyu persimmon\">Fuyu Persimmon</option>\n      <option value=\"monstera deliciosa\">Monstera Deliciosa</option>\n      <option value=\"pear\">Pear</option>\n      <option value=\"pineapple\">Pineapple</option>\n      <option value=\"plum\">Plum</option>\n    </select>\n    <svg\n      role=\"presentation\"\n      class=\"ld-select__icon\"\n      viewBox=\"0 0 16 16\"\n    >\n      <path\n        stroke=\"currentColor\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        stroke-width=\"3\"\n        d=\"M3 6l5 4 5-4\"\n      />\n    </svg>\n  </div>\n</label>\n{% endexample %}\n\n### With label and input message\n\n{% example %}\n<ld-label>\n  Favorite fruit\n  <ld-select placeholder=\"Pick a fruit\" name=\"fruit\">\n    <ld-option value=\"apple\">Apple</ld-option>\n    <ld-option value=\"banana\">Banana</ld-option>\n    <ld-option value=\"strawberry\">Strawberry</ld-option>\n    <ld-option value=\"watermelon\" disabled>Watermelon</ld-option>\n    <ld-option value=\"honeymelon\">Honeymelon</ld-option>\n    <ld-option value=\"rasberry\">Rasberry</ld-option>\n    <ld-option value=\"cherry\">Cherry</ld-option>\n    <ld-option value=\"blueberry\">Blueberry</ld-option>\n    <ld-option value=\"peach\">Peach</ld-option>\n    <ld-option value=\"grape\">Grape</ld-option>\n    <ld-option value=\"fuyu persimmon\">Fuyu Persimmon</ld-option>\n    <ld-option value=\"monstera deliciosa\" selected>Monstera Deliciosa</ld-option>\n    <ld-option value=\"pear\">Pear</ld-option>\n    <ld-option value=\"pineapple\">Pineapple</ld-option>\n    <ld-option value=\"plum\">Plum</ld-option>\n  </ld-select>\n  <ld-input-message mode=\"info\">Not available today.</ld-input-message>\n</ld-label>\n\n<!-- CSS component -->\n\n<label class=\"ld-label\">\n  Favorite fruit\n  <div class='ld-select'>\n    <select name=\"fruits\">\n      <option value=\"\">Pick a fruit</option>\n      <option value=\"apple\">Apple</option>\n      <option value=\"banana\">Banana</option>\n      <option value=\"strawberry\">Strawberry</option>\n      <option value=\"watermelon\" disabled>Watermelon</option>\n      <option value=\"honeymelon\">Honeymelon</option>\n      <option value=\"rasberry\">Rasberry</option>\n      <option value=\"cherry\">Cherry</option>\n      <option value=\"blueberry\">Blueberry</option>\n      <option value=\"peach\">Peach</option>\n      <option value=\"grape\">Grape</option>\n      <option value=\"fuyu persimmon\">Fuyu Persimmon</option>\n      <option value=\"monstera deliciosa\" selected>Monstera Deliciosa</option>\n      <option value=\"pear\">Pear</option>\n      <option value=\"pineapple\">Pineapple</option>\n      <option value=\"plum\">Plum</option>\n    </select>\n    <svg\n      role=\"presentation\"\n      class=\"ld-select__icon\"\n      viewBox=\"0 0 16 16\"\n    >\n      <path\n        stroke=\"currentColor\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        stroke-width=\"3\"\n        d=\"M3 6l5 4 5-4\"\n      />\n    </svg>\n  </div>\n  <span class=\"ld-input-message ld-input-message--info\">\n    <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"var(--ld-thm-warning)\"/>\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.18234 11.0254C6.79228 11.0254 6.48657 10.9147 6.26518 10.6933C6.0438 10.472 5.93311 10.1662 5.93311 9.77618V6.12335C5.93311 5.99685 6.0069 5.93359 6.15449 5.93359H6.89771C7.28776 5.93359 7.59348 6.04428 7.81487 6.26567C8.03625 6.48705 8.14694 6.79277 8.14694 7.18283V10.8357C8.14694 10.9622 8.07315 11.0254 7.92556 11.0254H7.18234Z\" fill=\"var(--ld-col-neutral-900)\"/>\n      <ellipse cx=\"6.99977\" cy=\"3.80007\" rx=\"1.06667\" ry=\"1.06667\" fill=\"var(--ld-col-neutral-900)\"/>\n    </svg>\n    Not available today.\n  </span>\n</label>\n{% endexample %}\n\n### Input validation\n\nThe `ld-select` Web Component provides a low level API for integrating it with the form validation solution of your choice. It allows you to listen for `focus`, `input` and `blur` events, as well as custom events (see [Events](components/ld-input/#events) for details).\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  You can find examples for different kinds of input validation in the <a href=\"guides/form-validation/\">Form validation</a> documentation. Please also be aware of differences in event handling compared to native elements that come with Web Components. Details can be found in our <a href=\"guides/event-handling/\">Event handling</a> documentation.\n</ld-notice>\n",
      "docs": "---\neleventyNavigation:\n  key: Select\n  parent: Components\nlayout: layout.njk\ntitle: Select\npermalink: components/ld-select/\ntags:\n  - select\n  - dropdown\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-select.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-input-message.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-label.css\">",
      "docsTags": [
        {
          "name": "slot",
          "text": "- the default slot contains the select options"
        },
        {
          "name": "slot",
          "text": "icon - replaces caret with custom trigger button icon"
        },
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "autofocus",
          "type": "boolean",
          "mutable": false,
          "attr": "autofocus",
          "reflectToAttr": true,
          "docs": "This Boolean attribute lets you specify that a form control should have input focus when the page loads.\nOnly one form element in a document can have the autofocus attribute.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disabled state of the component.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "filter",
          "type": "boolean",
          "mutable": false,
          "attr": "filter",
          "reflectToAttr": false,
          "docs": "Set this property to `true` in order to enable an input field for filtering options.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "filterPlaceholder",
          "type": "string",
          "mutable": false,
          "attr": "filter-placeholder",
          "reflectToAttr": false,
          "docs": "The filter input placeholder.",
          "docsTags": [],
          "default": "'Filter options'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "form",
          "type": "string",
          "mutable": false,
          "attr": "form",
          "reflectToAttr": false,
          "docs": "The form element to associate the select with (its form owner).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "mutable": false,
          "attr": "invalid",
          "reflectToAttr": false,
          "docs": "Set this property to `true` in order to mark the select visually as invalid.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ldTabindex",
          "type": "number",
          "mutable": false,
          "attr": "ld-tabindex",
          "reflectToAttr": false,
          "docs": "Tab index of the trigger button.",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "maxRows",
          "type": "number",
          "mutable": true,
          "attr": "max-rows",
          "reflectToAttr": false,
          "docs": "Constrains the height of the trigger button by replacing overflowing selection with a \"+X more\" indicator.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "mode",
          "type": "\"detached\" | \"ghost\" | \"inline\"",
          "mutable": false,
          "attr": "mode",
          "reflectToAttr": false,
          "docs": "Display mode.",
          "docsTags": [],
          "values": [
            {
              "value": "detached",
              "type": "string"
            },
            {
              "value": "ghost",
              "type": "string"
            },
            {
              "value": "inline",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "multiple",
          "type": "boolean",
          "mutable": false,
          "attr": "multiple",
          "reflectToAttr": false,
          "docs": "Multiselect mode.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Used to specify the name of the control.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "Used as trigger button label in multiselect mode and in single select mode if nothing is selected.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "popperClass",
          "type": "string",
          "mutable": false,
          "attr": "popper-class",
          "reflectToAttr": false,
          "docs": "Attached as CSS class to the select popper element.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "preventDeselection",
          "type": "boolean",
          "mutable": false,
          "attr": "prevent-deselection",
          "reflectToAttr": false,
          "docs": "Prevents a state with no options selected after initial selection in single select mode.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "A Boolean attribute indicating that an option with a non-empty string value must be selected.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "SelectOption[]",
          "mutable": true,
          "reflectToAttr": false,
          "docs": "Currently selected option(s) (read only!)",
          "docsTags": [],
          "default": "[]",
          "values": [
            {
              "type": "SelectOption[]"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "\"lg\" | \"sm\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Size of the select trigger button.",
          "docsTags": [],
          "values": [
            {
              "value": "lg",
              "type": "string"
            },
            {
              "value": "sm",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "tetherOptions",
          "type": "string | { attachment?: string; bodyElement?: HTMLElement; classes?: { [className: string]: string | boolean; }; classPrefix?: string; constraints?: ITetherConstraint[]; element?: any; enabled?: boolean; offset?: string; optimizations?: any; target?: any; targetAttachment?: string; targetOffset?: string; targetModifier?: string; }",
          "mutable": false,
          "attr": "tether-options",
          "reflectToAttr": false,
          "docs": "Tether options object to be merged with the default options (optionally stringified).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "{ attachment?: string; bodyElement?: HTMLElement; classes?: { [className: string]: string"
            },
            {
              "type": "boolean; }; classPrefix?: string; constraints?: ITetherConstraint[]; element?: any; enabled?: boolean; offset?: string; optimizations?: any; target?: any; targetAttachment?: string; targetOffset?: string; targetModifier?: string; }"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "focusInner",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "focusInner() => Promise<void>",
          "parameters": [],
          "docs": "Sets focus on the trigger button.",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "ldchange",
          "detail": "string[]",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted with an array of selected values when an alteration to the selection is committed by the user.",
          "docsTags": []
        },
        {
          "event": "ldinput",
          "detail": "string[]",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted with an array of selected values when an alteration to the selection is committed by the user.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "resize",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "ldoptionselect",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "keydown",
          "target": "window",
          "capture": false,
          "passive": false
        },
        {
          "event": "click",
          "target": "window",
          "capture": false,
          "passive": false
        },
        {
          "event": "touchend",
          "target": "window",
          "capture": false,
          "passive": true
        }
      ],
      "styles": [],
      "slots": [
        {
          "name": "",
          "docs": "the default slot contains the select options"
        },
        {
          "name": "icon",
          "docs": "replaces caret with custom trigger button icon"
        }
      ],
      "parts": [
        {
          "name": "btn-clear",
          "docs": ""
        },
        {
          "name": "btn-clear-single",
          "docs": ""
        },
        {
          "name": "btn-trigger",
          "docs": ""
        },
        {
          "name": "focusable",
          "docs": ""
        },
        {
          "name": "icon-clear",
          "docs": ""
        },
        {
          "name": "icon-clear-single",
          "docs": ""
        },
        {
          "name": "options-container",
          "docs": ""
        },
        {
          "name": "root",
          "docs": ""
        },
        {
          "name": "select",
          "docs": ""
        },
        {
          "name": "selection-label-bg",
          "docs": ""
        },
        {
          "name": "selection-label-text",
          "docs": ""
        },
        {
          "name": "selection-list",
          "docs": ""
        },
        {
          "name": "selection-list-container",
          "docs": ""
        },
        {
          "name": "selection-list-item",
          "docs": ""
        },
        {
          "name": "slot-container",
          "docs": ""
        },
        {
          "name": "trigger-icon",
          "docs": ""
        },
        {
          "name": "trigger-text",
          "docs": ""
        },
        {
          "name": "trigger-text-wrapper",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [
        "ld-select-popper"
      ],
      "dependencyGraph": {
        "ld-select": [
          "ld-select-popper"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-sidenav/ld-sidenav.tsx",
      "encapsulation": "shadow",
      "tag": "ld-sidenav",
      "readme": "---\neleventyNavigation:\n  key: Sidenav\n  parent: Components\nlayout: layout.njk\ntitle: Sidenav\npermalink: components/ld-sidenav/\ntags:\n  - navigation\n  - menu\n---\n\n<style>\n  body {\n    --ld-sidenav-position: absolute;\n    --ld-sidenav-toggle-outside-position: absolute;\n  }\n</style>\n\n# ld-sidenav\n\nUse the `ld-sidenav` component to render a navigation placed on a side of a containing element (or full size, if the viewport is small).\n\n---\n\n## Introduction\n\nThe component can be used on its own with arbitrary content (i.e. your custom navigation). However, in order to implement a flexible navigation for your application you may want to compose it with components, which have been built for specificly this purpose.\n\nBefore diving into detailed usage instructions, let's first have a look at two comprehensive sidenav examples from a bird's eye view.\n\nThe first example shows how we invision the side navigation to be used in [narrow mode]() collapsing to a space-saving narrow navigation element that remains clearly visible to the user.\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"40rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav-toggle-outside></ld-sidenav-toggle-outside>\n<ld-sidenav style=\"--ld-sidenav-width: 20rem\" collapsible narrow>\n  <ld-sidenav-header href=\"#\" slot=\"header\">Computer Science</ld-sidenav-header>\n  <ld-sidenav-back slot=\"top\">\n    <ld-sidenav-navitem>Outline of Computer Science</ld-sidenav-navitem>\n  </ld-sidenav-back>\n  <ld-sidenav-slider label=\"Outline of Computer Science\">\n    <ld-sidenav-heading>Subfields</ld-sidenav-heading>\n    <ld-sidenav-navitem to=\"cs-mathematical-foundations\">Mathematical foundations</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"cs-algorithms-and-data-structures\">Algorithms and data structures</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"cs-artificial-intelligence\">Artificial intelligence</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"cs-communication-and-security\">Communication and security</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"cs-computer-architecture\">Computer architecture</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"cs-computer-graphics\">Computer graphics</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"cs-concurrent-parallel-and-distributed-systems\">Concurrent, parallel, and distributed systems</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"cs-databases\">Databases</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"cs-programming-languages-and-compilers\">Programming languages and compilers</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"cs-scientific-computing\">Scientific computing</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"cs-software-engineering\">Software engineering</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"cs-theory-of-computation\">Theory of computation</ld-sidenav-navitem>\n    <ld-sidenav-subnav id=\"cs-mathematical-foundations\" label=\"Mathematical foundations\">\n      <ld-sidenav-heading>Mathematical foundations</ld-sidenav-heading>\n      <ld-sidenav-navitem>Coding theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Game theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Discrete Mathematics</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Graph theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Mathematical logic</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Number theory</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"cs-algorithms-and-data-structures\" label=\"Algorithms and data structures\">\n      <ld-sidenav-heading>Algorithms and data structures</ld-sidenav-heading>\n      <ld-sidenav-navitem>Algorithms</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Data structures</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"cs-artificial-intelligence\" label=\"Artificial intelligence\">\n      <ld-sidenav-heading>Artificial intelligence</ld-sidenav-heading>\n      <ld-sidenav-navitem>Artificial intelligence</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Automated reasoning</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Computer vision</ld-sidenav-navitem>\n      <ld-sidenav-navitem to=\"cs-soft-computing\">Soft computing</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Natural language processing</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Robotics</ld-sidenav-navitem>\n      <ld-sidenav-subnav id=\"cs-soft-computing\" label=\"Soft computing\">\n        <ld-sidenav-heading>Soft computing</ld-sidenav-heading>\n        <ld-sidenav-navitem>Machine learning</ld-sidenav-navitem>\n        <ld-sidenav-navitem>Evolutionary computing</ld-sidenav-navitem>\n      </ld-sidenav-subnav>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"cs-communication-and-security\" label=\"Communication and security\">\n      <ld-sidenav-heading>Communication and security</ld-sidenav-heading>\n      <ld-sidenav-navitem>Networking</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Computer security</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Cryptography</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"cs-computer-architecture\" label=\"Computer architecture\">\n      <ld-sidenav-heading>Computer architecture</ld-sidenav-heading>\n      <ld-sidenav-navitem>Computer architecture </ld-sidenav-navitem>\n      <ld-sidenav-navitem>Operating systems</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"cs-computer-graphics\" label=\"Computer graphics\">\n      <ld-sidenav-heading>Computer graphics</ld-sidenav-heading>\n      <ld-sidenav-navitem>Computer graphics</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Image processing</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Information visualization</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"cs-concurrent-parallel-and-distributed-systems\" label=\"Concurrent parallel and distributed systems\">\n      <ld-sidenav-heading>Concurrent parallel and distributed systems</ld-sidenav-heading>\n      <ld-sidenav-navitem>Parallel computing</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Concurrency (computer science)</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Distributed computing</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"cs-databases\" label=\"Databases\">\n      <ld-sidenav-heading>Databases</ld-sidenav-heading>\n      <ld-sidenav-navitem>Relational databases</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Structured Storage</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Data mining</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"cs-programming-languages-and-compilers\" label=\"Programming languages and compilers\">\n      <ld-sidenav-heading>Programming languages and compilers</ld-sidenav-heading>\n      <ld-sidenav-navitem>Compiler theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Programming language pragmatics</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Programming language theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Formal semantics</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Type theory</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"cs-scientific-computing\" label=\"Scientific computing\">\n      <ld-sidenav-heading>Scientific computing</ld-sidenav-heading>\n      <ld-sidenav-navitem>Computational science</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Numerical analysis</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Symbolic computation</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Computational physics</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Computational chemistry</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Bioinformatics and Computational biology</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Computational neuroscience</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"cs-software-engineering\" label=\"Software engineering\">\n      <ld-sidenav-heading>Software engineering</ld-sidenav-heading>\n      <ld-sidenav-navitem>Computational science</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Formal methods</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Software engineering</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Algorithm design</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Computer programming</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Human–computer interaction</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Reverse engineering</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"cs-theory-of-computation\" label=\"Theory of computation\">\n      <ld-sidenav-heading>Theory of computation</ld-sidenav-heading>\n      <ld-sidenav-navitem>Automata theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Computability theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Computational complexity theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem>Quantum computing theory</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n  </ld-sidenav-slider>\n  <ld-sidenav-navitem slot=\"bottom\" rounded>Student profile</ld-sidenav-navitem>\n</ld-sidenav>\n{% endexample %}\n\nThe second example shows how we invision the side navigation to be used in collapsible mode with the side navigation collapsing fully.\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"40rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav-toggle-outside></ld-sidenav-toggle-outside>\n<ld-sidenav style=\"--ld-sidenav-width: 20rem\" collapsible>\n  <ld-sidenav-header href=\"#\" slot=\"header\">Computer Science</ld-sidenav-header>\n  <ld-sidenav-back slot=\"top\">\n    <ld-sidenav-navitem>Outline of Computer Science</ld-sidenav-navitem>\n  </ld-sidenav-back>\n  <ld-sidenav-slider label=\"Outline of Computer Science\">\n    <ld-sidenav-heading>Subfields</ld-sidenav-heading>\n    <ld-sidenav-navitem to=\"mathematical-foundations\">Mathematical foundations</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"algorithms-and-data-structures\">Algorithms and data structures</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"artificial-intelligence\">Artificial intelligence</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"communication-and-security\">Communication and security</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"computer-architecture\">Computer architecture</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"computer-graphics\">Computer graphics</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"concurrent-parallel-and-distributed-systems\">Concurrent, parallel, and distributed systems</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"databases\">Databases</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"programming-languages-and-compilers\">Programming languages and compilers</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"scientific-computing\">Scientific computing</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"software-engineering\">Software engineering</ld-sidenav-navitem>\n    <ld-sidenav-navitem to=\"theory-of-computation\">Theory of computation</ld-sidenav-navitem>\n    <ld-sidenav-subnav id=\"mathematical-foundations\" label=\"Mathematical foundations\">\n      <ld-sidenav-heading>Mathematical foundations</ld-sidenav-heading>\n      <ld-sidenav-navitem mode=\"secondary\">Coding theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Game theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Discrete Mathematics</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Graph theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Mathematical logic</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Number theory</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"algorithms-and-data-structures\" label=\"Algorithms and data structures\">\n      <ld-sidenav-heading>Algorithms and data structures</ld-sidenav-heading>\n      <ld-sidenav-navitem mode=\"secondary\">Algorithms</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Data structures</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"artificial-intelligence\" label=\"Artificial intelligence\">\n      <ld-sidenav-heading>Artificial intelligence</ld-sidenav-heading>\n      <ld-sidenav-navitem mode=\"secondary\">Artificial intelligence</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Automated reasoning</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Computer vision</ld-sidenav-navitem>\n      <ld-sidenav-navitem to=\"soft-computing\">Soft computing</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Natural language processing</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Robotics</ld-sidenav-navitem>\n      <ld-sidenav-subnav id=\"soft-computing\" label=\"Soft computing\">\n        <ld-sidenav-heading>Soft computing</ld-sidenav-heading>\n        <ld-sidenav-navitem mode=\"secondary\">Machine learning</ld-sidenav-navitem>\n        <ld-sidenav-navitem mode=\"secondary\">Evolutionary computing</ld-sidenav-navitem>\n      </ld-sidenav-subnav>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"communication-and-security\" label=\"Communication and security\">\n      <ld-sidenav-heading>Communication and security</ld-sidenav-heading>\n      <ld-sidenav-navitem mode=\"secondary\">Networking</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Computer security</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Cryptography</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"computer-architecture\" label=\"Computer architecture\">\n      <ld-sidenav-heading>Computer architecture</ld-sidenav-heading>\n      <ld-sidenav-navitem mode=\"secondary\">Computer architecture </ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Operating systems</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"computer-graphics\" label=\"Computer graphics\">\n      <ld-sidenav-heading>Computer graphics</ld-sidenav-heading>\n      <ld-sidenav-navitem mode=\"secondary\">Computer graphics</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Image processing</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Information visualization</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"concurrent-parallel-and-distributed-systems\" label=\"Concurrent parallel and distributed systems\">\n      <ld-sidenav-heading>Concurrent parallel and distributed systems</ld-sidenav-heading>\n      <ld-sidenav-navitem mode=\"secondary\">Parallel computing</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Concurrency (computer science)</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Distributed computing</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"databases\" label=\"Databases\">\n      <ld-sidenav-heading>Databases</ld-sidenav-heading>\n      <ld-sidenav-navitem mode=\"secondary\">Relational databases</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Structured Storage</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Data mining</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"programming-languages-and-compilers\" label=\"Programming languages and compilers\">\n      <ld-sidenav-heading>Programming languages and compilers</ld-sidenav-heading>\n      <ld-sidenav-navitem mode=\"secondary\">Compiler theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Programming language pragmatics</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Programming language theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Formal semantics</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Type theory</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"scientific-computing\" label=\"Scientific computing\">\n      <ld-sidenav-heading>Scientific computing</ld-sidenav-heading>\n      <ld-sidenav-navitem mode=\"secondary\">Computational science</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Numerical analysis</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Symbolic computation</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Computational physics</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Computational chemistry</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Bioinformatics and Computational biology</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Computational neuroscience</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"software-engineering\" label=\"Software engineering\">\n      <ld-sidenav-heading>Software engineering</ld-sidenav-heading>\n      <ld-sidenav-navitem mode=\"secondary\">Computational science</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Formal methods</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Software engineering</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Algorithm design</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Computer programming</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Human–computer interaction</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Reverse engineering</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n    <ld-sidenav-subnav id=\"theory-of-computation\" label=\"Theory of computation\">\n      <ld-sidenav-heading>Theory of computation</ld-sidenav-heading>\n      <ld-sidenav-navitem mode=\"secondary\">Automata theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Computability theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Computational complexity theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Quantum computing theory</ld-sidenav-navitem>\n    </ld-sidenav-subnav>\n  </ld-sidenav-slider>\n  <ld-sidenav-navitem slot=\"bottom\" rounded>Student profile</ld-sidenav-navitem>\n</ld-sidenav>\n{% endexample %}\n\nLike already said, the first two examples are quite comprehensive. To better understand how everything works together and what other options are available, you should take some time to read the docs below, which go into specifics for each component used, starting with the `ld-sidenav` itself.\n\n---\n\n## `ld-sidenav`\n\nThe `ld-sidenav` on its own is not very spectacular. Here is the simplest example of the sidenav:\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"8rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav></ld-sidenav>\n{% endexample %}\n\n## Handing mobile\n\nOn narrow view ports the sidenav works differently than on wide view ports. It takes the full width of its container and can be opened and closed \"from the outside\". Your can change the default breakpoint at which the sidenav changes into each mode using the `breakpoint` prop and toggle the sidenav using the `open` prop. Resize the browser window (or rotate your device) in order to see how the sidenav changes its display mode.\n\n{% example '{ \"hasPadding\": false, \"stacked\": true, \"styles\": { \"minHeight\": \"8rem\", \"position\": \"relative\" } }' %}\n<style>\n  #hamburger { display: none; }\n  @media (max-width: 30rem) {\n    #hamburger { display: unset; }\n  }\n</style>\n<ld-header site-name=\"Liquid Oxygen\">\n  <ld-button role=\"switch\" aria-haspopup=\"true\" aria-checked=\"false\" id=\"hamburger\" mode=\"ghost\" slot=\"start\" title=\"Toggle menu\" type=\"button\">\n    <ld-icon aria-label=\"Open menu\" name=\"sidenav-right\"></ld-icon>\n  </ld-button>\n</ld-header>\n<div style=\"position: relative; height: 8rem;\">\n  <ld-sidenav id=\"sidenav\" breakpoint=\"30rem\"></ld-sidenav>\n</div>\n<script>\n  void function() {\n    const sidenav = document.currentScript.previousElementSibling.querySelector('ld-sidenav')\n    const hamburger = document.currentScript.previousElementSibling.previousElementSibling.querySelector('ld-button')\n    const hamburgerIcon = hamburger.querySelector('ld-icon')\n    hamburger.addEventListener('click', () => {\n      if (sidenav.open) {\n        hamburger.setAttribute('aria-checked', 'false')\n        hamburgerIcon.name = 'sidenav-right'\n        sidenav.open = false\n      } else {\n        hamburgerIcon.name = 'sidenav-left'\n        hamburger.setAttribute('aria-checked', 'true')\n        sidenav.open = true\n      }\n    })\n  }()\n</script>\n{% endexample %}\n\n### Focus trapping\n\nThe user should be able to focus interactive UI elements using the keyboard. However, when the `ld-sidenav` opens to full width, it covers the main part of the screen and with that hides potentially focusable elements. In order to reflect the hidden state of these elements, **you should enable focus trapping** in the `ld-sidenav` component, meaning that the component will make sure the user can not focus UI elements behind the sidenav. \n\nTo enable focus trapping, use the `trap-focus` prop and set a CSS selector for elements, which are still visible and allowed to receive focus when the sidenav is open to full width, as the prop value.\n\n{% example '{ \"hasPadding\": false, \"stacked\": true, \"styles\": { \"minHeight\": \"8rem\", \"position\": \"relative\" } }' %}\n<style>\n  #my-hamburger { display: none; }\n  @media (max-width: 30rem) {\n    #my-hamburger { display: unset; }\n  }\n</style>\n<ld-header id=\"my-header\" site-name=\"Liquid Oxygen\">\n  <ld-button role=\"switch\" aria-haspopup=\"true\" aria-checked=\"false\" id=\"my-hamburger\" mode=\"ghost\" slot=\"start\" type=\"button\">\n    <ld-icon aria-label=\"Toggle menu\" name=\"sidenav-right\"></ld-icon>\n  </ld-button>\n</ld-header>\n<div style=\"position: relative; height: 8rem;\">\n  <ld-sidenav breakpoint=\"30rem\" trap-focus=\"#my-header *\">\n    <ld-button style=\"margin: 1rem\" mode=\"highlight\">I'm focusable</ld-button>\n  </ld-sidenav>\n</div>\n<script>\n  void function() {\n    let open = false\n    const sidenav = document.currentScript.previousElementSibling.querySelector('ld-sidenav')\n    const hamburger = document.currentScript.previousElementSibling.previousElementSibling.querySelector('ld-button')\n    const hamburgerIcon = hamburger.querySelector('ld-icon')\n    hamburger.addEventListener('click', () => {\n      if (sidenav.open) {\n        hamburgerIcon.name = 'sidenav-right'\n        hamburger.setAttribute('aria-checked', 'false')\n        sidenav.open = false\n      } else {\n        hamburgerIcon.name = 'sidenav-left'\n        hamburger.setAttribute('aria-checked', 'true')\n        sidenav.open = true\n      }\n    })\n  }()\n</script>\n{% endexample %}\n\n## Alignement\n\nYou can align the side navigation either to the left or the right of its container:\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"8rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open align=\"left\"></ld-sidenav>\n{% endexample %}\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"8rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open align=\"right\"></ld-sidenav>\n{% endexample %}\n\n## Slots\n\nThe `ld-sidenav` offers three slots. Two slots for fixed positioned content at the top and the bottom of the navigation element and the default slot for content placed inside a scroll container.\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"20rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open>\n  <ld-typo style=\"padding: 1rem\" slot=\"top\" variant=\"cap-l\">The lorem ipsum</ld-typo>\n  <ld-typo style=\"padding: 1rem\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?</ld-typo>\n  <ld-typo style=\"padding: 1rem\" slot=\"bottom\" variant=\"body-s\">Copyright 2022</ld-typo>\n</ld-sidenav>\n{% endexample %}\n\n## Sub-navigation\n\nAlthough you could use the `ld-sidenav` component slots to place arbitrary content in your sidenav, the slots are actually intended for specific sub-componets of the `ld-sidenav` component, which help you build a navigation with as many sub-navigation layers as you need. These components are [`ld-sidenav-slider`](./ld-sidenav-slider), [`ld-sidenav-subnav`](./ld-sidenav-subnav), [`ld-sidenav-navitem`](./ld-sidenav-navitem) and [`ld-sidenav-back`](./ld-sidenav-back).\n\nThe sections below illustrate in a tutorial-like manner how to compose a sidenav with its subcomponents walking you through each of the subcomponets of `ld-sidenav`. You may also want to check out the documentation page of each subcomponent for details on the available props, events etc. while learning how the components work together. \n\n### `ld-sidenav-slider`\n\nThe [`ld-sidenav-slider`](./ld-sidenav-slider) is responsible for managing navigation into and out of a sub-navigation.\n\nAlthough the slider can contain arbitrary content, it is ment to mainly contain [`ld-sidenav-subnav`](./ld-sidenav-subnav) and [`ld-sidenav-navitem`](./ld-sidenav-navitem) components.\n\nPlace the [`ld-sidenav-slider`](./ld-sidenav-slider) component in the main slot of `ld-sidenav`:\n\n{% example '{ \"highlight\": \"1,2\", \"opened\": true, \"hasPadding\": false, \"styles\": { \"minHeight\": \"8rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open>\n  <ld-sidenav-slider label=\"Outline of CS\">\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n### `ld-sidenav-subnav`\n\nThe [`ld-sidenav-subnav`](./ld-sidenav-subnav) represents a sub-navigation which, simlar to [`ld-sidenav-slider`](./ld-sidenav-slider), can contain arbitrary content, but mainly is ment to contain other [`ld-sidenav-subnav`](./ld-sidenav-subnav) as well as [`ld-sidenav-navitem`](./ld-sidenav-navitem) components.\n\nPlace the [`ld-sidenav-subnav`](./ld-sidenav-subnav) component in the [`ld-sidenav-slider`](./ld-sidenav-slider)'s slot or in another [`ld-sidenav-subnav`](./ld-sidenav-subnav)'s slot:\n\n{% example '{ \"highlight\": \"2-5\", \"opened\": true, \"hasPadding\": false, \"styles\": { \"minHeight\": \"8rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-subnav id=\"art-int\" label=\"Artificial intelligence\">\n      <ld-sidenav-subnav id=\"soft-comp\" label=\"Soft computing\">\n      </ld-sidenav-subnav>\n    </ld-sidenav-subnav>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\nAs you can see, each [`ld-sidenav-subnav`](./ld-sidenav-subnav) component is annotated with a unique id prop. The id will be referenced by a [`ld-sidenav-navitem`](./ld-sidenav-navitem) component to denote that on click the respective subnav should be shown (slided into view by the [`ld-sidenav-slider`](./ld-sidenav-slider) component).\n\nThe labels on [`ld-sidenav-slider`](./ld-sidenav-slider) and [`ld-sidenav-subnav`](./ld-sidenav-subnav) are also important; they will be used by the [`ld-sidenav-back`](./ld-sidenav-back) component (as soon as we add it).\n\n### `ld-sidenav-navitem`\n\nWith the [`ld-sidenav-slider`](./ld-sidenav-slider) and [`ld-sidenav-subnav`](./ld-sidenav-subnav)s in place we can add [`ld-sidenav-navitem`](./ld-sidenav-navitem)s to the mix, with some of the [`ld-sidenav-navitem`](./ld-sidenav-navitem) components referencing our [`ld-sidenav-subnav`](./ld-sidenav-subnav) components via the `to` prop.\n\n{% example '{ \"highlight\": \"2,4-7,9-10\", \"opened\": true, \"hasPadding\": false, \"styles\": { \"minHeight\": \"14rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-navitem to=\"art-intel\">Artificial intelligence</ld-sidenav-navitem>\n    <ld-sidenav-subnav id=\"art-intel\" label=\"Artificial intelligence\">\n      <ld-sidenav-navitem mode=\"secondary\">Automated reasoning</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Computer vision</ld-sidenav-navitem>\n      <ld-sidenav-navitem to=\"soft-compu\">Soft computing</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Natural language processing</ld-sidenav-navitem>\n      <ld-sidenav-subnav id=\"soft-compu\" label=\"Soft computing\">\n        <ld-sidenav-navitem mode=\"secondary\">Machine learning</ld-sidenav-navitem>\n        <ld-sidenav-navitem mode=\"secondary\">Evolutionary computing</ld-sidenav-navitem>\n      </ld-sidenav-subnav>\n    </ld-sidenav-subnav>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n### `ld-sidenav-back`\n\nThe only thing that is missing in our example above for a fully working nav with sub-navs is the possibility to navigate back / out of a sub-navigation. We can achieve this by adding the [`ld-sidenav-back`](./ld-sidenav-back) component to the `ld-sidenav` `top` slot.\n\nThe [`ld-sidenav-back`](./ld-sidenav-back) component will use the label prop on [`ld-sidenav-slider`](./ld-sidenav-slider) and [`ld-sidenav-subnav`](./ld-sidenav-subnav) to indicate where the user will navigate back to when clicking on the button. Also, it contains another [`ld-sidenav-navitem`](./ld-sidenav-navitem) in its slot, which is used as a fallback for when the user navigates back to the navigation root.\n\n{% example '{ \"highlight\": \"1-3\", \"opened\": true, \"hasPadding\": false, \"styles\": { \"minHeight\": \"20rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open>\n  <ld-sidenav-back slot=\"top\">\n    <ld-sidenav-navitem>Outline of CS</ld-sidenav-navitem>\n  </ld-sidenav-back>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-navitem to=\"art-intell\">Artificial intelligence</ld-sidenav-navitem>\n    <ld-sidenav-subnav id=\"art-intell\" label=\"Artificial intelligence\">\n      <ld-sidenav-navitem mode=\"secondary\">Automated reasoning</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Computer vision</ld-sidenav-navitem>\n      <ld-sidenav-navitem to=\"soft-comput\">Soft computing</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Natural language processing</ld-sidenav-navitem>\n      <ld-sidenav-subnav id=\"soft-comput\" label=\"Soft computing\">\n        <ld-sidenav-navitem mode=\"secondary\">Machine learning</ld-sidenav-navitem>\n        <ld-sidenav-navitem mode=\"secondary\">Evolutionary computing</ld-sidenav-navitem>\n      </ld-sidenav-subnav>\n    </ld-sidenav-subnav>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n### `ld-sidenav-heading`\n\nUse the [`ld-sidenav-heading`](./ld-sidenav-heading) component to display headings in your sidenav.\n\n{% example '{ \"highlight\": \"5,8,14\", \"opened\": true, \"hasPadding\": false, \"styles\": { \"minHeight\": \"20rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open>\n  <ld-sidenav-back slot=\"top\">\n    <ld-sidenav-navitem>Outline of CS</ld-sidenav-navitem>\n  </ld-sidenav-back>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-heading>Subfields</ld-sidenav-heading>\n    <ld-sidenav-navitem to=\"artif-intellig\">Artificial intelligence</ld-sidenav-navitem>\n    <ld-sidenav-subnav id=\"artif-intellig\" label=\"Artificial intelligence\">\n      <ld-sidenav-heading>Artificial intelligence</ld-sidenav-heading>\n      <ld-sidenav-navitem mode=\"secondary\">Automated reasoning</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Computer vision</ld-sidenav-navitem>\n      <ld-sidenav-navitem to=\"soft-computi\">Soft computing</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Natural language processing</ld-sidenav-navitem>\n      <ld-sidenav-subnav id=\"soft-computi\" label=\"Soft computing\">\n        <ld-sidenav-heading>Soft computing</ld-sidenav-heading>\n        <ld-sidenav-navitem mode=\"secondary\">Machine learning</ld-sidenav-navitem>\n        <ld-sidenav-navitem mode=\"secondary\">Evolutionary computing</ld-sidenav-navitem>\n      </ld-sidenav-subnav>\n    </ld-sidenav-subnav>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n### `ld-sidenav-separator`\n\nThe [`ld-sidenav-separator`](./ld-sidenav-separator) component allows you to visually separate elements from each other within the sidenav by drawing a thin line and making some vertical space between them.\n\n{% example '{ \"highlight\": \"8\", \"opened\": true, \"hasPadding\": false, \"styles\": { \"minHeight\": \"24rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open>\n  <ld-sidenav-back slot=\"top\">\n    <ld-sidenav-navitem>Outline of CS</ld-sidenav-navitem>\n  </ld-sidenav-back>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-heading>Subfields</ld-sidenav-heading>\n    <ld-sidenav-navitem>Maths</ld-sidenav-navitem>\n    <ld-sidenav-navitem>Artificial intelligence</ld-sidenav-navitem>\n    <ld-sidenav-separator></ld-sidenav-separator>\n    <ld-sidenav-navitem>Fruits</ld-sidenav-navitem>\n    <ld-sidenav-navitem>Vegetables</ld-sidenav-navitem>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n### `ld-sidenav-accordion`\n\nFor deeper navigation hierarchies you may also want to structure certain navigation segments using an accordion. For this purpose you can use the [`ld-sidenav-accordion`](./ld-sidenav-accordion) component.\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  Some things to keep in mind when using the <code>ld-sidenav-accordion</code> component within the <code>ld-sidenav</code> component:\n  <ul style=\"margin:0\">\n    <li>The <code>ld-sidenav-accordion</code> component must be a child (direct descendant) of either the <code>ld-sidenav-slider</code>, <code>ld-sidenav-subnav</code>  or another <code>ld-sidenav-accordion</code> component</li>\n    <li>Nested accordions are supported with a maximum nesting depth of two levels</li>\n  </ul>\n</ld-notice>\n\n{% example '{ \"highlight\": \"6,14,15,19,23,28,33,35,40,42\", \"hasPadding\": false, \"styles\": { \"minHeight\": \"30rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open>\n  <ld-sidenav-back slot=\"top\">\n    <ld-sidenav-navitem>Outline of CS</ld-sidenav-navitem>\n  </ld-sidenav-back>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-heading>Subfields</ld-sidenav-heading>\n    <ld-sidenav-accordion>\n      <ld-sidenav-navitem slot=\"toggle\">Mathematical foundations</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Coding theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Game theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Discrete Mathematics</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Graph theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Mathematical logic</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Number theory</ld-sidenav-navitem>\n    </ld-sidenav-accordion>\n    <ld-sidenav-accordion expanded=\"true\" split>\n      <ld-sidenav-navitem slot=\"toggle\">Algorithms and data structures</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Algorithms</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Data structures</ld-sidenav-navitem>\n    </ld-sidenav-accordion>\n    <ld-sidenav-navitem to=\"artificial-inte\">\n      Artificial intelligence\n    </ld-sidenav-navitem>\n    <ld-sidenav-accordion expanded>\n      <ld-sidenav-navitem slot=\"toggle\">Communication and security</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Networking</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Computer security</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Cryptography</ld-sidenav-navitem>\n    </ld-sidenav-accordion>\n    <ld-sidenav-subnav id=\"artificial-inte\" label=\"Artificial intelligence\">\n      <ld-sidenav-heading>Artificial intelligence</ld-sidenav-heading>\n      <ld-sidenav-navitem mode=\"secondary\">Automated reasoning</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Computer vision</ld-sidenav-navitem>\n      <ld-sidenav-accordion>\n        <ld-sidenav-navitem slot=\"toggle\">Soft computing</ld-sidenav-navitem>\n        <ld-sidenav-accordion>\n          <ld-sidenav-navitem mode=\"secondary\" slot=\"toggle\">Machine learning</ld-sidenav-navitem>\n          <ld-sidenav-navitem mode=\"tertiary\">Supervised learning</ld-sidenav-navitem>\n          <ld-sidenav-navitem mode=\"tertiary\">Unsupervised learning</ld-sidenav-navitem>\n          <ld-sidenav-navitem mode=\"tertiary\">Reinforcement learning</ld-sidenav-navitem>\n        </ld-sidenav-accordion>\n        <ld-sidenav-navitem mode=\"secondary\">Evolutionary computing</ld-sidenav-navitem>\n      </ld-sidenav-accordion>\n    </ld-sidenav-subnav>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n### `ld-sidenav-header`\n\nAs a final step, we will add the [`ld-sidenav-header`](./ld-sidenav-header) component to the mix. In this example it will simply display a logo and a title. Where the header component comes in really handy, is when used in [collapsible mode](./#collapsible-mode), where it comes with a toggle button for collapsing and expanding the side navigation. \n\n{% example '{ \"highlight\": \"1\", \"hasPadding\": false, \"styles\": { \"minHeight\": \"30rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open>\n  <ld-sidenav-header href=\"#\" slot=\"header\">Computer Science</ld-sidenav-header>\n  <ld-sidenav-back slot=\"top\">\n    <ld-sidenav-navitem>Outline of CS</ld-sidenav-navitem>\n  </ld-sidenav-back>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-heading>Subfields</ld-sidenav-heading>\n    <ld-sidenav-accordion>\n      <ld-sidenav-navitem slot=\"toggle\">Mathematical foundations</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Coding theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Game theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Discrete Mathematics</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Graph theory</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Mathematical logic</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Number theory</ld-sidenav-navitem>\n    </ld-sidenav-accordion>\n    <ld-sidenav-accordion expanded=\"true\" split>\n      <ld-sidenav-navitem slot=\"toggle\">Algorithms and data structures</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Algorithms</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Data structures</ld-sidenav-navitem>\n    </ld-sidenav-accordion>\n    <ld-sidenav-navitem to=\"artificial-int\">\n      Artificial intelligence\n    </ld-sidenav-navitem>\n    <ld-sidenav-accordion expanded>\n      <ld-sidenav-navitem slot=\"toggle\">Communication and security</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Networking</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Computer security</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Cryptography</ld-sidenav-navitem>\n    </ld-sidenav-accordion>\n    <ld-sidenav-subnav id=\"artificial-int\" label=\"Artificial intelligence\">\n      <ld-sidenav-heading>Artificial intelligence</ld-sidenav-heading>\n      <ld-sidenav-navitem mode=\"secondary\">Automated reasoning</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Computer vision</ld-sidenav-navitem>\n      <ld-sidenav-accordion>\n        <ld-sidenav-navitem slot=\"toggle\">Soft computing</ld-sidenav-navitem>\n        <ld-sidenav-accordion>\n          <ld-sidenav-navitem mode=\"secondary\" slot=\"toggle\">Machine learning</ld-sidenav-navitem>\n          <ld-sidenav-navitem mode=\"tertiary\">Supervised learning</ld-sidenav-navitem>\n          <ld-sidenav-navitem mode=\"tertiary\">Unsupervised learning</ld-sidenav-navitem>\n          <ld-sidenav-navitem mode=\"tertiary\">Reinforcement learning</ld-sidenav-navitem>\n        </ld-sidenav-accordion>\n        <ld-sidenav-navitem mode=\"secondary\">Evolutionary computing</ld-sidenav-navitem>\n      </ld-sidenav-accordion>\n    </ld-sidenav-subnav>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n## Collapsible mode\n\nIn some cases you will want to make space for your main content. Use the `collapsible` prop to enable collapsing and expanding of the sidenav component.\n\n{% example '{ \"highlight\": \"0\", \"hasPadding\": false, \"styles\": { \"minHeight\": \"12rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open collapsible>\n  <ld-sidenav-header href=\"#\" slot=\"header\">Computer Science</ld-sidenav-header>\n  <ld-sidenav-slider label=\"Outline of Computer Science\">\n    <ld-sidenav-heading>Subfields</ld-sidenav-heading>\n    <ld-sidenav-navitem>Mathematical foundations</ld-sidenav-navitem>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\nIn the example above the side navigation is not expandable through the user interface anymore, as soon as collapsed. So an additional toggle element for expanding the side navigation would be really usefull here: the `ld-sidenav-toggle-outside` component.\n\n### `ld-sidenav-toggle-outside`\n\nUse the `ld-sidenav-toggle-outside` component to add a toggle button for expanding the side navigation.\n\n{% example '{ \"highlight\": \"0\", \"hasPadding\": false, \"styles\": { \"minHeight\": \"12rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav-toggle-outside></ld-sidenav-toggle-outside>\n<ld-sidenav open collapsible>\n  <ld-sidenav-header href=\"#\" slot=\"header\">Computer Science</ld-sidenav-header>\n  <ld-sidenav-slider label=\"Outline of Computer Science\">\n    <ld-sidenav-heading>Subfields</ld-sidenav-heading>\n    <ld-sidenav-navitem>Mathematical foundations</ld-sidenav-navitem>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\nYou are not forced to use this component. You can use your own toggle element or the [`ld-header`](../ld-header) component instead. But be aware, that you will need to take care of focus handling yourself.\n\n### Narrow mode\n\nUse the prop `narrow` for advanced use cases, where you'd like to have a sidenav which partially collapses in way, that slotted `ld-sidenav-navitem` components are displayed as icon buttons.\n\nThe sidenav only collapses to narrow mode, if navigation to a sub-nav is possible via a nav item in the current state. Otherwise, it collapses fully. All slotted elements, which are not `ld-sidenav-navitem` (in primary mode), `ld-sidenav-back` or `ld-sidenav-separator`, are hidden in narrow mode. The latter components move up on sidenav collapse, taking up freed vertical space of the hidden elements, and move back down as soon as the sidenav expands.\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"22rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav-toggle-outside></ld-sidenav-toggle-outside>\n<ld-sidenav style=\"--ld-sidenav-width: 20rem\" collapsed collapsible narrow>\n  <ld-sidenav-header href=\"#\" slot=\"header\">Computer Science</ld-sidenav-header>\n  <ld-sidenav-back slot=\"top\">\n    <ld-sidenav-navitem>Outline of CS</ld-sidenav-navitem>\n  </ld-sidenav-back>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-heading>Subfields</ld-sidenav-heading>\n    <ld-sidenav-navitem to=\"artif-intelligence\">Artificial intelligence</ld-sidenav-navitem>\n    <ld-sidenav-subnav id=\"artif-intelligence\" label=\"Artificial intelligence\">\n      <ld-sidenav-heading>Artificial intelligence</ld-sidenav-heading>\n      <ld-sidenav-navitem mode=\"secondary\">Automated reasoning</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Computer vision</ld-sidenav-navitem>\n      <ld-sidenav-navitem to=\"s-computing\">Soft computing</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Natural language processing</ld-sidenav-navitem>\n      <ld-sidenav-subnav id=\"s-computing\" label=\"Soft computing\">\n        <ld-sidenav-heading>Soft computing</ld-sidenav-heading>\n        <ld-sidenav-navitem mode=\"secondary\">Machine learning</ld-sidenav-navitem>\n        <ld-sidenav-navitem mode=\"secondary\">Evolutionary computing</ld-sidenav-navitem>\n      </ld-sidenav-subnav>\n    </ld-sidenav-subnav>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  Narrow mode works best in a sidenav containing <code>ld-sidenav-navitem</code> components exclusively, or as little as possible other components, which eventually get hidden on collapse. This ensures that transitions are minimalistic and there is no unnecessary scrolling when the scroll container content is reduced to <code>ld-sidenav-navitem</code> components only.<br>\n  Try to avoid mixing navigation modes, where the side navigation either collapses to narrow mode, or fully, depending on whether a <ld-link href=\"components/ld-sidenav/ld-sidenav-navitem/#primary-mode\">primary-mode navitem</ld-link> is present in the current navigation level (the example above is a counterexample to this recommendation).\n</ld-notice>\n\n### Expand trigger\n\nUse the expand trigger property to configure on which events the side navigation expands. You can configure it to expand\n\n- only on explicit toggle button click in the [`ld-sidenav-header`](./ld-sidenav-header) component, or programmatically from outside of the `ld-sidenav` component,\n- when the user moves the cursor over the side navigation or the sidenav receives focus-within.\n\nThe trigger modes are inclusive as follows:\n- `'toggle'` applies as well if the collapse trigger is set to `'mouseenter'`\n\n#### toggle\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"8rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav-toggle-outside></ld-sidenav-toggle-outside>\n<ld-sidenav open collapsed collapsible narrow expand-trigger=\"toggle\">\n  <ld-sidenav-header href=\"#\" slot=\"header\">Computer Science</ld-sidenav-header>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-navitem>Artificial intelligence</ld-sidenav-navitem>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n#### mouseenter\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"8rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav-toggle-outside></ld-sidenav-toggle-outside>\n<ld-sidenav open collapsed collapsible narrow expand-trigger=\"mouseenter\">\n  <ld-sidenav-header href=\"#\" slot=\"header\">Computer Science</ld-sidenav-header>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-navitem>Artificial intelligence</ld-sidenav-navitem>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n#### Customizing expansion on click of individual navitems\n\nBy default, the sidenav automatically expands on click of an [`ld-sidenav-navitem`](./ld-sidenav-navitem), which has a `to` property, or acts as an accordion toggle within an [`ld-sidenav-accordion`](./ld-sidenav-accordion). You can overwrite this behavior by using the `expand-on-click` prop of each [`ld-sidenav-navitem`](./ld-sidenav-navitem) within your sidenav to explicitly force or prevent the expansion.\n\n### Collapse trigger\n\nUse the collapse trigger property to configure on which events the side navigation collapses. You can configure it to collapse\n\n- only on explicit toggle button click in the [`ld-sidenav-header`](./ld-sidenav-header) component, or programmatically from outside of the `ld-sidenav` component,\n- when the user clicks somewhere outside the side navigation,\n- when the user moves the cursor outside the side navigation.\n\nThe trigger modes are inclusive as follows:\n- `'clickoutside'` applies as well if the collapse trigger is set to `'mouseout'`\n- `'toggle'` applies as well if the collapse trigger is set to `'clickoutside'`\n\n#### toggle\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"8rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav-toggle-outside></ld-sidenav-toggle-outside>\n<ld-sidenav open collapsible collapsed narrow collapse-trigger=\"toggle\">\n  <ld-sidenav-header href=\"#\" slot=\"header\">Computer Science</ld-sidenav-header>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-navitem>Artificial intelligence</ld-sidenav-navitem>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n#### clickoutside\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"8rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav-toggle-outside></ld-sidenav-toggle-outside>\n<ld-sidenav open collapsible collapsed narrow collapse-trigger=\"clickoutside\">\n  <ld-sidenav-header href=\"#\" slot=\"header\">Computer Science</ld-sidenav-header>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-navitem>Artificial intelligence</ld-sidenav-navitem>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n#### mouseout\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"8rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav-toggle-outside></ld-sidenav-toggle-outside>\n<ld-sidenav open collapsible collapsed narrow collapse-trigger=\"mouseout\">\n  <ld-sidenav-header href=\"#\" slot=\"header\">Computer Science</ld-sidenav-header>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-navitem>Artificial intelligence</ld-sidenav-navitem>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n### Disable toggle transitions\n\nYou can disable transitions on collapsing and expansion of the sidenav. This is especially usefull when the page content gets pushed to the side on sidenav expansion, and you want to prevent too many layout shifts during the transition.\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"8rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav-toggle-outside></ld-sidenav-toggle-outside>\n<ld-sidenav open collapsible collapsed narrow toggle-transition-disabled>\n  <ld-sidenav-header href=\"#\" slot=\"header\">Computer Science</ld-sidenav-header>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-navitem>Artificial intelligence</ld-sidenav-navitem>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n## Listening for events\n\nThe sidenav as well as its subcomponents emit different events which you can use in order to react to user interaction with the sidenav or changes to its context. The following example demonstrates just one possibility of how you could listen for some available events. Refer to the _Events_ section of each component to see a list of all available events.\n\n{% example '{ \"opened\": true, \"hasPadding\": false, \"styles\": { \"minHeight\": \"24rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav-toggle-outside></ld-sidenav-toggle-outside>\n<ld-sidenav open>\n  <ld-sidenav-back slot=\"top\">\n    <ld-sidenav-navitem>Outline of CS</ld-sidenav-navitem>\n  </ld-sidenav-back>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-heading>Subfields</ld-sidenav-heading>\n    <ld-sidenav-navitem to=\"nav-artificial-intelligence\">Artificial intelligence</ld-sidenav-navitem>\n    <ld-sidenav-subnav id=\"nav-artificial-intelligence\" label=\"Artificial intelligence\">\n      <ld-sidenav-heading>Artificial intelligence</ld-sidenav-heading>\n      <ld-sidenav-navitem mode=\"secondary\">Automated reasoning</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Computer vision</ld-sidenav-navitem>\n      <ld-sidenav-navitem to=\"nav-soft-computing\">Soft computing</ld-sidenav-navitem>\n      <ld-sidenav-navitem mode=\"secondary\">Natural language processing</ld-sidenav-navitem>\n      <ld-sidenav-subnav id=\"nav-soft-computing\" label=\"Soft computing\">\n        <ld-sidenav-heading>Soft computing</ld-sidenav-heading>\n        <ld-sidenav-navitem mode=\"secondary\">Machine learning</ld-sidenav-navitem>\n        <ld-sidenav-navitem mode=\"secondary\">Evolutionary computing</ld-sidenav-navitem>\n      </ld-sidenav-subnav>\n    </ld-sidenav-subnav>\n  </ld-sidenav-slider>\n</ld-sidenav>\n\n<script>\n  void function() {\n    const sidenav = document.currentScript.previousElementSibling\n    sidenav.addEventListener('ldSidenavSliderChange', ev => {\n      console.info('sidenav slider change', ev.detail && ev.detail.id)\n    })\n    sidenav.addEventListener('ldSidenavNavitemTo', ev => {\n      console.info('sidenav navitem to click', ev.detail.id)\n    })\n    sidenav.addEventListener('ldSidenavNavitemClick', ev => {\n      console.info('sidenav navitem click', ev.target.getAttribute('to'))\n    })\n  }()\n</script>\n{% endexample %}\n\n---\n\n## CSS Variables\n\n| Variable                             | Description                                                         |\n|--------------------------------------|---------------------------------------------------------------------|\n| `--ld-sidenav-bg-color`              | Background color of the `ld-sidenav` component.                     |\n| `--ld-sidenav-closable-min-width`    | Minimum width of the `ld-sidenav` component when closable.          |\n| `--ld-sidenav-padding-x`             | Horizontal padding applied on the component and its subcomponents. |\n| `--ld-sidenav-padding-y`             | Vertical padding applied on the component and its subcomponents.   |\n| `--ld-sidenav-transition-duration`   | Transition duration for all sidenav specific transitions.           |\n| `--ld-sidenav-width`                 | Width of the `ld-sidenav` component.                                |\n| `--ld-sidenav-width-collapsed`       | Width of the `ld-sidenav` component when collapsed.                 |\n",
      "docs": "---\neleventyNavigation:\n  key: Sidenav\n  parent: Components\nlayout: layout.njk\ntitle: Sidenav\npermalink: components/ld-sidenav/\ntags:\n  - navigation\n  - menu\n---\n\n<style>\n  body {\n    --ld-sidenav-position: absolute;\n    --ld-sidenav-toggle-outside-position: absolute;\n  }\n</style>",
      "docsTags": [
        {
          "name": "slot",
          "text": "- default slot, vertically scrollable."
        },
        {
          "name": "slot",
          "text": "top - slot fixed at the top, above scrollable default slot."
        },
        {
          "name": "slot",
          "text": "bottom - slot fixed at the bottom, below scrollable default slot."
        },
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "align",
          "type": "\"left\" | \"right\"",
          "mutable": false,
          "attr": "align",
          "reflectToAttr": false,
          "docs": "Whether the nav should be aligned to the left or the right side of its container.",
          "docsTags": [],
          "default": "'left'",
          "values": [
            {
              "value": "left",
              "type": "string"
            },
            {
              "value": "right",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "breakpoint",
          "type": "string",
          "mutable": false,
          "attr": "breakpoint",
          "reflectToAttr": false,
          "docs": "The breakpoint at which the sidenav takes full width and can be\nopened and closed as opposed to being expanded and collapsed.\nThe prop value is used in a max-width media query.",
          "docsTags": [],
          "default": "'23.4375rem'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "collapseTrigger",
          "type": "\"clickoutside\" | \"mouseout\" | \"toggle\"",
          "mutable": false,
          "attr": "collapse-trigger",
          "reflectToAttr": false,
          "docs": "Makes the navigation collapse either on\n- explicit toggle button click,\n- when the user clicks somewhere outside the element or\n- when the user moves the cursor / focus outside the element.\nThe modes are inclusive from right to left:\n- clickoutside applies if the collapse trigger is set to mouseout\n- toggle applies if the collapse trigger is set to clickoutside",
          "docsTags": [],
          "default": "'toggle'",
          "values": [
            {
              "value": "clickoutside",
              "type": "string"
            },
            {
              "value": "mouseout",
              "type": "string"
            },
            {
              "value": "toggle",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "collapsed",
          "type": "boolean",
          "mutable": true,
          "attr": "collapsed",
          "reflectToAttr": false,
          "docs": "Indicates that the navigation is collapsed to the side of its container.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "collapsible",
          "type": "boolean",
          "mutable": false,
          "attr": "collapsible",
          "reflectToAttr": false,
          "docs": "Allows the side navigation to be collapsed to the side of its container.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "expandTrigger",
          "type": "\"mouseenter\" | \"toggle\"",
          "mutable": false,
          "attr": "expand-trigger",
          "reflectToAttr": false,
          "docs": "Makes the navigation expand either on\n- explicit toggle button click,\n- when the user moves the cursor over the element.\nThe modes are inclusive from right to left:\n- toggle applies if the expand trigger is set to mouseenter",
          "docsTags": [],
          "default": "'toggle'",
          "values": [
            {
              "value": "mouseenter",
              "type": "string"
            },
            {
              "value": "toggle",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Label to be used for the landmark element (the sidenav itself).",
          "docsTags": [],
          "default": "'Side navigation'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "narrow",
          "type": "boolean",
          "mutable": false,
          "attr": "narrow",
          "reflectToAttr": false,
          "docs": "Set to true if you'd like to have a sidenav which partially\ncollapses in way, that slotted ld-navitem components are displayed\nas icon buttons.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "open",
          "type": "boolean",
          "mutable": true,
          "attr": "open",
          "reflectToAttr": false,
          "docs": "Indicates that the navigation is visible in a viewport\nwhich is smaller than the value of the `breakpoint` prop.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "toggleTransitionDisabled",
          "type": "boolean",
          "mutable": false,
          "attr": "toggle-transition-disabled",
          "reflectToAttr": false,
          "docs": "Disables transitions on collapsing and expansion of the sidenav.\nThis is especially usefull when the page content gets pushed to\nthe side on sidenav expansion, and you want to prevent too many\nlayout shifts during the transition.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "trapFocus",
          "type": "string",
          "mutable": false,
          "attr": "trap-focus",
          "reflectToAttr": false,
          "docs": "Enables focus trapping. Accespts a CSS selector which indicates\nwhat is still focusable outside the sidenav, when the sidenav is\nclosable and open (i.e. \"ld-header *\"). Use an empty string to\nenable focus trapping without specifying focusable elements\noutside the sidenav component.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "toggle",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "toggle() => Promise<void>",
          "parameters": [],
          "docs": "Toggles sidenav.",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "ldSidenavBreakpointChange",
          "detail": "boolean",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the sidenav registers a match media change event.",
          "docsTags": []
        },
        {
          "event": "ldSidenavCollapsedChange",
          "detail": "{ collapsed: boolean; fully: boolean; }",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the sidenav collapses or expands.",
          "docsTags": []
        },
        {
          "event": "ldSidenavOpenChange",
          "detail": "boolean",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the sidenav opens or closes.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "click",
          "target": "window",
          "capture": false,
          "passive": false
        },
        {
          "event": "mouseout",
          "capture": false,
          "passive": true
        },
        {
          "event": "mouseenter",
          "capture": false,
          "passive": true
        },
        {
          "event": "ldSidenavOpen",
          "capture": false,
          "passive": false
        },
        {
          "event": "ldSidenavClose",
          "capture": false,
          "passive": false
        },
        {
          "event": "ldSidenavBack",
          "capture": false,
          "passive": false
        },
        {
          "event": "ldSidenavNavitemTo",
          "capture": false,
          "passive": false
        },
        {
          "event": "ldSidenavSliderChange",
          "capture": false,
          "passive": false
        },
        {
          "event": "keydown",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "focusout",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "ldSidenavHeaderToggleClick",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [
        {
          "name": "",
          "docs": "default slot, vertically scrollable."
        },
        {
          "name": "bottom",
          "docs": "slot fixed at the bottom, below scrollable default slot."
        },
        {
          "name": "top",
          "docs": "slot fixed at the top, above scrollable default slot."
        }
      ],
      "parts": [
        {
          "name": "scroll-container",
          "docs": ""
        },
        {
          "name": "slot-container",
          "docs": ""
        },
        {
          "name": "slot-container-bottom",
          "docs": ""
        },
        {
          "name": "slot-container-top",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [
        "ld-sidenav-scroller-internal"
      ],
      "dependencyGraph": {
        "ld-sidenav": [
          "ld-sidenav-scroller-internal"
        ],
        "ld-sidenav-scroller-internal": [
          "ld-sidenav-separator"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-sidenav/ld-sidenav-accordion/ld-sidenav-accordion.tsx",
      "encapsulation": "shadow",
      "tag": "ld-sidenav-accordion",
      "readme": "---\neleventyNavigation:\n  key: Sidenav Accordion\n  parent: Sidenav\nlayout: layout.njk\ntitle: Sidenav Accordion\npermalink: components/ld-sidenav/ld-sidenav-accordion/\n---\n\n# ld-sidenav-accordion\n\nThe `ld-sidenav-accordion` component is a subcomponent for `ld-sidenav`.\n\nPlease refer to the [`ld-sidenav` documentation](components/ld-sidenav/#ld-sidenav-accordion) for usage examples.\n\n---\n",
      "docs": "---\neleventyNavigation:\n  key: Sidenav Accordion\n  parent: Sidenav\nlayout: layout.njk\ntitle: Sidenav Accordion\npermalink: components/ld-sidenav/ld-sidenav-accordion/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "expanded",
          "type": "boolean",
          "mutable": true,
          "attr": "expanded",
          "reflectToAttr": false,
          "docs": "Indicates that the accordion section is expanded.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "preserveState",
          "type": "boolean",
          "mutable": false,
          "attr": "preserve-state",
          "reflectToAttr": false,
          "docs": "Set to false to make the accordion collapse on sidenav collapse\nor slide change.",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "split",
          "type": "boolean",
          "mutable": false,
          "attr": "split",
          "reflectToAttr": false,
          "docs": "Split the accordion toggle in two parts with the second part containing\nthe caret icon and being responsible for expanding / collapsing\nthe accordion panel.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "ldSidenavAccordionTransitionEnd",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted on accordion expand or collaps transition end.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "ldSidenavBreakpointChange",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "ldSidenavSliderChange",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "ldSidenavCollapsedChange",
          "target": "window",
          "capture": false,
          "passive": true
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "ld-accordion",
        "ld-accordion-section",
        "ld-accordion-toggle",
        "ld-accordion-panel"
      ],
      "dependencyGraph": {
        "ld-sidenav-accordion": [
          "ld-accordion",
          "ld-accordion-section",
          "ld-accordion-toggle",
          "ld-accordion-panel"
        ],
        "ld-accordion-toggle": [
          "ld-icon"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-sidenav/ld-sidenav-back/ld-sidenav-back.tsx",
      "encapsulation": "shadow",
      "tag": "ld-sidenav-back",
      "readme": "---\neleventyNavigation:\n  key: Sidenav Back\n  parent: Sidenav\nlayout: layout.njk\ntitle: Sidenav Back\npermalink: components/ld-sidenav/ld-sidenav-back/\n---\n\n# ld-sidenav-back\n\nThe `ld-sidenav-back` component is a subcomponent for `ld-sidenav`.\n\nPlease refer to the [`ld-sidenav` documentation](components/ld-sidenav/#ld-sidenav-back) for usage examples.\n\n---\n\n## CSS Variables\n\n| Variable                             | Description                                        |\n|--------------------------------------|----------------------------------------------------|\n| `--ld-sidenav-back-border-radius`    | Border radius of the `ld-sidenav-back` component.  |\n| `--ld-sidenav-back-icon-size`        | Back icon size of the `ld-sidenav-back` component. |\n",
      "docs": "---\neleventyNavigation:\n  key: Sidenav Back\n  parent: Sidenav\nlayout: layout.njk\ntitle: Sidenav Back\npermalink: components/ld-sidenav/ld-sidenav-back/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "backLabel",
          "type": "string",
          "mutable": false,
          "attr": "back-label",
          "reflectToAttr": false,
          "docs": "Used as aria-label for the back button",
          "docsTags": [],
          "default": "'Back'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "ldSidenavBack",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted on click.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "ldSidenavCollapsedChange",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "ldSidenavBreakpointChange",
          "target": "window",
          "capture": false,
          "passive": true
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "back",
          "docs": ""
        },
        {
          "name": "bg",
          "docs": ""
        },
        {
          "name": "btn-back",
          "docs": ""
        },
        {
          "name": "focusable",
          "docs": ""
        },
        {
          "name": "icon",
          "docs": ""
        },
        {
          "name": "icon-container",
          "docs": ""
        },
        {
          "name": "label",
          "docs": ""
        },
        {
          "name": "slot-container",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-sidenav/ld-sidenav-header/ld-sidenav-header.tsx",
      "encapsulation": "shadow",
      "tag": "ld-sidenav-header",
      "readme": "---\neleventyNavigation:\n  key: Sidenav Header\n  parent: Sidenav\nlayout: layout.njk\ntitle: Sidenav Header\npermalink: components/ld-sidenav/ld-sidenav-header/\n---\n\n<style>\n  body {\n  --ld-sidenav-position: absolute;\n}\n</style>\n\n# ld-sidenav-header\n\nThe `ld-sidenav-header` component is a subcomponent for `ld-sidenav` component.\n\nPlease refer to the [`ld-sidenav` documentation](components/ld-sidenav/#ld-sidenav-header) for general usage examples. The expamples in this page focus on the customization of the `ld-sidenav-header` component itself.\n\n## Default\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"6rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open collapsible narrow>\n  <ld-sidenav-header href=\"#\" slot=\"header\">Liquid Oxygen</ld-sidenav-header>\n</ld-sidenav>\n{% endexample %}\n\n## With custom logo\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"6rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open collapsible narrow>\n  <ld-sidenav-header href=\"#\" slot=\"header\">\n    <svg slot=\"logo\" viewBox=\"0 0 32 32\">\n      <path d=\"M8.40273 3.00317C16.3674 -1.08484 30.9212 8.31547 30.2215 17.1105C29.5219 25.9055 13.8966 33.1344 6.62487 28.4376C-0.650379 23.7238 0.431303 7.10139 8.40273 3.00317Z\" fill=\"#2DBECD\"/>\n      <path d=\"M4.69207 12.6056C6.77561 6.76982 18.5736 4.62074 22.3863 9.39108C26.199 14.1614 21.7368 25.211 15.842 26.2848C9.93739 27.3517 2.60995 18.4498 4.69207 12.6056Z\" fill=\"#FFC832\"/>\n      <path d=\"M11.2893 10.9795C13.2965 8.19935 19.898 8.87655 21.1887 11.9997C22.4793 15.1229 18.4039 20.3071 15.1055 19.9688C11.803 19.6253 9.28149 13.7644 11.2893 10.9795Z\" fill=\"#0F69AF\"/>\n    </svg>\n    Liquid Oxygen\n  </ld-sidenav-header>\n</ld-sidenav>\n{% endexample %}\n\nIf your logo takes up a lot of horizontal space, you can omit the title and use all space for the logo:\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"6rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open collapsible narrow>\n  <ld-sidenav-header href=\"#\" slot=\"header\">\n    <svg slot=\"logo\" width=\"160\" viewBox=\"0 0 1120 90\">\n      <title>Liquid Oxygen</title>\n      <path d=\"M4.984 8.982h3.752c.158 0 .246-.07.246-.211v-.722c0-.863-.51-1.391-1.391-1.391H5.002c-1.55 0-2.536-1.357-2.536-2.836v-2.43C2.466.527 1.955 0 1.074 0H.211C.071 0 0 .088 0 .247v3.628c0 2.888 2.096 5.107 4.984 5.107Zm6.29 0h2.413c.159 0 .247-.07.247-.211V6.869c0-.141-.088-.211-.247-.211h-.546V2.87c0-.37.176-.546.546-.546.159 0 .247-.07.247-.212V1.39c0-.44-.124-.775-.37-1.021-.247-.247-.581-.37-1.022-.37H10.13c-.158 0-.246.07-.246.211v1.903c0 .14.088.21.246.21.37 0 .546.177.546.547v3.787h-.546c-.158 0-.246.07-.246.21v.723c0 .44.123.775.37 1.022.246.246.58.37 1.021.37h-.001Zm8.695 0h3.576c.158 0 .246-.07.246-.211V7.045c0-.14-.088-.211-.246-.211h-.67c.318-.265.547-.582.705-.916.14-.335.211-.722.211-1.163 0-.598-.158-1.18-.457-1.76a5.562 5.562 0 0 0-1.18-1.533A6.021 6.021 0 0 0 20.497.405 4.751 4.751 0 0 0 18.63 0h-3.61c-.142 0-.212.088-.212.247v3.575c0 .687.14 1.356.44 1.973.282.616.67 1.162 1.145 1.637.476.476 1.04.864 1.656 1.128.616.281 1.25.422 1.92.422Zm-.035-2.307a1.83 1.83 0 0 1-.933-.264 3.897 3.897 0 0 1-.863-.67 3.227 3.227 0 0 1-.617-.915 2.413 2.413 0 0 1-.246-1.022c0-.44.123-.792.387-1.056a1.364 1.364 0 0 1 1.004-.406c.3 0 .617.089.934.265.317.176.598.405.863.669.246.264.458.581.616.916.159.352.247.687.247 1.021 0 .423-.124.775-.388 1.04a1.316 1.316 0 0 1-1.004.422Zm9.989 2.307h3.522c.141 0 .212-.07.212-.229V1.41c0-.863-.511-1.391-1.392-1.391h-.863c-.14 0-.211.088-.211.246V5.16c0 .881-.529 1.515-1.444 1.515-1.515 0-2.607-1.409-2.607-3.012V1.41c0-.863-.51-1.391-1.391-1.391h-.863c-.141 0-.212.088-.212.246V3.7c0 3.029 2.06 5.301 5.249 5.301v-.019Zm6.007 0h2.414c.158 0 .246-.07.246-.211V6.869c0-.141-.088-.211-.246-.211h-.546V2.87c0-.37.176-.546.546-.546.158 0 .246-.07.246-.212V1.39c0-.44-.123-.775-.37-1.021C37.974.123 37.64 0 37.2 0h-2.413c-.159 0-.247.07-.247.211v1.903c0 .14.088.21.247.21.37 0 .546.177.546.547v3.787h-.546c-.159 0-.247.07-.247.21v.723c0 .44.124.775.37 1.022.247.246.581.37 1.022.37l-.002-.001Zm4.927 0h3.804c1.25 0 2.22-.299 2.924-.95.687-.635 1.04-1.568 1.04-2.819 0-.722-.142-1.391-.441-2.025a5.62 5.62 0 0 0-1.198-1.656A5.572 5.572 0 0 0 45.26.422a5.305 5.305 0 0 0-2.008-.404h-3.575c-.141 0-.211.088-.211.246V7.61c0 .44.123.775.37 1.021.246.247.58.37 1.021.37v-.019Zm1.074-2.307V3.822c0-.44.124-.793.353-1.074.229-.265.546-.406.95-.406.353 0 .705.089 1.057.247.335.176.652.405.934.687.264.282.493.599.67.951.175.352.263.705.263 1.074 0 .44-.14.775-.422 1.004-.3.247-.652.37-1.057.37H41.93h.001Z\" style=\"fill: var(--ld-thm-primary);fill-rule:nonzero\" transform=\"scale(10)\"/>\n      <path d=\"M59.8 9c2.336 0 3.824-1.592 3.824-3.825C63.624 2.44 61.184 0 58.45 0h-3.617c-.139 0-.208.087-.208.242v3.583C54.624 6.542 57.082 9 59.8 9Zm-.018-2.285c-1.281 0-2.735-1.627-2.735-2.942 0-.865.571-1.488 1.42-1.488 1.315 0 2.734 1.592 2.734 2.942 0 .883-.537 1.488-1.42 1.488h.001Zm4.727 2.112h.813c.433 0 .762-.121 1.022-.38l1.54-1.576c.242-.242.52-.363.813-.363.295 0 .554.12.796.363l1.54 1.575c.26.26.59.38 1.022.38h.865c.139 0 .208-.068.208-.224v-.83c0-.434-.121-.762-.38-1.022l-2.406-2.337 2.405-2.353c.26-.26.381-.589.381-1.022V.26c0-.156-.07-.243-.208-.243h-.813c-.433 0-.762.121-1.021.381l-1.54 1.575c-.243.242-.52.364-.814.364-.294 0-.554-.122-.796-.364L66.396.398c-.26-.26-.589-.38-1.022-.38h-.865c-.139 0-.208.086-.208.242v.83c0 .433.121.762.381 1.022l2.406 2.353-2.406 2.337c-.26.26-.38.588-.38 1.021v.779c0 .156.068.225.207.225Zm14.073 0h.848c.139 0 .208-.07.208-.225V5.365l2.804-3.253c.26-.312.398-.606.398-.987V.26c0-.156-.07-.243-.208-.243h-.813a1.252 1.252 0 0 0-.987.433l-1.557 1.852c-.226.26-.554.363-.814.363-.277 0-.606-.155-.796-.363L76.055.398c-.225-.26-.554-.38-1.02-.38h-.814c-.139 0-.208.086-.208.242v.865c0 .398.19.796.38 1.021l2.822 3.289v2.042c0 .848.502 1.367 1.367 1.367v-.017Zm10.145 0h3.565c.156 0 .242-.07.242-.208V4.915c0-.432-.12-.761-.363-1.003-.242-.243-.571-.364-1.004-.364h-3.998c-.156 0-.242.07-.242.208 0 .761.484 1.419 1.211 1.696.225.086.45.138.71.138h1.35v.952h-1.454c-.364 0-.727-.086-1.056-.26a2.923 2.923 0 0 1-.883-.657 3.395 3.395 0 0 1-.623-.935 2.523 2.523 0 0 1-.225-1.055c0-.433.139-.78.416-1.004.277-.225.623-.346 1.038-.346h4.708c.156 0 .242-.07.242-.208v-.71c0-.432-.12-.761-.363-1.004C91.755.121 91.427 0 90.994 0h-3.565a4.46 4.46 0 0 0-1.558.26c-.467.19-.883.432-1.229.761a3.423 3.423 0 0 0-.813 1.16 4.01 4.01 0 0 0-.295 1.54c0 .71.139 1.367.416 1.99.277.624.657 1.16 1.142 1.627a4.924 4.924 0 0 0 1.662 1.09c.623.26 1.28.399 1.973.399Zm9.694 0h3.392c.156 0 .243-.07.243-.208v-.71c0-.847-.502-1.367-1.368-1.367h-2.25c-1.419 0-2.613-1.35-2.613-2.804 0-.9.537-1.453 1.61-1.453.813 0 1.661.45 2.198 1.35h-2.596c-.156 0-.243.069-.243.207 0 1.056.952 1.835 1.887 1.835h2.475c.83 0 1.159-.467 1.159-1.16 0-2.302-2.51-4.517-5.036-4.517h-3.67c-.138 0-.207.087-.207.242v3.496c0 2.804 2.302 5.089 5.02 5.089h-.001Zm6.043 0h.848c.138 0 .207-.07.207-.225v-4.69l4.223 4.534c.243.26.554.398.952.398h1.022c.138 0 .207-.086.207-.242V1.385c0-.433-.121-.762-.363-1.004-.243-.243-.571-.364-1.004-.364h-.848c-.139 0-.208.087-.208.243v2.717c0 .225-.052.415-.156.554-.121.156-.277.225-.502.225-.259 0-.501-.121-.726-.364l-2.77-2.977c-.242-.26-.554-.398-.952-.398h-1.09c-.138 0-.208.087-.208.243v7.217c0 .433.121.761.364 1.004.242.242.571.363 1.004.363v-.017Z\" style=\"fill: var(--ld-thm-secondary);fill-rule:nonzero\" transform=\"scale(10)\"/>\n    </svg>\n  </ld-sidenav-header>\n</ld-sidenav>\n{% endexample %}\n\n---\n",
      "docs": "---\neleventyNavigation:\n  key: Sidenav Header\n  parent: Sidenav\nlayout: layout.njk\ntitle: Sidenav Header\npermalink: components/ld-sidenav/ld-sidenav-header/\n---\n\n<style>\n  body {\n  --ld-sidenav-position: absolute;\n}\n</style>",
      "docsTags": [
        {
          "name": "slot",
          "text": "- Slot for the header title."
        },
        {
          "name": "slot",
          "text": "logo - Replace the initial M with your custom logo."
        },
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "ariaLabel",
          "type": "string",
          "mutable": false,
          "attr": "aria-label",
          "reflectToAttr": false,
          "docs": "aria-label to be used on the anchor element within the sidenav header.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "href to be used on the anchor element within the sidenav header.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "labelCollapse",
          "type": "string",
          "mutable": false,
          "attr": "label-collapse",
          "reflectToAttr": false,
          "docs": "Label to be used for the toggle button when navigation is expanded.",
          "docsTags": [],
          "default": "'Collapse side navigation'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelExpand",
          "type": "string",
          "mutable": false,
          "attr": "label-expand",
          "reflectToAttr": false,
          "docs": "Label to be used for the toggle button when navigation is collapsed.",
          "docsTags": [],
          "default": "'Expand side navigation'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "ldSidenavHeaderToggleClick",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted on toggle click.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "ldSidenavCollapsedChange",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "ldSidenavBreakpointChange",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "ldSidenavOpenChange",
          "target": "window",
          "capture": false,
          "passive": true
        }
      ],
      "styles": [],
      "slots": [
        {
          "name": "",
          "docs": "Slot for the header title."
        },
        {
          "name": "logo",
          "docs": "Replace the initial M with your custom logo."
        }
      ],
      "parts": [
        {
          "name": "anchor",
          "docs": ""
        },
        {
          "name": "toggle",
          "docs": ""
        },
        {
          "name": "toggle-icon",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [
        "ld-tooltip",
        "ld-icon",
        "ld-sr-only",
        "ld-typo"
      ],
      "dependencyGraph": {
        "ld-sidenav-header": [
          "ld-tooltip",
          "ld-icon",
          "ld-sr-only",
          "ld-typo"
        ],
        "ld-tooltip": [
          "ld-sr-only",
          "ld-tooltip-popper"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-sidenav/ld-sidenav-heading/ld-sidenav-heading.tsx",
      "encapsulation": "shadow",
      "tag": "ld-sidenav-heading",
      "readme": "---\neleventyNavigation:\n  key: Sidenav Heading\n  parent: Sidenav\nlayout: layout.njk\ntitle: Sidenav Heading\npermalink: components/ld-sidenav/ld-sidenav-heading/\n---\n\n# ld-sidenav-heading\n\nThe `ld-sidenav-heading` component is a subcomponent for `ld-sidenav`.\n\nPlease refer to the [`ld-sidenav` documentation](components/ld-sidenav/#ld-sidenav-heading) for usage examples.\n\n---\n",
      "docs": "---\neleventyNavigation:\n  key: Sidenav Heading\n  parent: Sidenav\nlayout: layout.njk\ntitle: Sidenav Heading\npermalink: components/ld-sidenav/ld-sidenav-heading/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "typo",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [
        "ld-typo"
      ],
      "dependencyGraph": {
        "ld-sidenav-heading": [
          "ld-typo"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-sidenav/ld-sidenav-navitem/ld-sidenav-navitem.tsx",
      "encapsulation": "shadow",
      "tag": "ld-sidenav-navitem",
      "readme": "---\neleventyNavigation:\n  key: Sidenav Navitem\n  parent: Sidenav\nlayout: layout.njk\ntitle: Sidenav Navitem\npermalink: components/ld-sidenav/ld-sidenav-navitem/\n---\n\n# ld-sidenav-navitem\n\nThe `ld-sidenav-navitem` component is a subcomponent for `ld-sidenav` and is meant to be used in the slot of either the [`ld-sidenav-slider`](../ld-sidenav-slider), the [`ld-sidenav-subnav`](../ld-sidenav-subnav) or the [`ld-sidenav-back`](../ld-sidenav-back) component.\n\nPlease refer to the [`ld-sidenav` documentation](components/ld-sidenav/#ld-sidenav-navitem) for general usage examples. The expamples in this page focus on the customization of the `ld-sidenav-navitem` component itself.\n\n---\n\n<style>\nbody {\n  --ld-sidenav-position: absolute;\n}\n</style>\n\n## Primary mode\n\n### Icon\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"4.625rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-navitem>\n      <ld-icon slot=\"icon\" name=\"bottle\"></ld-icon>\n      Liquid Oxygen\n    </ld-sidenav-navitem>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n### Custom icon\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"4.625rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-navitem>\n      <svg slot=\"icon\" viewBox=\"0 0 32 32\">\n        <g transform=\"scale(0.75) translate(5, 5)\">\n          <path d=\"M8.40273 3.00317C16.3674 -1.08484 30.9212 8.31547 30.2215 17.1105C29.5219 25.9055 13.8966 33.1344 6.62487 28.4376C-0.650379 23.7238 0.431303 7.10139 8.40273 3.00317Z\" fill=\"#2DBECD\"/>\n          <path d=\"M4.69207 12.6056C6.77561 6.76982 18.5736 4.62074 22.3863 9.39108C26.199 14.1614 21.7368 25.211 15.842 26.2848C9.93739 27.3517 2.60995 18.4498 4.69207 12.6056Z\" fill=\"#FFC832\"/>\n          <path d=\"M11.2893 10.9795C13.2965 8.19935 19.898 8.87655 21.1887 11.9997C22.4793 15.1229 18.4039 20.3071 15.1055 19.9688C11.803 19.6253 9.28149 13.7644 11.2893 10.9795Z\" fill=\"#0F69AF\"/>\n        </g>\n      </svg>\n      Liquid Oxygen\n    </ld-sidenav-navitem>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n### Custom image\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"4.625rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-navitem>\n      <img slot=\"icon\" src=\"https://picsum.photos/id/152/80/80\" alt=\"\" />\n      Liquid Oxygen\n    </ld-sidenav-navitem>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n### Icon fallback\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"4.625rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-navitem>Liquid Oxygen</ld-sidenav-navitem>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n## Secondary mode\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"3.625rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-navitem mode=\"secondary\">Liquid Oxygen</ld-sidenav-navitem>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n## Tertiary mode\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"3.625rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-navitem mode=\"tertiary\">Liquid Oxygen</ld-sidenav-navitem>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n## Selected\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"9.75rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-navitem selected>Liquid Oxygen</ld-sidenav-navitem>\n    <ld-sidenav-navitem mode=\"secondary\" selected>Liquid Oxygen</ld-sidenav-navitem>\n    <ld-sidenav-navitem mode=\"tertiary\" selected>Liquid Oxygen</ld-sidenav-navitem>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n## Rounded\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"13.25rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-navitem rounded>\n      <svg slot=\"icon\" viewBox=\"0 0 32 32\">\n        <g transform=\"scale(0.75) translate(5, 5)\">\n          <path d=\"M8.40273 3.00317C16.3674 -1.08484 30.9212 8.31547 30.2215 17.1105C29.5219 25.9055 13.8966 33.1344 6.62487 28.4376C-0.650379 23.7238 0.431303 7.10139 8.40273 3.00317Z\" fill=\"#2DBECD\"/>\n          <path d=\"M4.69207 12.6056C6.77561 6.76982 18.5736 4.62074 22.3863 9.39108C26.199 14.1614 21.7368 25.211 15.842 26.2848C9.93739 27.3517 2.60995 18.4498 4.69207 12.6056Z\" fill=\"#FFC832\"/>\n          <path d=\"M11.2893 10.9795C13.2965 8.19935 19.898 8.87655 21.1887 11.9997C22.4793 15.1229 18.4039 20.3071 15.1055 19.9688C11.803 19.6253 9.28149 13.7644 11.2893 10.9795Z\" fill=\"#0F69AF\"/>\n        </g>\n      </svg>\n      Liquid Oxygen\n    </ld-sidenav-navitem>\n    <ld-sidenav-navitem rounded>Liquid Oxygen</ld-sidenav-navitem>\n    <ld-sidenav-navitem mode=\"secondary\" rounded>Liquid Oxygen</ld-sidenav-navitem>\n    <ld-sidenav-navitem mode=\"tertiary\" rounded>Liquid Oxygen</ld-sidenav-navitem>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n## Background color\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"13.25rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-navitem style=\"--ld-sidenav-navitem-icon-bg-col: var(--ld-col-vm)\" >\n      <svg slot=\"icon\" viewBox=\"0 0 32 32\">\n        <g transform=\"scale(0.75) translate(5, 5)\">\n          <path d=\"M8.40273 3.00317C16.3674 -1.08484 30.9212 8.31547 30.2215 17.1105C29.5219 25.9055 13.8966 33.1344 6.62487 28.4376C-0.650379 23.7238 0.431303 7.10139 8.40273 3.00317Z\" fill=\"#2DBECD\"/>\n          <path d=\"M4.69207 12.6056C6.77561 6.76982 18.5736 4.62074 22.3863 9.39108C26.199 14.1614 21.7368 25.211 15.842 26.2848C9.93739 27.3517 2.60995 18.4498 4.69207 12.6056Z\" fill=\"#FFC832\"/>\n          <path d=\"M11.2893 10.9795C13.2965 8.19935 19.898 8.87655 21.1887 11.9997C22.4793 15.1229 18.4039 20.3071 15.1055 19.9688C11.803 19.6253 9.28149 13.7644 11.2893 10.9795Z\" fill=\"#0F69AF\"/>\n        </g>\n      </svg>\n      Liquid Oxygen\n    </ld-sidenav-navitem>\n    <ld-sidenav-navitem style=\"--ld-sidenav-navitem-icon-bg-col: var(--ld-col-rp)\" >Liquid Oxygen</ld-sidenav-navitem>\n    <ld-sidenav-navitem style=\"--ld-sidenav-navitem-icon-bg-col: var(--ld-col-rr)\" mode=\"secondary\">Liquid Oxygen</ld-sidenav-navitem>\n    <ld-sidenav-navitem style=\"--ld-sidenav-navitem-icon-bg-col: var(--ld-col-rg)\" mode=\"tertiary\">Liquid Oxygen</ld-sidenav-navitem>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n## Secondary icon\n\n{% example '{ \"hasPadding\": false, \"styles\": { \"minHeight\": \"9.75rem\", \"position\": \"relative\" } }' %}\n<ld-sidenav open>\n  <ld-sidenav-slider label=\"Outline of CS\">\n    <ld-sidenav-navitem>\n      <svg slot=\"icon\" viewBox=\"0 0 32 32\">\n        <g transform=\"scale(0.75) translate(5, 5)\">\n          <path d=\"M8.40273 3.00317C16.3674 -1.08484 30.9212 8.31547 30.2215 17.1105C29.5219 25.9055 13.8966 33.1344 6.62487 28.4376C-0.650379 23.7238 0.431303 7.10139 8.40273 3.00317Z\" fill=\"#2DBECD\"/>\n          <path d=\"M4.69207 12.6056C6.77561 6.76982 18.5736 4.62074 22.3863 9.39108C26.199 14.1614 21.7368 25.211 15.842 26.2848C9.93739 27.3517 2.60995 18.4498 4.69207 12.6056Z\" fill=\"#FFC832\"/>\n          <path d=\"M11.2893 10.9795C13.2965 8.19935 19.898 8.87655 21.1887 11.9997C22.4793 15.1229 18.4039 20.3071 15.1055 19.9688C11.803 19.6253 9.28149 13.7644 11.2893 10.9795Z\" fill=\"#0F69AF\"/>\n        </g>\n      </svg>\n      Liquid Oxygen\n      <ld-icon slot=\"icon-secondary\" name=\"bottle\" size=\"sm\" />\n    </ld-sidenav-navitem>\n    <ld-sidenav-navitem mode=\"secondary\">\n      Liquid Oxygen\n      <ld-icon slot=\"icon-secondary\" name=\"bottle\" size=\"sm\" />\n    </ld-sidenav-navitem>\n    <ld-sidenav-navitem mode=\"tertiary\">\n      Liquid Oxygen\n      <ld-icon slot=\"icon-secondary\" name=\"bottle\" size=\"sm\" />\n    </ld-sidenav-navitem>\n  </ld-sidenav-slider>\n</ld-sidenav>\n{% endexample %}\n\n---\n\n## CSS Variables\n\n| Variable                                             | Description                                                                 |\n|------------------------------------------------------|-----------------------------------------------------------------------------|\n| `--ld-sidenav-navitem-border-radius`                 | Border radius of the `ld-sidenav-navitem` component.                        |\n| `--ld-sidenav-navitem-icon-font-size`                | Icon font size of the `ld-sidenav-navitem` component.                       |\n| `--ld-sidenav-navitem-icon-size`                     | Icon size of the `ld-sidenav-navitem` component.                            |\n| `--ld-sidenav-navitem-icon-bg-col`                   | Icon background color (overwrites current theme color).                     |\n",
      "docs": "---\neleventyNavigation:\n  key: Sidenav Navitem\n  parent: Sidenav\nlayout: layout.njk\ntitle: Sidenav Navitem\npermalink: components/ld-sidenav/ld-sidenav-navitem/\n---",
      "docsTags": [
        {
          "name": "slot",
          "text": "- default slot for the nav item label."
        },
        {
          "name": "slot",
          "text": "icon - slot for svg or icon component."
        },
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "expandOnClick",
          "type": "boolean",
          "mutable": false,
          "attr": "expand-on-click",
          "reflectToAttr": false,
          "docs": "By default, the sidenav automatically expands on click of a navitem,\nwhich has a `to` property or acts as an accordion toggle. You can\noverwrite this behavior by using this prop to explicitly force or\nprevent expansion of the sidenav.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "Transforms the nav item to an anchor element.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ldTabindex",
          "type": "number",
          "mutable": false,
          "attr": "ld-tabindex",
          "reflectToAttr": false,
          "docs": "Tab index of the button.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "mode",
          "type": "\"secondary\" | \"tertiary\"",
          "mutable": false,
          "attr": "mode",
          "reflectToAttr": false,
          "docs": "Display mode.\nIn secondary mode the navitem is less high, displays a filled dot\ninstead of the icon and is hidden when the sidenav collapses.\nThe tertiary mode is similar to secondary mode, with the navitem\nindented and the dot being empty and having a border.",
          "docsTags": [],
          "values": [
            {
              "value": "secondary",
              "type": "string"
            },
            {
              "value": "tertiary",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "rounded",
          "type": "boolean",
          "mutable": false,
          "attr": "rounded",
          "reflectToAttr": true,
          "docs": "Applies full border-radius.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "Sets visual indicator to denote that the nav item is currently selected.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "target",
          "type": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\"",
          "mutable": false,
          "attr": "target",
          "reflectToAttr": false,
          "docs": "The `target` attributed can be used in conjunction with the `href` attribute.\nSee [mdn docs](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target)\nfor more information on the `target` attribute.",
          "docsTags": [],
          "values": [
            {
              "value": "_blank",
              "type": "string"
            },
            {
              "value": "_parent",
              "type": "string"
            },
            {
              "value": "_self",
              "type": "string"
            },
            {
              "value": "_top",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "to",
          "type": "string",
          "mutable": false,
          "attr": "to",
          "reflectToAttr": true,
          "docs": "Accepts an id of an ld-subnav component to navigate to it on click.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "focusInner",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "focusInner() => Promise<void>",
          "parameters": [],
          "docs": "Sets focus on the anchor or button",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "ldSidenavNavitemClick",
          "detail": "any",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted on click.",
          "docsTags": []
        },
        {
          "event": "ldSidenavNavitemTo",
          "detail": "{ id: string; label: string; }",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted on click if prop to is set.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "ldSidenavCollapsedChange",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "ldSidenavBreakpointChange",
          "target": "window",
          "capture": false,
          "passive": true
        }
      ],
      "styles": [],
      "slots": [
        {
          "name": "",
          "docs": "default slot for the nav item label."
        },
        {
          "name": "icon",
          "docs": "slot for svg or icon component."
        }
      ],
      "parts": [
        {
          "name": "abbreviation",
          "docs": ""
        },
        {
          "name": "bg",
          "docs": ""
        },
        {
          "name": "dot",
          "docs": ""
        },
        {
          "name": "focusable",
          "docs": ""
        },
        {
          "name": "navitem",
          "docs": ""
        },
        {
          "name": "slot-container",
          "docs": ""
        },
        {
          "name": "slot-container-icon",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [
        "ld-tooltip",
        "ld-typo",
        "ld-icon"
      ],
      "dependencyGraph": {
        "ld-sidenav-navitem": [
          "ld-tooltip",
          "ld-typo",
          "ld-icon"
        ],
        "ld-tooltip": [
          "ld-sr-only",
          "ld-tooltip-popper"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-sidenav/ld-sidenav-separator/ld-sidenav-separator.tsx",
      "encapsulation": "shadow",
      "tag": "ld-sidenav-separator",
      "readme": "---\neleventyNavigation:\n  key: Sidenav Separator\n  parent: Sidenav\nlayout: layout.njk\ntitle: Sidenav Separator\npermalink: components/ld-sidenav/ld-sidenav-separator/\n---\n\n# ld-sidenav-separator\n\nThe `ld-sidenav-separator` component is a subcomponent for `ld-sidenav`.\n\nPlease refer to the [`ld-sidenav` documentation](components/ld-sidenav/#ld-sidenav-separator) for usage examples.\n\n---\n",
      "docs": "---\neleventyNavigation:\n  key: Sidenav Separator\n  parent: Sidenav\nlayout: layout.njk\ntitle: Sidenav Separator\npermalink: components/ld-sidenav/ld-sidenav-separator/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [
        {
          "event": "ldSidenavCollapsedChange",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "ldSidenavBreakpointChange",
          "target": "window",
          "capture": false,
          "passive": true
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "hr",
          "docs": ""
        }
      ],
      "dependents": [
        "ld-sidenav-scroller-internal"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "ld-sidenav-scroller-internal": [
          "ld-sidenav-separator"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-sidenav/ld-sidenav-slider/ld-sidenav-slider.tsx",
      "encapsulation": "shadow",
      "tag": "ld-sidenav-slider",
      "readme": "---\neleventyNavigation:\n  key: Sidenav Slider\n  parent: Sidenav\nlayout: layout.njk\ntitle: Sidenav Slider\npermalink: components/ld-sidenav/ld-sidenav-slider/\n---\n\n# ld-sidenav-slider\n\nThe `ld-sidenav-slider` component is a subcomponent for `ld-sidenav`.\n\nPlease refer to the [`ld-sidenav` documentation](components/ld-sidenav/#ld-sidenav-slider) for usage examples.\n\n---\n",
      "docs": "---\neleventyNavigation:\n  key: Sidenav Slider\n  parent: Sidenav\nlayout: layout.njk\ntitle: Sidenav Slider\npermalink: components/ld-sidenav/ld-sidenav-slider/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "currentSubnav",
          "type": "string",
          "mutable": true,
          "attr": "current-subnav",
          "reflectToAttr": false,
          "docs": "ID of the subnav that shall be shown on initial render.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Used in the ld-sidenav-back component to display parent nav label.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "navigateBack",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "navigateBack() => Promise<void>",
          "parameters": [],
          "docs": "Navigates back to the parent nav.",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "ldSidenavSliderChange",
          "detail": "{ id: string; label: string; }",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted on navigation (before transition ends).",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "ldSidenavNavitemTo",
          "capture": false,
          "passive": false
        },
        {
          "event": "ldSidenavCollapsedChange",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "ldSidenavBreakpointChange",
          "target": "window",
          "capture": false,
          "passive": true
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "scroll-container",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [
        "ld-sidenav-scroller-internal"
      ],
      "dependencyGraph": {
        "ld-sidenav-slider": [
          "ld-sidenav-scroller-internal"
        ],
        "ld-sidenav-scroller-internal": [
          "ld-sidenav-separator"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-sidenav/ld-sidenav-subnav/ld-sidenav-subnav.tsx",
      "encapsulation": "shadow",
      "tag": "ld-sidenav-subnav",
      "readme": "---\neleventyNavigation:\n  key: Sidenav Subnav\n  parent: Sidenav\nlayout: layout.njk\ntitle: Sidenav Subnav\npermalink: components/ld-sidenav/ld-sidenav-subnav/\n---\n\n# ld-sidenav-subnav\n\nThe `ld-sidenav-subnav` component is a subcomponent for `ld-sidenav`.\n\nPlease refer to the [`ld-sidenav` documentation](components/ld-sidenav/#ld-sidenav-subnav) for usage examples.\n\n---\n",
      "docs": "---\neleventyNavigation:\n  key: Sidenav Subnav\n  parent: Sidenav\nlayout: layout.njk\ntitle: Sidenav Subnav\npermalink: components/ld-sidenav/ld-sidenav-subnav/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Used in the ld-sidenav-back component to display parent nav label.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "scrollToTop",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "scrollToTop(smoothly?: boolean) => Promise<void>",
          "parameters": [],
          "docs": "Scrolls the subnav scroll container to the top.",
          "docsTags": []
        }
      ],
      "events": [],
      "listeners": [
        {
          "event": "ldSidenavCollapsedChange",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "ldSidenavBreakpointChange",
          "target": "window",
          "capture": false,
          "passive": true
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "scroll-container",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [
        "ld-sidenav-scroller-internal"
      ],
      "dependencyGraph": {
        "ld-sidenav-subnav": [
          "ld-sidenav-scroller-internal"
        ],
        "ld-sidenav-scroller-internal": [
          "ld-sidenav-separator"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-sidenav/ld-sidenav-toggle-outside/ld-sidenav-toggle-outside.tsx",
      "encapsulation": "shadow",
      "tag": "ld-sidenav-toggle-outside",
      "readme": "---\neleventyNavigation:\n  key: Sidenav Toggle Outsid\n  parent: Sidenav\nlayout: layout.njk\ntitle: Sidenav Toggle Outsid\npermalink: components/ld-sidenav/ld-sidenav-toggle-outside/\n---\n\n# ld-sidenav-toggle-outside\n\nThe `ld-sidenav-toggle-outside` component is supposed to be used in combination with the `ld-sidenav` component.\n\nPlease refer to the [`ld-sidenav` documentation](components/ld-sidenav/#ld-sidenav-toggle-outside) for usage examples.\n\n---\n\n",
      "docs": "---\neleventyNavigation:\n  key: Sidenav Toggle Outsid\n  parent: Sidenav\nlayout: layout.njk\ntitle: Sidenav Toggle Outsid\npermalink: components/ld-sidenav/ld-sidenav-toggle-outside/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "labelExpand",
          "type": "string",
          "mutable": false,
          "attr": "label-expand",
          "reflectToAttr": false,
          "docs": "Label to be used for the toggle button when navigation is collapsed.",
          "docsTags": [],
          "default": "'Expand side navigation'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ldTabindex",
          "type": "number",
          "mutable": false,
          "attr": "ld-tabindex",
          "reflectToAttr": false,
          "docs": "Tab index of the toggle.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "focusInner",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "focusInner() => Promise<void>",
          "parameters": [],
          "docs": "Sets focus on the radio button.",
          "docsTags": []
        }
      ],
      "events": [],
      "listeners": [
        {
          "event": "ldSidenavCollapsedChange",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "ldSidenavBreakpointChange",
          "target": "window",
          "capture": false,
          "passive": true
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "focusable",
          "docs": ""
        },
        {
          "name": "toggle",
          "docs": ""
        },
        {
          "name": "toggle-icon",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": [
        "ld-tooltip",
        "ld-icon",
        "ld-sr-only",
        "ld-typo"
      ],
      "dependencyGraph": {
        "ld-sidenav-toggle-outside": [
          "ld-tooltip",
          "ld-icon",
          "ld-sr-only",
          "ld-typo"
        ],
        "ld-tooltip": [
          "ld-sr-only",
          "ld-tooltip-popper"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-slider/ld-slider.tsx",
      "encapsulation": "shadow",
      "tag": "ld-slider",
      "readme": "---\neleventyNavigation:\n  key: Slider\n  parent: Components\nlayout: layout.njk\ntitle: Slider\npermalink: components/ld-slider/\n---\n\n<!-- <link rel=\"stylesheet\" href=\"css_components/ld-slider.css\"> -->\n\n# ld-slider\n\nThe `ld-slider` component can be used to select a single numeric value or a range of numeric values.\n\n---\n\n## Default\n\n{% example '{ \"hasPadding\": false, \"gap\": \"0.5rem\", \"styles\": { \"padding\": \"0.5rem 1rem\" } }' %}\n<ld-slider></ld-slider>\n{% endexample %}\n\n## Predefined value\n\n{% example '{ \"hasPadding\": false, \"gap\": \"0.5rem\", \"styles\": { \"padding\": \"0.5rem 1rem\" } }' %}\n<ld-slider value=\"40\"></ld-slider>\n{% endexample %}\n\n## Custom min/max values\n\n{% example '{ \"hasPadding\": false, \"gap\": \"0.5rem\", \"styles\": { \"padding\": \"0.5rem 1rem\" } }' %}\n<ld-slider min=\"-50\" max=\"50\"></ld-slider>\n{% endexample %}\n\n## Size\n\n{% example '{ \"hasPadding\": false, \"gap\": \"0.5rem\", \"styles\": { \"padding\": \"0.5rem 1rem\" } }' %}\n<ld-slider size=\"sm\"></ld-slider>\n<ld-slider></ld-slider>\n<ld-slider size=\"lg\"></ld-slider>\n{% endexample %}\n\n## Disabled\n\n{% example '{ \"hasPadding\": false, \"gap\": \"0.5rem\", \"styles\": { \"padding\": \"0.5rem 1rem\" } }' %}\n<ld-slider disabled value=\"40\"></ld-slider>\n<ld-slider aria-disabled=\"true\" value=\"40\"></ld-slider>\n{% endexample %}\n\n## Custom steps\n\n{% example '{ \"hasPadding\": false, \"gap\": \"0.5rem\", \"styles\": { \"padding\": \"0.5rem 1rem\" } }' %}\n<ld-slider step=\"5\"></ld-slider>\n{% endexample %}\n\n## Custom stops\n\nCustom stops behave just like steps, but without the need for an even distance between them.\n\n{% example '{ \"hasPadding\": false, \"gap\": \"0.5rem\", \"styles\": { \"padding\": \"0.5rem 1rem\" } }' %}\n<ld-slider stops=\"20,35,45,60,85\"></ld-slider>\n{% endexample %}\n\n<ld-notice mode=\"warning\">\n  Use the prop <code>snap-offset=\"0\"</code> to just add the labels for the custom stops without forcing them to behave like steps.\n</ld-notice>\n\n## With step/stop indicators\n\n{% example '{ \"hasPadding\": false, \"gap\": \"0.5rem\", \"styles\": { \"padding\": \"0.5rem 1rem\" } }' %}\n<ld-slider indicators step=\"10\"></ld-slider>\n<ld-slider indicators stops=\"20,35,45,60,85\"></ld-slider>\n{% endexample %}\n\n## With step/stop snapping\n\n{% example '{ \"hasPadding\": false, \"gap\": \"0.5rem\", \"styles\": { \"padding\": \"0.5rem 1rem\" } }' %}\n<ld-slider indicators snap-offset=\"2\" step=\"10\"></ld-slider>\n<ld-slider snap-offset=\"2\" stops=\"20,35,45,60,85\"></ld-slider>\n{% endexample %}\n\n<ld-notice mode=\"warning\">\n  Use the keyboard arrows <code>←</code> <code>→</code> <code>↑</code> <code>↓</code> or click on the track to select values near the snap-points.\n</ld-notice>\n\n## Multiple values\n\nYou can add 2 or more comma-separated values to the slider. This results in additional thumbs being added.\n\n{% example '{ \"hasPadding\": false, \"gap\": \"0.5rem\", \"styles\": { \"padding\": \"0.5rem 1rem\" } }' %}\n<ld-slider value=\"40,90\"></ld-slider>\n<ld-slider value=\"30,60,90\"></ld-slider>\n<ld-slider value=\"20,50,70,90\"></ld-slider>\n{% endexample %}\n\n## Swappable mode\n\nThe swappable mode allows swapping the thumbs.\n\n{% example '{ \"hasPadding\": false, \"gap\": \"0.5rem\", \"styles\": { \"padding\": \"0.5rem 1rem\" } }' %}\n<ld-slider swappable value=\"40,90\"></ld-slider>\n{% endexample %}\n\n## Hide values\n\n{% example '{ \"hasPadding\": false, \"gap\": \"0.5rem\", \"styles\": { \"padding\": \"0.5rem 1rem\" } }' %}\n<ld-slider hide-values value=\"40,90\"></ld-slider>\n{% endexample %}\n\n## Hide value labels\n\n{% example '{ \"hasPadding\": false, \"gap\": \"0.5rem\", \"styles\": { \"padding\": \"0.5rem 1rem\" } }' %}\n<ld-slider hide-value-labels value=\"40,90\"></ld-slider>\n{% endexample %}\n\n## Hide stop labels\n\n{% example '{ \"hasPadding\": false, \"gap\": \"0.5rem\", \"styles\": { \"padding\": \"0.5rem 1rem\" } }' %}\n<ld-slider hide-stop-labels indicators stops=\"20,40,60,90\" value=\"40,90\"></ld-slider>\n{% endexample %}\n\n## Units\n\n{% example '{ \"hasPadding\": false, \"gap\": \"0.5rem\", \"styles\": { \"padding\": \"0.5rem 1rem\" } }' %}\n<ld-slider unit=\"%\"></ld-slider>\n<ld-slider unit=\" px\" stops=\"24,64,96\" max=\"128\"></ld-slider>\n{% endexample %}\n\n## Negative\n\nThe negative mode highlights deselected ranges as selected and vice versa.\n\n{% example '{ \"hasPadding\": false, \"gap\": \"0.5rem\", \"styles\": { \"padding\": \"0.5rem 1rem\" } }' %}\n<ld-slider negative value=\"50\"></ld-slider>\n<ld-slider negative value=\"40,90\"></ld-slider>\n{% endexample %}\n\n## Custom width\n\nBy default, the `ld-slider` applies a width of `100%`. You can set it to any fixed width using the `width` prop.\n\n{% example '{ \"hasPadding\": false, \"gap\": \"0.5rem\", \"styles\": { \"padding\": \"0.5rem 1rem\" } }' %}\n<ld-slider width=\"20rem\"></ld-slider>\n{% endexample %}\n\n<ld-notice mode=\"warning\">\n  A relative width below <code>100%</code> is not supported, but you can work around this by wrapping the component in a container and give that container any width you like.\n  <br /><br />\n  Be aware that you also need to do this, if you want to use the <code>ld-slider</code> inside a flexbox container.\n</ld-notice>\n\n## Integration\n\n{% example '{ \"hasPadding\": false, \"gap\": \"0.5rem\", \"styles\": { \"padding\": \"0.5rem 1rem\" } }' %}\n<div class=\"flex\">\n  <ld-input id=\"from\" type=\"number\" value=\"40\"></ld-input>\n  <ld-slider id=\"slider1\" value=\"40,90\" width=\"20rem\"></ld-slider>\n  <ld-input id=\"to\" type=\"number\" value=\"90\"></ld-input>\n</div>\n\n<div class=\"flex\">\n  <ld-button id=\"minus\">-</ld-button>\n  <ld-slider id=\"slider2\" value=\"40\" width=\"20rem\"></ld-slider>\n  <ld-button id=\"plus\">+</ld-button>\n</div>\n\n<style>\n  .flex {\n    align-items: end;\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--ld-sp-8);\n    justify-content: center;\n  }\n\n  #from, #to, #minus, #plus {\n    flex: 0 0 auto;\n    margin-bottom: 1.125rem;\n    width: 3rem;\n  }\n\n  #from::part(input), #to::part(input) {\n    text-align: center;\n  }\n</style>\n\n<script>\n  const slider1 = document.getElementById('slider1')\n  const slider2 = document.getElementById('slider2')\n  const from = document.getElementById('from')\n  const to = document.getElementById('to')\n  const minus = document.getElementById('minus')\n  const plus = document.getElementById('plus')\n  const handleInput = (event) => {\n    if (!from.value || !to.value) {\n      return\n    }\n    slider1.value = [from.value, to.value].join(',')\n  }\n\n  slider1.addEventListener('ldchange', (event) => {\n    const [newFrom, newTo] = event.detail\n\n    from.value = newFrom\n    to.value = newTo\n  })\n  from.addEventListener('input', handleInput)\n  to.addEventListener('input', handleInput)\n\n  slider2.addEventListener('ldchange', (event) => {\n    const [newValue] = event.detail\n\n    if (newValue === 0) {\n      minus.disabled = true\n    } else {\n      minus.disabled = false\n    }\n\n    if (newValue === 100) {\n      plus.disabled = true\n    } else {\n      plus.disabled = false\n    }\n  })\n  minus.addEventListener('click', () => {\n    const currValue = Number.parseInt(slider2.value)\n    if (currValue <= 0) return\n    slider2.value = String(currValue - 1)\n  })\n  plus.addEventListener('click', () => {\n    const currValue = Number.parseInt(slider2.value)\n    if (currValue >= 100) return\n    slider2.value = String(currValue + 1)\n  })\n</script>\n{% endexample %}\n",
      "docs": "---\neleventyNavigation:\n  key: Slider\n  parent: Components\nlayout: layout.njk\ntitle: Slider\npermalink: components/ld-slider/\n---\n\n<!-- <link rel=\"stylesheet\" href=\"css_components/ld-slider.css\"> -->",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "indicator - Stop/step indicator div elements"
        },
        {
          "name": "part",
          "text": "input - `input` elements"
        },
        {
          "name": "part",
          "text": "label - `ld-sr-only` elements labelling an input"
        },
        {
          "name": "part",
          "text": "output - `output` elements"
        },
        {
          "name": "part",
          "text": "value-label - `div` element containing the max/min/stops values + unit"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "ariaDisabled",
          "type": "string",
          "mutable": false,
          "attr": "aria-disabled",
          "reflectToAttr": false,
          "docs": "Alternative disabled state that keeps element focusable",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disabled state of the slider",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "hideStopLabels",
          "type": "boolean",
          "mutable": false,
          "attr": "hide-stop-labels",
          "reflectToAttr": false,
          "docs": "Prevents rendering of the stop labels below the slider",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "hideValueLabels",
          "type": "boolean",
          "mutable": false,
          "attr": "hide-value-labels",
          "reflectToAttr": false,
          "docs": "Prevents rendering of the value labels below the slider",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "hideValues",
          "type": "boolean",
          "mutable": false,
          "attr": "hide-values",
          "reflectToAttr": false,
          "docs": "Makes the current values only visible on interaction",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "indicators",
          "type": "boolean",
          "mutable": false,
          "attr": "indicators",
          "reflectToAttr": false,
          "docs": "Specifies the legal number intervals",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "labelFrom",
          "type": "string",
          "mutable": false,
          "attr": "label-from",
          "reflectToAttr": false,
          "docs": "\"From\" value label (when exactly 2 values are given)",
          "docsTags": [],
          "default": "'From'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelTo",
          "type": "string",
          "mutable": false,
          "attr": "label-to",
          "reflectToAttr": false,
          "docs": "\"To\" value label (when exactly 2 values are given)",
          "docsTags": [],
          "default": "'To'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelValue",
          "type": "string",
          "mutable": false,
          "attr": "label-value",
          "reflectToAttr": false,
          "docs": "\"Value\" label (when exactly 2 values are given)",
          "docsTags": [],
          "default": "'Value'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ldTabindex",
          "type": "number",
          "mutable": false,
          "attr": "ld-tabindex",
          "reflectToAttr": false,
          "docs": "Tab index of the input(s).",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "max",
          "type": "number",
          "mutable": false,
          "attr": "max",
          "reflectToAttr": false,
          "docs": "Specifies the maximum value allowed",
          "docsTags": [],
          "default": "100",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "min",
          "type": "number",
          "mutable": false,
          "attr": "min",
          "reflectToAttr": false,
          "docs": "Specifies the minimum value allowed",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "negative",
          "type": "boolean",
          "mutable": false,
          "attr": "negative",
          "reflectToAttr": false,
          "docs": "Swap which areas are being marked as selected and deselected",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "\"lg\" | \"sm\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Size of the thumb(s).",
          "docsTags": [],
          "values": [
            {
              "value": "lg",
              "type": "string"
            },
            {
              "value": "sm",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "snapOffset",
          "type": "number",
          "mutable": false,
          "attr": "snap-offset",
          "reflectToAttr": false,
          "docs": "Offset inside which a thumb snaps to a stop point",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "step",
          "type": "number",
          "mutable": false,
          "attr": "step",
          "reflectToAttr": false,
          "docs": "Specifies the legal number intervals",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "stops",
          "type": "string",
          "mutable": false,
          "attr": "stops",
          "reflectToAttr": false,
          "docs": "Adds custom stop points to the slider (instead of steps)",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "swappable",
          "type": "boolean",
          "mutable": false,
          "attr": "swappable",
          "reflectToAttr": false,
          "docs": "Allows swapping of thumbs",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "unit",
          "type": "string",
          "mutable": false,
          "attr": "unit",
          "reflectToAttr": false,
          "docs": "Adds custom stop points to the slider (instead of steps)",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": true,
          "docs": "Specifies the default value",
          "docsTags": [],
          "default": "String(this.min)",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "width",
          "type": "string",
          "mutable": false,
          "attr": "width",
          "reflectToAttr": false,
          "docs": "Width of the slider",
          "docsTags": [],
          "default": "'100%'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "focusInner",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "focusInner() => Promise<void>",
          "parameters": [],
          "docs": "Focuses the toggle",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "ldchange",
          "detail": "number[]",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "focusable",
          "docs": ""
        },
        {
          "name": "indicator",
          "docs": "Stop/step indicator div elements"
        },
        {
          "name": "input",
          "docs": "`input` elements"
        },
        {
          "name": "label",
          "docs": "`ld-sr-only` elements labelling an input"
        },
        {
          "name": "output",
          "docs": "`output` elements"
        },
        {
          "name": "value-label",
          "docs": "`div` element containing the max/min/stops values + unit"
        }
      ],
      "dependents": [],
      "dependencies": [
        "ld-sr-only"
      ],
      "dependencyGraph": {
        "ld-slider": [
          "ld-sr-only"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-sr-live/ld-sr-live.tsx",
      "encapsulation": "shadow",
      "tag": "ld-sr-live",
      "readme": "---\neleventyNavigation:\n  key: Screen Reader Live\n  parent: Components\nlayout: layout.njk\ntitle: Screen Reader Live\npermalink: components/ld-sr-live/\n---\n\n# ld-sr-live\n\nUse the `ld-sr-live` component in your application to **conviniently trigger info and alert messages for screen readers**.\n\n---\n\n## How it works\n\nAdd the component to your application, preferably close after the opening `<body>` tag. The component is invisible as it uses the [`ld-sr-only` class](components/ld-sr-only/). It listens to two [custom events](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent) on the `window`, the `ldSrLiveInfo` and the `ldSrLiveAlert` event. As soon as one of those events reaches the `window`, the component updates the content of one of two contained [`aria-live` reagions](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions), either the one with `role=\"status\"` or the one with `role=\"alert\"`, depending on the event. For the content it uses the value of `event.detail`. The \"politeness setting\" is set to `polite`, meaning that the screen reader delays new messages until it has finished announcing the current ones. Here is an example on how you can trigger an event including an info message that will be spoken by a screen reader:\n\n```js\ndispatchEvent(new CustomEvent('ldSrLiveInfo', {\n  detail: 'Session expired. You have been logged out.'\n}))\n```\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  You should not use more than one <code>ld-sr-live</code> component in your app. It acts like a speaker to whome you give a bunch of sentences to speak, and it wouldn't make much sense to have multiple speakers talking at the same time, would it? Technically a screen reader would not speak more than one sentence at a time anyway, no matter how many <code>aria-live</code> regions you use. Though you can of course use additional <code>aria-live</code> regions, if it makes sense for your application.\n</ld-notice>\n\n## Example\n\nYou can test the component in the following example (obviously you'll need to turn on a screen reader of your choice in order to hear the announcements):\n\n{% example %}\n<style>\n#form-info,\n#form-alert {\n  display: grid;\n  grid-auto-flow: column;\n  align-items: flex-end;\n  grid-gap: 1rem;\n}\n</style>\n\n<ld-sr-live></ld-sr-live>\n\n<form id=\"form-info\">\n  <ld-label>\n    Info message\n    <ld-input id=\"input-info\"></ld-input>\n  </ld-label>\n  <ld-button type=\"submit\">Submit</ld-button>\n</form>\n\n<form id=\"form-alert\">\n  <ld-label>\n    Alert message\n    <ld-input id=\"input-alert\"></ld-input>\n  </ld-label>\n  <ld-button type=\"submit\">Submit</ld-button>\n</form>\n\n<script>\nconst formInfo = document.getElementById('form-info')\nconst inputInfo = document.getElementById('input-info')\nformInfo.addEventListener('submit', ev => {\n  ev.preventDefault()\n  dispatchEvent(new CustomEvent('ldSrLiveInfo', {\n    detail: inputInfo.value || ''\n  }))\n})\n\nconst formAlert = document.getElementById('form-alert')\nconst inputAlert = document.getElementById('input-alert')\nformAlert.addEventListener('submit', ev => {\n  ev.preventDefault()\n  dispatchEvent(new CustomEvent('ldSrLiveAlert', {\n    detail: inputAlert.value || ''\n  }))\n})\n</script>\n{% endexample %}\n\n",
      "docs": "---\neleventyNavigation:\n  key: Screen Reader Live\n  parent: Components\nlayout: layout.njk\ntitle: Screen Reader Live\npermalink: components/ld-sr-live/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [
        {
          "event": "ldSrLiveInfo",
          "target": "window",
          "capture": false,
          "passive": true
        },
        {
          "event": "ldSrLiveAlert",
          "target": "window",
          "capture": false,
          "passive": true
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "ld-sr-only"
      ],
      "dependencyGraph": {
        "ld-sr-live": [
          "ld-sr-only"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-sr-only/ld-sr-only.tsx",
      "encapsulation": "shadow",
      "tag": "ld-sr-only",
      "readme": "---\neleventyNavigation:\n  key: Screen Reader Only\n  parent: Components\nlayout: layout.njk\ntitle: Screen Reader Only\npermalink: components/ld-sr-only/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-sr-only.css\">\n\n# ld-sr-only\n\nUse `ld-sr-only` to hide an element visually without hiding it from screen readers.\n\nThe CSS class `ld-sr-only` works the same way as its Web Component counterpart, except that it can be applied to an HTML element directly while the Web Component wraps the element which needs to be only screen reader visible.\n\n---\n\n## Examples\n\n{% example '{ \"opened\": true }' %}\n<ld-sr-only>Hello screen reader</ld-sr-only>\n\n<!-- CSS component -->\n\n<span class=\"ld-sr-only\">Hello screen reader</span>\n{% endexample %}\n\n",
      "docs": "---\neleventyNavigation:\n  key: Screen Reader Only\n  parent: Components\nlayout: layout.njk\ntitle: Screen Reader Only\npermalink: components/ld-sr-only/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-sr-only.css\">",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "ld-sidenav-header",
        "ld-sidenav-toggle-outside",
        "ld-slider",
        "ld-sr-live",
        "ld-step",
        "ld-stepper",
        "ld-tooltip"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "ld-sidenav-header": [
          "ld-sr-only"
        ],
        "ld-sidenav-toggle-outside": [
          "ld-sr-only"
        ],
        "ld-slider": [
          "ld-sr-only"
        ],
        "ld-sr-live": [
          "ld-sr-only"
        ],
        "ld-step": [
          "ld-sr-only"
        ],
        "ld-stepper": [
          "ld-sr-only"
        ],
        "ld-tooltip": [
          "ld-sr-only"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-stepper/ld-step/ld-step.tsx",
      "encapsulation": "shadow",
      "tag": "ld-step",
      "readme": "---\neleventyNavigation:\n  key: Step\n  parent: Stepper\nlayout: layout.njk\ntitle: Step\npermalink: components/ld-stepper/ld-step/\n---\n\n# ld-step\n\nThe `ld-step` component is a subcomponent for `ld-stepper`.\n\nPlease refer to the [`ld-stepper` documentation](components/ld-stepper) for usage examples.\n\n---\n\n",
      "docs": "---\neleventyNavigation:\n  key: Step\n  parent: Stepper\nlayout: layout.njk\ntitle: Step\npermalink: components/ld-stepper/ld-step/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "a - actual `a` element"
        },
        {
          "name": "part",
          "text": "button - actual `button` element"
        },
        {
          "name": "part",
          "text": "description - `span` element wrapping the description text"
        },
        {
          "name": "part",
          "text": "focusable - focusable `a` or `button` element, depending on `href` prop"
        },
        {
          "name": "part",
          "text": "li - actual `li` element"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "brandColor",
          "type": "boolean",
          "mutable": false,
          "attr": "brand-color",
          "reflectToAttr": false,
          "docs": "Switch colors for brand background",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "current",
          "type": "boolean",
          "mutable": false,
          "attr": "current",
          "reflectToAttr": false,
          "docs": "Step is the current step",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "description",
          "type": "string",
          "mutable": false,
          "attr": "description",
          "reflectToAttr": false,
          "docs": "Description text to display below the step name (vertical mode only)",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Step is not clickable",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "done",
          "type": "boolean",
          "mutable": false,
          "attr": "done",
          "reflectToAttr": false,
          "docs": "Step is done",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "Link to the step (makes the step an anchor instead of a button)",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "icon",
          "type": "HTMLLdIconElement",
          "mutable": false,
          "attr": "icon",
          "reflectToAttr": false,
          "docs": "Permanently show a custom icon inside the dot",
          "docsTags": [],
          "values": [
            {
              "type": "HTMLLdIconElement"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "labelCurrent",
          "type": "string",
          "mutable": false,
          "attr": "label-current",
          "reflectToAttr": false,
          "docs": "Label for current step (scree-reader only)",
          "docsTags": [],
          "default": "'Current'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelDone",
          "type": "string",
          "mutable": false,
          "attr": "label-done",
          "reflectToAttr": false,
          "docs": "Label for step that is done (scree-reader only)",
          "docsTags": [],
          "default": "'Done'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelOptional",
          "type": "string",
          "mutable": false,
          "attr": "label-optional",
          "reflectToAttr": false,
          "docs": "Label for step that is optional (scree-reader only)",
          "docsTags": [],
          "default": "'Optional'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelSkipped",
          "type": "string",
          "mutable": false,
          "attr": "label-skipped",
          "reflectToAttr": false,
          "docs": "Label for step that was skipped (scree-reader only)",
          "docsTags": [],
          "default": "'Skipped'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelWasOptional",
          "type": "string",
          "mutable": false,
          "attr": "label-was-optional",
          "reflectToAttr": false,
          "docs": "Additional hint in label for step that is done and was optional (scree-reader only)",
          "docsTags": [],
          "default": "'was optional'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "lastActive",
          "type": "boolean",
          "mutable": false,
          "attr": "last-active",
          "reflectToAttr": false,
          "docs": "Indicates that the next step is not active",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ldTabindex",
          "type": "number",
          "mutable": false,
          "attr": "ld-tabindex",
          "reflectToAttr": false,
          "docs": "Tab index of the step",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "next",
          "type": "boolean",
          "mutable": false,
          "attr": "next",
          "reflectToAttr": false,
          "docs": "Step can be processed next",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "optional",
          "type": "boolean",
          "mutable": false,
          "attr": "optional",
          "reflectToAttr": false,
          "docs": "Step may be skipped",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "\"lg\" | \"sm\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Step size",
          "docsTags": [],
          "values": [
            {
              "value": "lg",
              "type": "string"
            },
            {
              "value": "sm",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "skipped",
          "type": "boolean",
          "mutable": false,
          "attr": "skipped",
          "reflectToAttr": false,
          "docs": "Step was skipped",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "vertical",
          "type": "boolean",
          "mutable": false,
          "attr": "vertical",
          "reflectToAttr": false,
          "docs": "Vertical layout",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "focusInner",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "focusInner() => Promise<void>",
          "parameters": [],
          "docs": "Sets focus on the step",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "ldstepselected",
          "detail": "{ index: number; label: string; }",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the focusable element is clicked and step is neither current nor disabled",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "a",
          "docs": "actual `a` element"
        },
        {
          "name": "button",
          "docs": "actual `button` element"
        },
        {
          "name": "description",
          "docs": "`span` element wrapping the description text"
        },
        {
          "name": "focusable",
          "docs": "focusable `a` or `button` element, depending on `href` prop"
        },
        {
          "name": "li",
          "docs": "actual `li` element"
        }
      ],
      "dependents": [],
      "dependencies": [
        "ld-sr-only",
        "ld-icon"
      ],
      "dependencyGraph": {
        "ld-step": [
          "ld-sr-only",
          "ld-icon"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-stepper/ld-stepper.tsx",
      "encapsulation": "shadow",
      "tag": "ld-stepper",
      "readme": "---\neleventyNavigation:\n  key: Stepper\n  parent: Components\nlayout: layout.njk\ntitle: Stepper\npermalink: components/ld-stepper/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-stepper.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-step.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-sr-only.css\">\n\n# ld-stepper\n\nThe `ld-stepper` component visualizes a process by showing all the process steps and indicating its completeness level.\n\n<ld-notice>\n  Use this component considerately on mobile devices. In many cases a <a href=\"components/ld-progress/#steps\">progress bar</a> with additional text may be sufficient.\n</ld-notice>\n\n---\n\n## Horizontal\n\n### Default\n\n{% example %}\n<ld-stepper>\n  <ld-step aria-label=\"Billing\" done></ld-step>\n  <ld-step aria-label=\"Shipping\" done></ld-step>\n  <ld-step aria-label=\"Payment\" current next last-active></ld-step>\n  <ld-step aria-label=\"Summary\" disabled></ld-step>\n  <ld-step aria-label=\"Confirmation\" disabled></ld-step>\n</ld-stepper>\n\n<!-- CSS component -->\n\n<span class=\"ld-sr-only\">Payment, step 3 of 5</span>\n<nav class=\"ld-stepper\">\n  <ol>\n    <li class=\"ld-step ld-step--done ld-step--with-icon\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button aria-label=\"Billing\" class=\"ld-step__focusable-element\" type=\"button\"></button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n    </li>\n    <li class=\"ld-step ld-step--done ld-step--with-icon\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button aria-label=\"Shipping\" class=\"ld-step__focusable-element\" type=\"button\"></button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n    </li>\n    <li class=\"ld-step ld-step--current ld-step--next ld-step--last-active\">\n      <span class=\"ld-sr-only\">Current: </span>\n      <button aria-label=\"Payment\" class=\"ld-step__focusable-element\" type=\"button\" aria-current=\"step\"></button>\n    </li>\n    <li class=\"ld-step\">\n      <button aria-label=\"Summary\" class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\"></button>\n    </li>\n    <li class=\"ld-step\">\n      <button aria-label=\"Confirmation\" class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\"></button>\n    </li>\n  </ol>\n</nav>\n{% endexample %}\n\n\n### With text\n\n{% example %}\n<ld-stepper style=\"min-width: 25rem\">\n  <ld-step done>Billing</ld-step>\n  <ld-step done>Shipping</ld-step>\n  <ld-step current next last-active>Payment</ld-step>\n  <ld-step disabled>Summary</ld-step>\n  <ld-step disabled>Confirmation</ld-step>\n</ld-stepper>\n\n<!-- CSS component -->\n\n<span class=\"ld-sr-only\">Payment, step 3 of 5</span>\n<nav class=\"ld-stepper\" style=\"min-width: 25rem\">\n  <ol>\n    <li class=\"ld-step ld-step--done ld-step--with-icon\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Billing</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n    </li>\n    <li class=\"ld-step ld-step--done ld-step--with-icon\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Shipping</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n    </li>\n    <li class=\"ld-step ld-step--current ld-step--next ld-step--last-active\">\n      <span class=\"ld-sr-only\">Current: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-current=\"step\">Payment</button>\n    </li>\n    <li class=\"ld-step\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Summary</button>\n    </li>\n    <li class=\"ld-step\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Confirmation</button>\n    </li>\n  </ol>\n</nav>\n{% endexample %}\n\n\n## Vertical\n\n### Default\n\n{% example %}\n<ld-stepper vertical>\n  <ld-step aria-label=\"Billing\" done></ld-step>\n  <ld-step aria-label=\"Shipping\" done></ld-step>\n  <ld-step aria-label=\"Payment\" current next last-active></ld-step>\n  <ld-step aria-label=\"Summary\" disabled></ld-step>\n  <ld-step aria-label=\"Confirmation\" disabled></ld-step>\n</ld-stepper>\n\n<!-- CSS component -->\n\n<span class=\"ld-sr-only\">Payment, step 3 of 5</span>\n<nav class=\"ld-stepper ld-stepper--vertical\">\n  <ol>\n    <li class=\"ld-step ld-step--done ld-step--with-icon ld-step--vertical\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button aria-label=\"Billing\" class=\"ld-step__focusable-element\" type=\"button\"></button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n    </li>\n    <li class=\"ld-step ld-step--done ld-step--with-icon ld-step--vertical\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button aria-label=\"Shipping\" class=\"ld-step__focusable-element\" type=\"button\"></button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n    </li>\n    <li class=\"ld-step ld-step--current ld-step--next ld-step--last-active ld-step--vertical\">\n      <span class=\"ld-sr-only\">Current: </span>\n      <button aria-label=\"Payment\" class=\"ld-step__focusable-element\" type=\"button\" aria-current=\"step\"></button>\n    </li>\n    <li class=\"ld-step ld-step--vertical\">\n      <button aria-label=\"Summary\" class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\"></button>\n    </li>\n    <li class=\"ld-step ld-step--vertical\">\n      <button aria-label=\"Confirmation\" class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\"></button>\n    </li>\n  </ol>\n</nav>\n{% endexample %}\n\n\n### With text\n\n{% example %}\n<ld-stepper vertical>\n  <ld-step done>Billing</ld-step>\n  <ld-step done>Shipping</ld-step>\n  <ld-step current next last-active>Payment</ld-step>\n  <ld-step disabled>Summary</ld-step>\n  <ld-step disabled>Confirmation</ld-step>\n</ld-stepper>\n\n<!-- CSS component -->\n\n<span class=\"ld-sr-only\">Payment, step 3 of 5</span>\n<nav class=\"ld-stepper ld-stepper--vertical\">\n  <ol>\n    <li class=\"ld-step ld-step--done ld-step--with-icon ld-step--vertical\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Billing</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n    </li>\n    <li class=\"ld-step ld-step--done ld-step--with-icon ld-step--vertical\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Shipping</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n    </li>\n    <li class=\"ld-step ld-step--current ld-step--next ld-step--last-active ld-step--vertical\">\n      <span class=\"ld-sr-only\">Current: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-current=\"step\">Payment</button>\n    </li>\n    <li class=\"ld-step ld-step--vertical\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Summary</button>\n    </li>\n    <li class=\"ld-step ld-step--vertical\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Confirmation</button>\n    </li>\n  </ol>\n</nav>\n{% endexample %}\n\n\n### With description\n\n{% example %}\n<ld-stepper vertical style=\"width: 17rem\">\n  <ld-step done description=\"Personal data including the billing address and optional additional information\">Billing</ld-step>\n  <ld-step done description=\"Shipping address, if it differs from the billing addres\">Shipping</ld-step>\n  <ld-step current next last-active description=\"Payment method selection\">Payment</ld-step>\n  <ld-step description=\"Summary of your articles and all the previously given information\" disabled>Summary</ld-step>\n  <ld-step description=\"Order confirmation with follow-up information\" disabled>Confirmation</ld-step>\n</ld-stepper>\n\n<!-- CSS component -->\n\n<span class=\"ld-sr-only\">Payment, step 3 of 5</span>\n<nav class=\"ld-stepper ld-stepper--vertical\" style=\"width: 17rem\">\n  <ol>\n    <li class=\"ld-step ld-step--done ld-step--with-icon ld-step--vertical\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Billing</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n      <span class=\"ld-step__description\">\n        Personal data including the billing address and optional additional information\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--done ld-step--with-icon ld-step--vertical\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Shipping</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n      <span class=\"ld-step__description\">\n        Shipping address, if it differs from the billing addres\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--current ld-step--next ld-step--last-active ld-step--vertical\">\n      <span class=\"ld-sr-only\">Current: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-current=\"step\">Payment</button>\n      <span class=\"ld-step__description\">\n        Payment method selection\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--vertical\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Summary</button>\n      <span class=\"ld-step__description\">\n        Summary of your articles and all the previously given information\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--vertical\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Confirmation</button>\n      <span class=\"ld-step__description\">\n        Order confirmation with follow-up information\n      </span>\n    </li>\n  </ol>\n</nav>\n{% endexample %}\n\n\n## Size\n\n{% example %}\n<ld-stepper size=\"sm\" vertical style=\"width: 15rem\">\n  <ld-step done description=\"Personal data including the billing address and optional additional information\">Billing</ld-step>\n  <ld-step done description=\"Shipping address, if it differs from the billing addres\">Shipping</ld-step>\n  <ld-step current next last-active description=\"Payment method selection\">Payment</ld-step>\n  <ld-step description=\"Summary of your articles and all the previously given information\" disabled>Summary</ld-step>\n  <ld-step description=\"Order confirmation with follow-up information\" disabled>Confirmation</ld-step>\n</ld-stepper>\n\n<ld-stepper vertical style=\"width: 17rem\">\n  <ld-step done description=\"Personal data including the billing address and optional additional information\">Billing</ld-step>\n  <ld-step done description=\"Shipping address, if it differs from the billing addres\">Shipping</ld-step>\n  <ld-step current next last-active description=\"Payment method selection\">Payment</ld-step>\n  <ld-step description=\"Summary of your articles and all the previously given information\" disabled>Summary</ld-step>\n  <ld-step description=\"Order confirmation with follow-up information\" disabled>Confirmation</ld-step>\n</ld-stepper>\n\n<ld-stepper size=\"lg\" vertical style=\"width: 19rem\">\n  <ld-step done description=\"Personal data including the billing address and optional additional information\">Billing</ld-step>\n  <ld-step done description=\"Shipping address, if it differs from the billing addres\">Shipping</ld-step>\n  <ld-step current next last-active description=\"Payment method selection\">Payment</ld-step>\n  <ld-step description=\"Summary of your articles and all the previously given information\" disabled>Summary</ld-step>\n  <ld-step description=\"Order confirmation with follow-up information\" disabled>Confirmation</ld-step>\n</ld-stepper>\n\n<!-- CSS component -->\n\n<span class=\"ld-sr-only\">Payment, step 3 of 5</span>\n<nav class=\"ld-stepper ld-stepper--sm ld-stepper--vertical\" style=\"width: 15rem\">\n  <ol>\n    <li class=\"ld-step ld-step--done ld-step--sm ld-step--with-icon ld-step--vertical\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Billing</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n      <span class=\"ld-step__description\">\n        Personal data including the billing address and optional additional information\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--done ld-step--sm ld-step--with-icon ld-step--vertical\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Shipping</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n      <span class=\"ld-step__description\">\n        Shipping address, if it differs from the billing addres\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--current ld-step--next ld-step--last-active ld-step--sm ld-step--vertical\">\n      <span class=\"ld-sr-only\">Current: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-current=\"step\">Payment</button>\n      <span class=\"ld-step__description\">\n        Payment method selection\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--sm ld-step--vertical\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Summary</button>\n      <span class=\"ld-step__description\">\n        Summary of your articles and all the previously given information\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--sm ld-step--vertical\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Confirmation</button>\n      <span class=\"ld-step__description\">\n        Order confirmation with follow-up information\n      </span>\n    </li>\n  </ol>\n</nav>\n\n<span class=\"ld-sr-only\">Payment, step 3 of 5</span>\n<nav class=\"ld-stepper ld-stepper--vertical\" style=\"width: 17rem\">\n  <ol>\n    <li class=\"ld-step ld-step--done ld-step--with-icon ld-step--vertical\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Billing</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n      <span class=\"ld-step__description\">\n        Personal data including the billing address and optional additional information\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--done ld-step--with-icon ld-step--vertical\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Shipping</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n      <span class=\"ld-step__description\">\n        Shipping address, if it differs from the billing addres\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--current ld-step--next ld-step--last-active ld-step--vertical\">\n      <span class=\"ld-sr-only\">Current: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-current=\"step\">Payment</button>\n      <span class=\"ld-step__description\">\n        Payment method selection\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--vertical\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Summary</button>\n      <span class=\"ld-step__description\">\n        Summary of your articles and all the previously given information\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--vertical\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Confirmation</button>\n      <span class=\"ld-step__description\">\n        Order confirmation with follow-up information\n      </span>\n    </li>\n  </ol>\n</nav>\n\n<span class=\"ld-sr-only\">Payment, step 3 of 5</span>\n<nav class=\"ld-stepper ld-stepper--lg ld-stepper--vertical\" style=\"width: 19rem\">\n  <ol>\n    <li class=\"ld-step ld-step--done ld-step--lg ld-step--with-icon ld-step--vertical\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Billing</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n      <span class=\"ld-step__description\">\n        Personal data including the billing address and optional additional information\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--done ld-step--lg ld-step--with-icon ld-step--vertical\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Shipping</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n      <span class=\"ld-step__description\">\n        Shipping address, if it differs from the billing addres\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--current ld-step--next ld-step--last-active ld-step--lg ld-step--vertical\">\n      <span class=\"ld-sr-only\">Current: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-current=\"step\">Payment</button>\n      <span class=\"ld-step__description\">\n        Payment method selection\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--lg ld-step--vertical\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Summary</button>\n      <span class=\"ld-step__description\">\n        Summary of your articles and all the previously given information\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--lg ld-step--vertical\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Confirmation</button>\n      <span class=\"ld-step__description\">\n        Order confirmation with follow-up information\n      </span>\n    </li>\n  </ol>\n</nav>\n{% endexample %}\n\n\n## On brand color\n\n{% example '{ \"background\": \"brand\", \"hasBorder\": false }' %}\n<ld-stepper brand-color>\n  <ld-step done>Billing</ld-step>\n  <ld-step done>Shipping</ld-step>\n  <ld-step current next last-active>Payment</ld-step>\n  <ld-step disabled>Summary</ld-step>\n  <ld-step disabled>Confirmation</ld-step>\n</ld-stepper>\n\n<ld-stepper brand-color vertical style=\"width: 17rem\">\n  <ld-step done description=\"Personal data including the billing address and optional additional information\">Billing</ld-step>\n  <ld-step done description=\"Shipping address, if it differs from the billing addres\">Shipping</ld-step>\n  <ld-step current next last-active description=\"Payment method selection\">Payment</ld-step>\n  <ld-step description=\"Summary of your articles and all the previously given information\" disabled>Summary</ld-step>\n  <ld-step description=\"Order confirmation with follow-up information\" disabled>Confirmation</ld-step>\n</ld-stepper>\n\n<!-- CSS component -->\n\n<span class=\"ld-sr-only\">Payment, step 3 of 5</span>\n<nav class=\"ld-stepper\">\n  <ol>\n    <li class=\"ld-step ld-step--brand-color ld-step--done ld-step--with-icon\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Billing</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n    </li>\n    <li class=\"ld-step ld-step--brand-color ld-step--done ld-step--with-icon\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Shipping</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n    </li>\n    <li class=\"ld-step ld-step--brand-color ld-step--current ld-step--next ld-step--last-active\">\n      <span class=\"ld-sr-only\">Current: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-current=\"step\">Payment</button>\n    </li>\n    <li class=\"ld-step ld-step--brand-color\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Summary</button>\n    </li>\n    <li class=\"ld-step ld-step--brand-color\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Confirmation</button>\n    </li>\n  </ol>\n</nav>\n\n<span class=\"ld-sr-only\">Payment, step 3 of 5</span>\n<nav class=\"ld-stepper ld-stepper--vertical\" style=\"width: 17rem\">\n  <ol>\n    <li class=\"ld-step ld-step--brand-color ld-step--done ld-step--with-icon ld-step--vertical\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Billing</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n      <span class=\"ld-step__description\">\n        Personal data including the billing address and optional additional information\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--brand-color ld-step--done ld-step--with-icon ld-step--vertical\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Shipping</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n      <span class=\"ld-step__description\">\n        Shipping address, if it differs from the billing addres\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--brand-color ld-step--current ld-step--next ld-step--last-active ld-step--vertical\">\n      <span class=\"ld-sr-only\">Current: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-current=\"step\">Payment</button>\n      <span class=\"ld-step__description\">\n        Payment method selection\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--brand-color ld-step--vertical\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Summary</button>\n      <span class=\"ld-step__description\">\n        Summary of your articles and all the previously given information\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--brand-color ld-step--vertical\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Confirmation</button>\n      <span class=\"ld-step__description\">\n        Order confirmation with follow-up information\n      </span>\n    </li>\n  </ol>\n</nav>\n{% endexample %}\n\n\n## Fit content\n\n{% example %}\n<ld-stepper fit-content>\n  <ld-step done>Billing</ld-step>\n  <ld-step done>Shipping</ld-step>\n  <ld-step current next last-active>Payment</ld-step>\n  <ld-step disabled>Summary</ld-step>\n  <ld-step disabled>Confirmation</ld-step>\n</ld-stepper>\n\n<ld-stepper fit-content vertical style=\"width: 17rem\">\n  <ld-step done description=\"Personal data including the billing address and optional additional information\">Billing</ld-step>\n  <ld-step done description=\"Shipping address, if it differs from the billing addres\">Shipping</ld-step>\n  <ld-step current next last-active description=\"Payment method selection\">Payment</ld-step>\n  <ld-step description=\"Summary of your articles and all the previously given information\" disabled>Summary</ld-step>\n  <ld-step description=\"Order confirmation with follow-up information\" disabled>Confirmation</ld-step>\n</ld-stepper>\n\n<!-- CSS component -->\n\n<span class=\"ld-sr-only\">Payment, step 3 of 5</span>\n<nav class=\"ld-stepper ld-stepper--fit-content\">\n  <ol>\n    <li class=\"ld-step ld-step--done ld-step--with-icon\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">\n        Billing\n      </button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n    </li>\n    <li class=\"ld-step ld-step--done ld-step--with-icon\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Shipping</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n    </li>\n    <li class=\"ld-step ld-step--current ld-step--next ld-step--last-active\">\n      <span class=\"ld-sr-only\">Current: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-current=\"step\">Payment</button>\n    </li>\n    <li class=\"ld-step\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Summary</button>\n    </li>\n    <li class=\"ld-step\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Confirmation</button>\n    </li>\n  </ol>\n</nav>\n\n<span class=\"ld-sr-only\">Payment, step 3 of 5</span>\n<nav class=\"ld-stepper ld-stepper--fit-content ld-stepper--vertical\" style=\"width: 17rem\">\n  <ol>\n    <li class=\"ld-step ld-step--done ld-step--with-icon ld-step--vertical\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Billing</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n      <span class=\"ld-step__description\">\n        Personal data including the billing address and optional additional information\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--done ld-step--with-icon ld-step--vertical\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Shipping</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n      <span class=\"ld-step__description\">\n        Shipping address, if it differs from the billing addres\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--current ld-step--next ld-step--last-active ld-step--vertical\">\n      <span class=\"ld-sr-only\">Current: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-current=\"step\">Payment</button>\n      <span class=\"ld-step__description\">\n        Payment method selection\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--vertical\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Summary</button>\n      <span class=\"ld-step__description\">\n        Summary of your articles and all the previously given information\n      </span>\n    </li>\n    <li class=\"ld-step ld-step--vertical\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Confirmation</button>\n      <span class=\"ld-step__description\">\n        Order confirmation with follow-up information\n      </span>\n    </li>\n  </ol>\n</nav>\n{% endexample %}\n\n\n## With custom icons\n\n{% example %}\n<ld-stepper style=\"min-width: 25rem\">\n  <ld-step done icon=\"documents\">Billing</ld-step>\n  <ld-step done icon=\"truck\">Shipping</ld-step>\n  <ld-step current next last-active icon=\"money\">Payment</ld-step>\n  <ld-step icon=\"visibility\" disabled>Summary</ld-step>\n  <ld-step icon=\"favorite\" disabled>Confirmation</ld-step>\n</ld-stepper>\n\n<!-- CSS component -->\n\n<span class=\"ld-sr-only\">Payment, step 3 of 5</span>\n<nav class=\"ld-stepper\" style=\"min-width: 25rem\">\n  <ol>\n    <li class=\"ld-step ld-step--custom-icon ld-step--done ld-step--with-icon\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">\n        Billing\n      </button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.5 2.1917C13.7855 2.0732 12.9568 2 12 2c-2.867 0-4.7477.3288-5.8305.6093C5.436 2.7993 5 3.4785 5 4.2361v15.5278c0 .7576.4361 1.4368 1.1695 1.6268C7.2522 21.6712 9.1329 22 12 22c2.8671 0 4.7477-.3288 5.8305-.6093.7334-.19 1.1695-.8692 1.1695-1.6268V7.0719a.8783.8783 0 0 0-.0118-.143 10.458 10.458 0 0 0-.0807-.4289H15a.5.5 0 0 1-.5-.5V2.1917ZM18.6369 5.5H15.5V2.403a9.682 9.682 0 0 1 .4584.1314c1.3917.437 2.2168 1.6014 2.6785 2.9656ZM7 9.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 .5.5v.5a.5.5 0 0 1-.5.5h-9A.5.5 0 0 1 7 10v-.5Zm0 3a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 .5.5v.5a.5.5 0 0 1-.5.5h-9A.5.5 0 0 1 7 13v-.5Zm4.5 2.5h-4a.5.5 0 0 0-.5.5v.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-.5a.5.5 0 0 0-.5-.5Z\" fill=\"currentcolor\"/></svg>\n    </li>\n    <li class=\"ld-step ld-step--custom-icon ld-step--done ld-step--with-icon\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Shipping</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.2037 5.2185C3.2229 5.4665 2 7.2216 2 9.2178V17c0 .5523.4477 1 1 1h1v-.0008C4 16.3441 5.3428 15 7 15s3 1.3441 3 2.9992V18h4v-.0008C14 16.3441 15.3428 15 17 15s3 1.3441 3 2.9992V18h1c.5523 0 1-.4477 1-1v-2.1691a3 3 0 0 0-.4275-1.5434l-1.6986-2.831A3 3 0 0 0 17.3014 9H16V7.2443c0-.7985-.482-1.5082-1.2599-1.6883C13.6247 5.2977 11.7439 5 9 5c-1.5272 0-2.787.0922-3.7963.2185ZM16 10.6a.1.1 0 0 1 .1-.1h1.6756c.3666 0 .7038.2006.8788.5227l1.2654 2.3296a.1.1 0 0 1-.0879.1477H16.1a.1.1 0 0 1-.1-.1v-2.8ZM7 20c1.1048 0 2-.8961 2-2.0006C9 16.8961 8.1048 16 7 16s-2 .8961-2 1.9994C5 19.1039 5.8952 20 7 20Zm10 0c1.1048 0 2-.8961 2-2.0006C19 16.8961 18.1048 16 17 16s-2 .8961-2 1.9994C15 19.1039 15.8952 20 17 20Z\" fill=\"currentcolor\"/></svg>\n    </li>\n    <li class=\"ld-step ld-step--current ld-step--next ld-step--last-active ld-step--custom-icon ld-step--with-icon\">\n      <span class=\"ld-sr-only\">Current: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-current=\"step\">Payment</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.3669 5C18.2625 5 19 4.3226 19 3.5S18.2625 2 17.3669 2H6.6331C5.7375 2 5 2.6774 5 3.5S5.7375 5 6.6331 5H17.367Zm-2.523 3.1363c.1-.1936.1561-.4095.1561-.6363 0-.8226-.7375-1.5-1.6331-1.5H2.6331C1.7375 6 1 6.6774 1 7.5S1.7375 9 2.6331 9h9.9405a7.2042 7.2042 0 0 1 2.2703-.8637ZM9.5398 18c.4892 1.1923 1.2869 2.2254 2.2939 3H4.6331C3.7375 21 3 20.3226 3 19.5S3.7375 18 4.6331 18h4.9067Zm-.4324-4A7.2951 7.2951 0 0 0 9 15.25c0 .6034.0737 1.1896.2126 1.75H5.6331C4.7375 17 4 16.3226 4 15.5S4.7375 14 5.6331 14h3.4743Zm2.1427-4c-.8591.8184-1.5176 1.8455-1.8941 3H5.633C4.7375 13 4 12.3226 4 11.5S4.7375 10 5.6331 10h5.617Z\" fill=\"currentcolor\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10 15.25C10 11.7984 12.7984 9 16.25 9s6.25 2.7984 6.25 6.25-2.7984 6.25-6.25 6.25S10 18.7016 10 15.25Zm4.6592 2.5832c.2621.1344.5368.2288.8239.2832L15.4082 19h.427c.0874 0 .1586-.0329.2135-.0987a.3722.3722 0 0 0 .0936-.2144l.045-.5362c.2896-.0258.5468-.0958.7715-.2102.2247-.1173.4145-.2674.5693-.4504.1548-.183.2722-.3932.352-.6306.08-.2402.1199-.4961.1199-.7678 0-.1802-.02-.3403-.0599-.4804-.04-.143-.0962-.2689-.1686-.3775a1.2114 1.2114 0 0 0-.2509-.2831 1.7796 1.7796 0 0 0-.3109-.2102 2.446 2.446 0 0 0-.3445-.163 6.0762 6.0762 0 0 0-.3596-.133l.1311-1.5228c.0774.0258.1498.0558.2172.0901.0699.0343.1349.0672.1948.0987.0599.0286.1148.0529.1648.0729.0499.02.0949.03.1348.03.0599 0 .1111-.0157.1536-.0472.0449-.0343.0886-.0872.1311-.1587l.2846-.4761c-.1348-.1459-.2996-.2817-.4944-.4075-.1947-.1287-.4269-.2217-.6966-.2789l.0749-.845h-.427c-.0874 0-.1585.0329-.2135.0987a.3722.3722 0 0 0-.0936.2144l-.0412.4762c-.2896.0171-.5468.0815-.7715.193-.2247.1087-.4145.2488-.5693.4204a1.8246 1.8246 0 0 0-.3483.5791 1.8773 1.8773 0 0 0-.1199.6606c0 .3059.0437.5605.1311.7635.0899.203.206.3703.3483.5019.1424.1315.3022.2359.4794.3131.1773.0772.3558.1444.5356.2016l-.1386 1.6215c-.1123-.0343-.2122-.0772-.2996-.1287a6.5179 6.5179 0 0 1-.2434-.1587 2.0909 2.0909 0 0 0-.2023-.1287c-.0624-.0372-.1236-.0558-.1835-.0558-.0574 0-.1124.0172-.1648.0515a.3695.3695 0 0 0-.1198.1201L14 17.3399c.1798.1916.3995.3561.6592.4933Zm2.1011-1.9345c.0924.0972.1386.2273.1386.3903 0 .4375-.206.6978-.618.7807l.1198-1.4155c.1499.0657.2697.1472.3596.2445Zm-1.3109-1.9732c-.0923-.1058-.1385-.2431-.1385-.4118a.645.645 0 0 1 .0337-.2102.5274.5274 0 0 1 .1048-.1845c.05-.0543.1136-.1001.191-.1372.0799-.0401.1773-.0701.2922-.0901l-.1124 1.2954c-.1523-.0715-.2759-.1587-.3708-.2616Z\" fill=\"currentcolor\"/></svg>\n    </li>\n    <li class=\"ld-step ld-step--custom-icon ld-step--with-icon\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Summary</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 5.8081c4.7545 0 9.3313 5.3941 9.5241 5.6232l.4759.5688-.4759.5687c-.1928.2291-4.7696 5.6232-9.5241 5.6232-4.7545 0-9.3313-5.3941-9.5241-5.6232L2 12.0001l.4759-.5688C2.6687 11.2022 7.2455 5.8081 12 5.8081Zm-3.5383 6.192c0 1.9513 1.587 3.5382 3.5383 3.5382s3.5383-1.5869 3.5383-3.5382c0-1.9514-1.587-3.5383-3.5383-3.5383s-3.5383 1.5869-3.5383 3.5383ZM13.7692 12c0 .9771-.7921 1.7692-1.7692 1.7692-.977 0-1.7691-.7921-1.7691-1.7692 0-.977.7921-1.7691 1.7691-1.7691.9771 0 1.7692.7921 1.7692 1.7691Z\" fill=\"currentcolor\"/></svg>\n    </li>\n    <li class=\"ld-step ld-step--custom-icon ld-step--with-icon\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Confirmation</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M22 9.882V8.2404a10.6878 10.6878 0 0 0-.238-1.1267c-.724-2.239-2.2119-3.6303-4.4818-4.0202-1.9228-.3318-3.6209.3176-4.9747 1.6997-.1695.1731-.4482.1816-.6136.0045-.1415-.1514-.2795-.297-.4374-.436C8.1226 1.585 3.0949 3.278 2.1869 7.4215a7.139 7.139 0 0 0-.0945 2.7677 7.0721 7.0721 0 0 0 .9645 2.5865 17.8018 17.8018 0 0 0 3.2058 3.852c1.2789 1.1771 2.7123 2.3355 4.1789 3.3535.9368.6502 2.1741.6426 3.1134-.004 1.9495-1.342 3.8433-2.8849 5.4451-4.5952.9932-1.0189 1.8125-2.2017 2.4239-3.499a6.2782 6.2782 0 0 0 .54-1.888.6093.6093 0 0 1 .036-.113Z\" fill=\"currentcolor\"/></svg>\n    </li>\n  </ol>\n</nav>\n{% endexample %}\n\n\n## With optional steps\n\n{% example %}\n<ld-stepper style=\"min-width: 25rem\">\n  <ld-step done>Part 1</ld-step>\n  <ld-step optional skipped>Part 2<br />(can be skipped)</ld-step>\n  <ld-step done optional>Part 3<br />(can be skipped)</ld-step>\n  <ld-step current next last-active optional>Part 4<br />(can be skipped)</ld-step>\n  <ld-step optional>Part 5<br />(can be skipped)</ld-step>\n</ld-stepper>\n\n<!-- CSS component -->\n\n<span class=\"ld-sr-only\">Part 4<br />(can be skipped), step 4 of 5</span>\n<nav class=\"ld-stepper\" style=\"min-width: 25rem\">\n  <ol>\n    <li class=\"ld-step ld-step--done ld-step--with-icon\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Part 1</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n    </li>\n    <li class=\"ld-step ld-step--skipped ld-step--optional\">\n      <span class=\"ld-sr-only\">Skipped: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Part 2<br />(can be skipped)</button>\n    </li>\n    <li class=\"ld-step ld-step--done ld-step--optional ld-step--with-icon\">\n      <span class=\"ld-sr-only\">Completed (was optional): </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\">Part 3<br />(can be skipped)</button>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n    </li>\n    <li class=\"ld-step ld-step--current ld-step--next ld-step--last-active ld-step--optional\">\n      <span class=\"ld-sr-only\">Current: </span>\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-current=\"step\">Part 4<br />(can be skipped)</button>\n    </li>\n    <li class=\"ld-step ld-step--optional\">\n      <button class=\"ld-step__focusable-element\" type=\"button\" aria-disabled=\"true\">Part 5<br />(can be skipped)</button>\n    </li>\n  </ol>\n</nav>\n{% endexample %}\n\n\n## With links\n\n{% example %}\n<ld-stepper style=\"min-width: 25rem\">\n  <ld-step href=\"components/ld-stepper/#billing\" done>Billing</ld-step>\n  <ld-step href=\"components/ld-stepper/#shipping\" done>Shipping</ld-step>\n  <ld-step href=\"components/ld-stepper/#payment\" current next last-active>Payment</ld-step>\n  <ld-step href=\"components/ld-stepper/#summary\" disabled>Summary</ld-step>\n  <ld-step href=\"components/ld-stepper/#confirmation\" disabled>Confirmation</ld-step>\n</ld-stepper>\n\n<!-- CSS component -->\n\n<span class=\"ld-sr-only\">Payment, step 3 of 5</span>\n<nav class=\"ld-stepper\" style=\"min-width: 25rem\">\n  <ol>\n    <li class=\"ld-step ld-step--done ld-step--with-icon\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <a class=\"ld-step__focusable-element\" href=\"components/ld-stepper/#billing\">Billing</a>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n    </li>\n    <li class=\"ld-step ld-step--done ld-step--with-icon\">\n      <span class=\"ld-sr-only\">Completed: </span>\n      <a class=\"ld-step__focusable-element\" href=\"components/ld-stepper/#shipping\">Shipping</a>\n      <svg class=\"ld-icon\" role=\"presentation\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 4-6.592 6L2 6.6396\" stroke=\"currentcolor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n    </li>\n    <li class=\"ld-step ld-step--current ld-step--next ld-step--last-active\">\n      <span class=\"ld-sr-only\">Current: </span>\n      <a class=\"ld-step__focusable-element\" aria-current=\"step\">Payment</a>\n    </li>\n    <li class=\"ld-step\">\n      <a class=\"ld-step__focusable-element\" aria-disabled=\"true\">Summary</a>\n    </li>\n    <li class=\"ld-step\">\n      <a class=\"ld-step__focusable-element\" aria-disabled=\"true\">Confirmation</a>\n    </li>\n  </ol>\n</nav>\n{% endexample %}\n\n\n## Interaction\n\n{% example %}\n<ld-stepper id=\"stepper\" style=\"min-width: 25rem\">\n  <ld-step done>Billing</ld-step>\n  <ld-step done>Shipping</ld-step>\n  <ld-step current next last-active>Payment</ld-step>\n  <ld-step disabled>Summary</ld-step>\n  <ld-step disabled>Confirmation</ld-step>\n</ld-stepper>\n\n<div id=\"step-content\"></div>\n\n<script>\n  const ldStepper = document.getElementById('stepper')\n  const contentDiv = document.getElementById('step-content')\n\n  ldStepper.addEventListener(\"ldstepselected\", (event) => {\n    console.log(event)\n    ldStepper.querySelectorAll('ld-step').forEach((ldStep, index) => {\n      if (index === event.detail.index) {\n        ldStep.current = true\n      } else if (ldStep.current) {\n        ldStep.current = false\n      }\n    })\n    contentDiv.textContent = `You are now in step ${event.detail.index + 1}: ${event.detail.label}`\n  })\n</script>\n{% endexample %}\n",
      "docs": "---\neleventyNavigation:\n  key: Stepper\n  parent: Components\nlayout: layout.njk\ntitle: Stepper\npermalink: components/ld-stepper/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-stepper.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-step.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-sr-only.css\">",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "list - `ol` element wrapping the slot"
        },
        {
          "name": "part",
          "text": "label - `ld-sr-only` element containing the label"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "brandColor",
          "type": "boolean",
          "mutable": false,
          "attr": "brand-color",
          "reflectToAttr": false,
          "docs": "Switch colors for brand background.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "fitContent",
          "type": "boolean",
          "mutable": false,
          "attr": "fit-content",
          "reflectToAttr": false,
          "docs": "Indicates whether the steps should be evenly distributed or fit to their content",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "labelSummaryTemplate",
          "type": "string",
          "mutable": false,
          "attr": "label-summary-template",
          "reflectToAttr": false,
          "docs": "Step summary template for the screen-reader label, containing the index of the current step and the overall number of steps",
          "docsTags": [],
          "default": "'step $1 of $2'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "labelTemplate",
          "type": "string",
          "mutable": false,
          "attr": "label-template",
          "reflectToAttr": false,
          "docs": "Template for the screen-reader label, containing the label of the current step and the steps summary",
          "docsTags": [],
          "default": "'$1, $2'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "HTMLLdStepElement",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Step size",
          "docsTags": [],
          "values": [
            {
              "type": "HTMLLdStepElement"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "vertical",
          "type": "boolean",
          "mutable": false,
          "attr": "vertical",
          "reflectToAttr": false,
          "docs": "Vertical layout",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "label",
          "docs": "`ld-sr-only` element containing the label"
        },
        {
          "name": "list",
          "docs": "`ol` element wrapping the slot"
        }
      ],
      "dependents": [],
      "dependencies": [
        "ld-sr-only"
      ],
      "dependencyGraph": {
        "ld-stepper": [
          "ld-sr-only"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-switch/ld-switch.tsx",
      "encapsulation": "shadow",
      "tag": "ld-switch",
      "readme": "---\neleventyNavigation:\n  key: Switch\n  parent: Components\nlayout: layout.njk\ntitle: Switch\npermalink: components/ld-switch/\ntags:\n  - toggle\n  - radio group\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-switch.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-switch-item.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n\n# ld-switch\n\nA switch is a collection of two or more items that behaves similar to a radio button group or toggle. It can have a single or no item selected at a time.\n\n---\n\n## Default\n \n{% example %}\n<ld-switch legend=\"Chemical compound\" name=\"food-type-web-component-default\" required>\n  <ld-switch-item value=\"water\" checked>Water</ld-switch-item>\n  <ld-switch-item value=\"alcohol\">Alcohol</ld-switch-item>\n</ld-switch>\n\n<!-- CSS component -->\n\n<fieldset class=\"ld-switch\">\n  <legend>Chemical compound</legend> \n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-default\" \n           type=\"radio\" \n           value=\"water\" \n           checked />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Water</span>\n    </span>\n  </label>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-default\"\n           type=\"radio\"\n           value=\"alcohol\" />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Alcohol</span>\n    </span>\n  </label>\n</fieldset>\n{% endexample %}\n\n## Fit content\n\nBy default all switch items take up the same amout of horizontal space. However, you can make each switch item take up as little space as its content requires by applying the `fit-content` prop.\n\n{% example %}\n<ld-switch legend=\"Chemical compound\" name=\"food-type-web-component-fit-content\" fit-content>\n  <ld-switch-item value=\"diamorphine\" checked>Diamorphine</ld-switch-item>\n  <ld-switch-item value=\"alcohol\">Lysergic acid diethylamide</ld-switch-item>\n</ld-switch>\n\n<!-- CSS component -->\n\n<fieldset class=\"ld-switch ld-switch--fit-content\">\n  <legend>Chemical compound</legend>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-fit-content\"\n           type=\"radio\"\n           value=\"diamorphine\"\n           checked />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Diamorphine</span>\n    </span>\n  </label>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-fit-content\"\n           type=\"radio\"\n           value=\"lsd\" />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Lysergic acid diethylamide</span>\n    </span>\n  </label>\n</fieldset>\n{% endexample %}\n\n## Size\n\n{% example %}\n<ld-switch legend=\"Chemical compound\" name=\"food-type-web-component-size-sm\" size=\"sm\">\n  <ld-switch-item value=\"water\" checked>Water</ld-switch-item>\n  <ld-switch-item value=\"alcohol\">Alcohol</ld-switch-item>\n</ld-switch>\n\n<ld-switch legend=\"Chemical compound\" name=\"food-type-web-component-size-md\" size=\"md\">\n  <ld-switch-item value=\"water\" checked>Water</ld-switch-item>\n  <ld-switch-item value=\"alcohol\">Alcohol</ld-switch-item>\n</ld-switch>\n\n<ld-switch legend=\"Chemical compound\" name=\"food-type-web-component-size-lg\" size=\"lg\">\n  <ld-switch-item value=\"water\" checked>Water</ld-switch-item>\n  <ld-switch-item value=\"alcohol\">Alcohol</ld-switch-item>\n</ld-switch>\n\n<!-- CSS component -->\n\n<fieldset class=\"ld-switch ld-switch--sm\">\n  <legend>Chemical compound</legend> \n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-size-sm\" type=\"radio\" value=\"water\" checked />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Water</span>\n    </span>\n  </label>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-size-sm\" type=\"radio\" value=\"alcohol\" />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Alcohol</span>\n    </span>\n  </label>\n</fieldset>\n\n<fieldset class=\"ld-switch\">\n  <legend>Chemical compound</legend>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-size-md\" type=\"radio\" value=\"water\" checked />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Water</span>\n    </span>\n  </label>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-size-md\" type=\"radio\" value=\"alcohol\" />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Alcohol</span>\n    </span>\n  </label>\n</fieldset>\n\n<fieldset class=\"ld-switch ld-switch--lg\">\n  <legend>Chemical compound</legend>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-size-lg\"\n           type=\"radio\"\n           value=\"water\"\n           checked />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Water</span>\n    </span>\n  </label>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-size-lg\"\n           type=\"radio\"\n           value=\"alcohol\" />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Alcohol</span>\n    </span>\n  </label>\n</fieldset>\n{% endexample %}\n\n## With icon\n\n{% example %}\n<ld-switch legend=\"Chemical compound\" name=\"food-type-web-component-icon-sm\" size=\"sm\">\n  <ld-switch-item value=\"water\" checked>\n    Water\n    <ld-icon slot=\"icon-end\" name=\"placeholder\" size=\"sm\"></ld-icon>\n  </ld-switch-item>\n  <ld-switch-item value=\"alcohol\">\n    Alcohol\n    <ld-icon slot=\"icon-end\" name=\"placeholder\" size=\"sm\"></ld-icon>\n  </ld-switch-item>\n</ld-switch>\n\n<ld-switch legend=\"Chemical compound\" name=\"food-type-web-component-icon-md\" size=\"md\">\n  <ld-switch-item value=\"water\" checked>\n    <ld-icon slot=\"icon-start\" name=\"placeholder\" aria-label=\"Text\"></ld-icon>\n  </ld-switch-item>\n  <ld-switch-item value=\"alcohol\">\n    <ld-icon slot=\"icon-start\" name=\"placeholder\" aria-label=\"Text\"></ld-icon>\n  </ld-switch-item>\n</ld-switch>\n\n<ld-switch legend=\"Chemical compound\" name=\"food-type-web-component-icon-lg\" size=\"lg\">\n  <ld-switch-item value=\"water\" checked>\n    <ld-icon slot=\"icon-start\" name=\"placeholder\" size=\"lg\"></ld-icon>\n    Water\n  </ld-switch-item>\n  <ld-switch-item value=\"alcohol\">\n    <ld-icon slot=\"icon-start\" name=\"placeholder\" size=\"lg\"></ld-icon>\n    Alcohol\n  </ld-switch-item>\n</ld-switch>\n\n<!-- CSS component -->\n\n<fieldset class=\"ld-switch ld-switch--sm\">\n  <legend>Chemical compound</legend>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-icon-sm\"\n           type=\"radio\"\n           value=\"water\"\n           checked />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Water</span>\n      <span class=\"ld-icon ld-icon--sm\">\n        <svg viewBox=\"0 0 24 24\" fill=\"none\">\n          <title>Text</title>\n          <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n          <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        </svg>\n      </span>\n    </span>\n  </label>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-icon-sm\"\n           type=\"radio\"\n           value=\"alcohol\" />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Alcohol</span>\n      <span class=\"ld-icon ld-icon--sm\">\n        <svg viewBox=\"0 0 24 24\" fill=\"none\">\n          <title>Text</title>\n          <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n          <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        </svg>\n      </span>\n    </span>\n  </label>\n</fieldset>\n\n<fieldset class=\"ld-switch\">\n  <legend>Chemical compound</legend>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-icon-md\"\n           type=\"radio\"\n           value=\"water\"\n           checked />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-icon\">\n        <svg viewBox=\"0 0 24 24\" fill=\"none\">\n          <title>Text</title>\n          <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n          <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        </svg>\n      </span>\n    </span>\n  </label>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-icon-md\"\n           type=\"radio\"\n           value=\"alcohol\" />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-icon\">\n        <svg viewBox=\"0 0 24 24\" fill=\"none\">\n          <title>Text</title>\n          <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n          <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        </svg>\n      </span>\n    </span>\n  </label>\n</fieldset>\n\n<fieldset class=\"ld-switch ld-switch--lg\">\n  <legend>Chemical compound</legend>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-icon-lg\"\n           type=\"radio\"\n           value=\"water\"\n           checked />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-icon ld-icon--lg\">\n        <svg viewBox=\"0 0 24 24\" fill=\"none\">\n          <title>Text</title>\n          <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n          <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        </svg>\n      </span>\n      <span class=\"ld-switch-item__label\">Water</span>\n    </span>\n  </label>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-icon-lg\"\n           type=\"radio\"\n           value=\"alcohol\" />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-icon ld-icon--lg\">\n        <svg viewBox=\"0 0 24 24\" fill=\"none\">\n          <title>Text</title>\n          <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n          <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"/>\n        </svg>\n      </span>\n      <span class=\"ld-switch-item__label\">Alcohol</span>\n    </span>\n  </label>\n</fieldset>\n{% endexample %}\n\n## Brand color\n\n{% example '{ \"background\": \"brand\", \"hasBorder\": false }' %}\n<ld-switch legend=\"Chemical compound\" name=\"food-type-web-component-brand-color\" brand-color>\n  <ld-switch-item value=\"water\" checked>Water</ld-switch-item>\n  <ld-switch-item value=\"alcohol\">Alcohol</ld-switch-item>\n</ld-switch> \n\n<!-- CSS component -->\n\n<fieldset class=\"ld-switch ld-switch--brand-color\">\n  <legend>Chemical compound</legend>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-brand-color\"\n           type=\"radio\"\n           value=\"water\"\n           checked />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Water</span>\n    </span>\n  </label>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-brand-color\"\n           type=\"radio\"\n           value=\"alcohol\" />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Alcohol</span>\n    </span>\n  </label>\n</fieldset>\n{% endexample %} \n\n## Disabled \n\n### All elements\n\n{% example %}\n<ld-switch legend=\"Chemical compound\" name=\"food-type-web-component-disabled\" disabled>\n  <ld-switch-item value=\"water\" checked>Water</ld-switch-item>\n  <ld-switch-item value=\"alcohol\">Alcohol</ld-switch-item>\n</ld-switch> \n\n<!-- CSS component -->\n\n<fieldset class=\"ld-switch\">\n  <legend>Chemical compound</legend> \n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-disabled\"\n           type=\"radio\"\n           value=\"water\"\n           disabled\n           checked />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Water</span>\n    </span>\n  </label>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-disabled\"\n           type=\"radio\"\n           value=\"alcohol\"\n           disabled />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Alcohol</span>\n    </span>\n  </label>\n</fieldset>\n{% endexample %}\n\n**If you want the switch to stay focusable** even if it is disabled, use `aria-disabled` in place of `disabled`:\n\n{% example %}\n<ld-switch legend=\"Chemical compound\" name=\"food-type-web-component-aria-disabled\" aria-disabled=\"true\">\n  <ld-switch-item value=\"water\" checked>Water</ld-switch-item>\n  <ld-switch-item value=\"alcohol\">Alcohol</ld-switch-item>\n</ld-switch>\n\n<!-- CSS component -->\n\n<fieldset class=\"ld-switch\">\n  <legend>Chemical compound</legend>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-aria-disabled\"\n           type=\"radio\"\n           value=\"water\"\n           aria-disabled=\"true\"\n           checked />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Water</span>\n    </span>\n  </label>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-aria-disabled\"\n           type=\"radio\"\n           value=\"alcohol\"\n           aria-disabled=\"true\" />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Alcohol</span>\n    </span>\n  </label>\n</fieldset>\n\n<!-- Example code for input prevention on aria-disabled switch -->\n<script>\nconst inputs = document.querySelectorAll('input[name=\"food-type-css-component-aria-disabled\"]')\nArray.from(inputs).forEach(input => {\n  input.addEventListener('click', (ev) => {\n    ev.preventDefault()\n  })\n})\n</script>\n{% endexample %}\n\n### Single element\n\n{% example %}\n<ld-switch legend=\"Chemical compound\" name=\"food-type-web-component-single-element-disabled\">\n  <ld-switch-item value=\"water\" checked>Water</ld-switch-item>\n  <ld-switch-item value=\"alcohol\">Alcohol</ld-switch-item> \n  <ld-switch-item value=\"vampire\" disabled>Vampire</ld-switch-item>\n</ld-switch> \n\n<!-- CSS component -->\n\n<fieldset class=\"ld-switch\">\n  <legend>Chemical compound</legend> \n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-single-element-disabled\"\n           type=\"radio\"\n           value=\"water\"\n           checked />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Water</span>\n    </span>\n  </label>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-single-element-disabled\"\n           type=\"radio\"\n           value=\"alcohol\" />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Alcohol</span>\n    </span>\n  </label>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-single-element-disabled\"\n           type=\"radio\"\n           value=\"vampire\"\n           disabled />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Vampire</span>\n    </span>\n  </label>\n</fieldset>\n{% endexample %}\n\nIf you want to disable a single switch item but **keep it focusable**, use `aria-disabled` in place of `disabled`:\n\n{% example %}\n<ld-switch legend=\"Chemical compound\" name=\"food-type-web-component-single-element-aria-disabled\">\n  <ld-switch-item value=\"water\" checked>Water</ld-switch-item>\n  <ld-switch-item value=\"alcohol\">Alcohol</ld-switch-item>\n  <ld-switch-item value=\"vampire\" aria-disabled=\"true\">Vampire</ld-switch-item>\n</ld-switch>\n\n<!-- CSS component -->\n\n<fieldset class=\"ld-switch\">\n  <legend>Chemical compound</legend>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-single-element-aria-disabled\"\n           type=\"radio\"\n           value=\"water\"\n           checked />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Water</span>\n    </span>\n  </label>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-single-element-aria-disabled\"\n           type=\"radio\"\n           value=\"alcohol\" />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Alcohol</span>\n    </span>\n  </label>\n  <label class=\"ld-switch-item\">\n    <input name=\"food-type-css-component-single-element-aria-disabled\"\n           type=\"radio\"\n           value=\"vampire\"\n           aria-disabled=\"true\" />\n    <span class=\"ld-switch-item__content\">\n      <span class=\"ld-switch-item__label\">Vampire</span>\n    </span>\n  </label>\n</fieldset>\n\n<!-- Example code for input prevention on aria-disabled switch items -->\n<script>\nconst all = Array.from(document.querySelectorAll('input[name=\"food-type-css-component-single-element-aria-disabled\"]'))\nconst enabled = all.filter(input => !input.ariaDisabled)\nconst disabled = all.filter(input => input.ariaDisabled)\nlet current = enabled.find(input => input.checked)\nenabled.forEach(input => {\n  input.addEventListener('change', (ev) => {\n    if (ev.target.checked) current = ev.target\n  })\n})\ndisabled.forEach(input => {\n  input.addEventListener('change', (ev) => {\n    current.checked = true\n  })\n})\n</script>\n{% endexample %}\n",
      "docs": "---\neleventyNavigation:\n  key: Switch\n  parent: Components\nlayout: layout.njk\ntitle: Switch\npermalink: components/ld-switch/\ntags:\n  - toggle\n  - radio group\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-switch.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-switch-item.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "fieldset - Container wrapping the legent element and the slot"
        },
        {
          "name": "part",
          "text": "legend - The legend element"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "ariaDisabled",
          "type": "string",
          "mutable": false,
          "attr": "aria-disabled",
          "reflectToAttr": false,
          "docs": "Alternative disabled state that keeps element focusable",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "mutable": false,
          "attr": "autofocus",
          "reflectToAttr": true,
          "docs": "Automatically focus the form control when the page is loaded.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "brandColor",
          "type": "boolean",
          "mutable": false,
          "attr": "brand-color",
          "reflectToAttr": false,
          "docs": "Defines switch custom color",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disabled state of the switch.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "fitContent",
          "type": "boolean",
          "mutable": false,
          "attr": "fit-content",
          "reflectToAttr": false,
          "docs": "Make each switch item take up as little space as its content requires.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "form",
          "type": "string",
          "mutable": false,
          "attr": "form",
          "reflectToAttr": false,
          "docs": "Associates the control with a form element.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ldTabindex",
          "type": "number",
          "mutable": false,
          "attr": "ld-tabindex",
          "reflectToAttr": false,
          "docs": "Tab index of the input.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "legend",
          "type": "string",
          "mutable": false,
          "attr": "legend",
          "reflectToAttr": false,
          "docs": "Defines a description of the contents of the switch component.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Used to specify the name of the control.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "The value is not editable.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Set this property to `true` in order to mark the switch as required.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "\"lg\" | \"md\" | \"sm\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Size of the switch.",
          "docsTags": [],
          "values": [
            {
              "value": "lg",
              "type": "string"
            },
            {
              "value": "md",
              "type": "string"
            },
            {
              "value": "sm",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "focusInner",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "focusInner() => Promise<void>",
          "parameters": [],
          "docs": "Sets focus on the radio button.",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "ldswitchchange",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted with the value of the selected switch item.",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "ldswitchitemchange",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "fieldset",
          "docs": "Container wrapping the legent element and the slot"
        },
        {
          "name": "legend",
          "docs": "The legend element"
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-switch/ld-switch-item/ld-switch-item.tsx",
      "encapsulation": "shadow",
      "tag": "ld-switch-item",
      "readme": "---\neleventyNavigation:\n  key: Switch Item\n  parent: Switch\nlayout: layout.njk\ntitle: Switch Item\npermalink: components/ld-switch/ld-switch-item/\n---\n\n# ld-switch-item\n\nThe `ld-switch-item` component is a subcomponent for `ld-switch`.\n\nPlease refer to the [`ld-switch` documentation](components/ld-switch) for usage examples.\n\n",
      "docs": "---\neleventyNavigation:\n  key: Switch Item\n  parent: Switch\nlayout: layout.njk\ntitle: Switch Item\npermalink: components/ld-switch/ld-switch-item/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "label-element - wrapping label element"
        },
        {
          "name": "part",
          "text": "input - the form input element"
        },
        {
          "name": "part",
          "text": "content - content container element"
        },
        {
          "name": "part",
          "text": "label - text label container containing the main slot"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "ariaDisabled",
          "type": "string",
          "mutable": false,
          "attr": "aria-disabled",
          "reflectToAttr": true,
          "docs": "Alternative disabled state that keeps element focusable",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "checked",
          "type": "boolean",
          "mutable": true,
          "attr": "checked",
          "reflectToAttr": false,
          "docs": "Indicates whether the switch item is selected.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disabled state of the switch item.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The input value.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "focusInner",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "focusInner() => Promise<void>",
          "parameters": [],
          "docs": "Sets focus on the switch item.",
          "docsTags": []
        }
      ],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "content",
          "docs": "content container element"
        },
        {
          "name": "input",
          "docs": "the form input element"
        },
        {
          "name": "label",
          "docs": "text label container containing the main slot"
        },
        {
          "name": "label-element",
          "docs": "wrapping label element"
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-tabs/ld-tab/ld-tab.tsx",
      "encapsulation": "shadow",
      "tag": "ld-tab",
      "readme": "---\neleventyNavigation:\n  key: Tab\n  parent: Tabs\nlayout: layout.njk\ntitle: Tab\npermalink: components/ld-tabs/ld-tab/\n---\n\n# ld-tab\n\nThe `ld-tab` component is a subcomponent for `ld-tabs`.\n\nPlease refer to the [`ld-tabs` documentation](components/ld-tabs) for usage examples.\n\n---\n\n",
      "docs": "---\neleventyNavigation:\n  key: Tab\n  parent: Tabs\nlayout: layout.njk\ntitle: Tab\npermalink: components/ld-tabs/ld-tab/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "button - Actual button element"
        },
        {
          "name": "part",
          "text": "content - Element wrapping the slot"
        },
        {
          "name": "part",
          "text": "spacer - Both spacer elements"
        },
        {
          "name": "part",
          "text": "spacer-left - Left spacer element"
        },
        {
          "name": "part",
          "text": "spacer-right - Right spacer element"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disables the tab.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ldTabindex",
          "type": "number",
          "mutable": false,
          "attr": "ld-tabindex",
          "reflectToAttr": false,
          "docs": "Tab index of the tab.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": true,
          "attr": "selected",
          "reflectToAttr": true,
          "docs": "If present, this boolean attribute indicates that the tab is selected.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "focusInner",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "focusInner() => Promise<void>",
          "parameters": [],
          "docs": "Focuses the tab",
          "docsTags": []
        },
        {
          "name": "select",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "select() => Promise<void>",
          "parameters": [],
          "docs": "Set selected tab to a certain index",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "ldtabselect",
          "detail": "undefined",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted with the id of the selected tab.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "button",
          "docs": "Actual button element"
        },
        {
          "name": "content",
          "docs": "Element wrapping the slot"
        },
        {
          "name": "focusable",
          "docs": ""
        },
        {
          "name": "spacer",
          "docs": "Both spacer elements"
        },
        {
          "name": "spacer-left",
          "docs": "Left spacer element"
        },
        {
          "name": "spacer-right",
          "docs": "Right spacer element"
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-tabs/ld-tablist/ld-tablist.tsx",
      "encapsulation": "shadow",
      "tag": "ld-tablist",
      "readme": "---\neleventyNavigation:\n  key: Tab List\n  parent: Tabs\nlayout: layout.njk\ntitle: Tab List\npermalink: components/ld-tabs/ld-tablist/\n---\n\n# ld-tablist\n\nThe `ld-tablist` component is a subcomponent for `ld-tabs`.\n\nPlease refer to the [`ld-tabs` documentation](components/ld-tabs) for usage examples.\n\n---\n\n",
      "docs": "---\neleventyNavigation:\n  key: Tab List\n  parent: Tabs\nlayout: layout.njk\ntitle: Tab List\npermalink: components/ld-tabs/ld-tablist/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "active-tab-indicator - Active tab indicator in floating mode"
        },
        {
          "name": "part",
          "text": "arrow - Both arrow button elements"
        },
        {
          "name": "part",
          "text": "arrow-icon - Both arrow icon SVGs"
        },
        {
          "name": "part",
          "text": "arrow-icon-left - Left arrow icon SVG"
        },
        {
          "name": "part",
          "text": "arrow-icon-right - Right arrow icon SVG"
        },
        {
          "name": "part",
          "text": "arrow-left - Left arrow button element"
        },
        {
          "name": "part",
          "text": "arrow-right - Right arrow button element"
        },
        {
          "name": "part",
          "text": "scroll-container - Container wrapping the slot"
        },
        {
          "name": "part",
          "text": "wrapper - Container wrapping the arrows and the scroll-container"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "mode",
          "type": "\"brand-color\" | \"floating\" | \"floating-on-brand-color\" | \"ghost\"",
          "mutable": false,
          "attr": "mode",
          "reflectToAttr": false,
          "docs": "Display mode.",
          "docsTags": [],
          "values": [
            {
              "value": "brand-color",
              "type": "string"
            },
            {
              "value": "floating",
              "type": "string"
            },
            {
              "value": "floating-on-brand-color",
              "type": "string"
            },
            {
              "value": "ghost",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "rounded",
          "type": "\"all\" | \"all-lg\" | \"top\" | \"top-lg\"",
          "mutable": false,
          "attr": "rounded",
          "reflectToAttr": false,
          "docs": "Sets border radii.",
          "docsTags": [],
          "values": [
            {
              "value": "all",
              "type": "string"
            },
            {
              "value": "all-lg",
              "type": "string"
            },
            {
              "value": "top",
              "type": "string"
            },
            {
              "value": "top-lg",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "\"lg\" | \"sm\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Size of the tabs.",
          "docsTags": [],
          "values": [
            {
              "value": "lg",
              "type": "string"
            },
            {
              "value": "sm",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [
        {
          "event": "ldtabselect",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "active-tab-indicator",
          "docs": "Active tab indicator in floating mode"
        },
        {
          "name": "arrow",
          "docs": "Both arrow button elements"
        },
        {
          "name": "arrow-icon",
          "docs": "Both arrow icon SVGs"
        },
        {
          "name": "arrow-icon-left",
          "docs": "Left arrow icon SVG"
        },
        {
          "name": "arrow-icon-right",
          "docs": "Right arrow icon SVG"
        },
        {
          "name": "arrow-left",
          "docs": "Left arrow button element"
        },
        {
          "name": "arrow-right",
          "docs": "Right arrow button element"
        },
        {
          "name": "scroll-container",
          "docs": "Container wrapping the slot"
        },
        {
          "name": "wrapper",
          "docs": "Container wrapping the arrows and the scroll-container"
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-tabs/ld-tabpanel/ld-tabpanel.tsx",
      "encapsulation": "shadow",
      "tag": "ld-tabpanel",
      "readme": "---\neleventyNavigation:\n  key: Tab Panel\n  parent: Tabs\nlayout: layout.njk\ntitle: Tab Panel\npermalink: components/ld-tabs/ld-tabpanel/\n---\n\n# ld-tabpanel\n\nThe `ld-tabpanel` component is a subcomponent for `ld-tabs`.\n\nPlease refer to the [`ld-tabs` documentation](components/ld-tabs) for usage examples.\n\n---\n\n",
      "docs": "---\neleventyNavigation:\n  key: Tab Panel\n  parent: Tabs\nlayout: layout.njk\ntitle: Tab Panel\npermalink: components/ld-tabs/ld-tabpanel/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-tabs/ld-tabpanellist/ld-tabpanellist.tsx",
      "encapsulation": "shadow",
      "tag": "ld-tabpanellist",
      "readme": "---\neleventyNavigation:\n  key: Tab Panel List\n  parent: Tabs\nlayout: layout.njk\ntitle: Tab Panel List\npermalink: components/ld-tabs/ld-tabpanellist/\n---\n\n# ld-tabpanellist\n\nThe `ld-tabpanellist` component is a subcomponent for `ld-tabs`.\n\nPlease refer to the [`ld-tabs` documentation](components/ld-tabs) for usage examples.\n\n---\n\n",
      "docs": "---\neleventyNavigation:\n  key: Tab Panel List\n  parent: Tabs\nlayout: layout.njk\ntitle: Tab Panel List\npermalink: components/ld-tabs/ld-tabpanellist/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-tabs/ld-tabs.tsx",
      "encapsulation": "shadow",
      "tag": "ld-tabs",
      "readme": "---\neleventyNavigation:\n  key: Tabs\n  parent: Components\nlayout: layout.njk\ntitle: Tabs\npermalink: components/ld-tabs/\n---\n\n# ld-tabs\n\nThe `ld-tabs` component hides content behind selectable items and thereby helps to place content in a space-saving manner.\n\n---\n\n## Usage\n\nUse `ld-tabs` as a container for a list of tabs - the `ld-tablist` which in turn contains a number of `ld-tab` items - and a container `ld-tabpanellist` which contains the same number of corresponding `ld-tabpanel` items.\n\n{% example '{ \"background\": \"light\" }' %}\n<ld-tabs>\n  <ld-tablist>\n    <ld-tab selected>Fruits</ld-tab>\n    <ld-tab>Vegetables</ld-tab>\n    <ld-tab>Nuts</ld-tab>\n  </ld-tablist>\n  <ld-tabpanellist>\n    <ld-tabpanel>\n      <ld-typo style=\"margin-top: 1rem\">\n        <a href=\"#apple\">Apple</a>, orange, banana\n      </ld-typo>\n    </ld-tabpanel>\n    <ld-tabpanel>\n      <ld-typo style=\"margin-top: 1rem\">\n        Potato, <a href=\"#cucumber\">cucumber</a>, tomato\n      </ld-typo>\n    </ld-tabpanel>\n    <ld-tabpanel>\n      <ld-typo style=\"margin-top: 1rem\">\n        Walnut, chestnut, <a href=\"#strawberry\">strawberry</a>\n      </ld-typo>\n    </ld-tabpanel>\n  </ld-tabpanellist>\n</ld-tabs>\n{% endexample %}\n\n### Disabled\n\n{% example '{ \"background\": \"light\" }' %}\n<ld-tabs>\n  <ld-tablist>\n    <ld-tab selected>Fruits</ld-tab>\n    <ld-tab disabled>Vegetables</ld-tab>\n    <ld-tab>Nuts</ld-tab>\n  </ld-tablist>\n</ld-tabs>\n{% endexample %}\n\n### Ghost\n\n{% example %}\n<ld-tabs>\n  <ld-tablist mode=\"ghost\">\n    <ld-tab selected>Fruits</ld-tab>\n    <ld-tab>Vegetables</ld-tab>\n    <ld-tab>Nuts</ld-tab>\n  </ld-tablist>\n</ld-tabs>\n{% endexample %}\n\n### Brand color\n\n{% example %}\n<ld-tabs>\n  <ld-tablist mode=\"brand-color\">\n    <ld-tab selected>Fruits</ld-tab>\n    <ld-tab>Vegetables</ld-tab>\n    <ld-tab>Nuts</ld-tab>\n  </ld-tablist>\n</ld-tabs>\n{% endexample %}\n\n### Rounded corners\n\n{% example %}\n<ld-tabs>\n  <ld-tablist mode=\"brand-color\" rounded=\"all\">\n    <ld-tab selected>Fruits</ld-tab>\n    <ld-tab>Vegetables</ld-tab>\n    <ld-tab>Nuts</ld-tab>\n  </ld-tablist>\n</ld-tabs>\n\n<ld-tabs>\n  <ld-tablist mode=\"brand-color\" rounded=\"all-lg\">\n    <ld-tab selected>Fruits</ld-tab>\n    <ld-tab>Vegetables</ld-tab>\n    <ld-tab>Nuts</ld-tab>\n  </ld-tablist>\n</ld-tabs>\n\n<ld-tabs>\n  <ld-tablist mode=\"brand-color\" rounded=\"top\">\n    <ld-tab selected>Fruits</ld-tab>\n    <ld-tab>Vegetables</ld-tab>\n    <ld-tab>Nuts</ld-tab>\n  </ld-tablist>\n</ld-tabs>\n\n<ld-tabs>\n  <ld-tablist mode=\"brand-color\" rounded=\"top-lg\">\n    <ld-tab selected>Fruits</ld-tab>\n    <ld-tab>Vegetables</ld-tab>\n    <ld-tab>Nuts</ld-tab>\n  </ld-tablist>\n</ld-tabs>\n{% endexample %}\n\n### Floating\n\n{% example '{ \"background\": \"light\" }' %}\n<ld-tabs>\n  <ld-tablist mode=\"floating\">\n    <ld-tab selected>Fruits</ld-tab>\n    <ld-tab>Vegetables</ld-tab>\n    <ld-tab disabled>Scrap Metal</ld-tab>\n    <ld-tab>Nuts</ld-tab>\n  </ld-tablist>\n</ld-tabs>\n{% endexample %}\n\n### Floating on brand color\n\n{% example '{ \"background\": \"brand\", \"hasBorder\": false }' %}\n<ld-tabs>\n  <ld-tablist mode=\"floating-on-brand-color\">\n    <ld-tab selected>Fruits</ld-tab>\n    <ld-tab>Vegetables</ld-tab>\n    <ld-tab disabled>Scrap Metal</ld-tab>\n    <ld-tab>Nuts</ld-tab>\n  </ld-tablist>\n</ld-tabs>\n{% endexample %}\n\n### Size\n\n{% example '{ \"background\": \"light\" }' %}\n<ld-tabs>\n  <ld-tablist size=\"sm\">\n    <ld-tab selected>Fruits</ld-tab>\n    <ld-tab>Vegetables</ld-tab>\n    <ld-tab>Nuts</ld-tab>\n  </ld-tablist>\n</ld-tabs>\n\n<ld-tabs>\n  <ld-tablist>\n    <ld-tab selected>Fruits</ld-tab>\n    <ld-tab>Vegetables</ld-tab>\n    <ld-tab>Nuts</ld-tab>\n  </ld-tablist>\n</ld-tabs>\n\n<ld-tabs>\n  <ld-tablist size=\"lg\">\n    <ld-tab selected>Fruits</ld-tab>\n    <ld-tab>Vegetables</ld-tab>\n    <ld-tab>Nuts</ld-tab>\n  </ld-tablist>\n</ld-tabs>\n{% endexample %}\n\n### With icons\n\n{% example '{ \"background\": \"light\" }' %}\n<ld-tabs>\n  <ld-tablist>\n    <ld-tab selected><ld-icon name=\"placeholder\" aria-label=\"Fruits\"></ld-icon></ld-tab>\n    <ld-tab><ld-icon name=\"placeholder\" aria-label=\"Vegetables\"></ld-icon></ld-tab>\n    <ld-tab><ld-icon name=\"placeholder\" aria-label=\"Nuts\"></ld-icon></ld-tab>\n  </ld-tablist>\n</ld-tabs>\n\n<ld-tabs>\n  <ld-tablist mode=\"ghost\">\n    <ld-tab selected><ld-icon name=\"placeholder\"></ld-icon>Fruits</ld-tab>\n    <ld-tab><ld-icon name=\"placeholder\"></ld-icon>Vegetables</ld-tab>\n    <ld-tab><ld-icon name=\"placeholder\"></ld-icon>Nuts</ld-tab>\n  </ld-tablist>\n</ld-tabs>\n{% endexample %}\n\n### With many tabs\n\nYou should try to avoid using tab bars with more than five tab items. But if you really must, the `ld-tabs` component has got you covered:\n\n{% example '{ \"background\": \"light\" }' %}\n<ld-tabs>\n  <ld-tablist>\n    <ld-tab selected>Classical</ld-tab>\n    <ld-tab>Rock</ld-tab>\n    <ld-tab>Indie</ld-tab>\n    <ld-tab>Jazz</ld-tab>\n    <ld-tab>Blues</ld-tab>\n    <ld-tab>Soul</ld-tab>\n    <ld-tab>Gospel</ld-tab>\n    <ld-tab>Pop</ld-tab>\n    <ld-tab>Hip Hop</ld-tab>\n    <ld-tab>Raggea</ld-tab>\n    <ld-tab>Raggeaton</ld-tab>\n    <ld-tab>R&B</ld-tab>\n    <ld-tab>Electric</ld-tab>\n    <ld-tab>Country</ld-tab>\n    <ld-tab>Punk</ld-tab>\n    <ld-tab>Latin</ld-tab>\n    <ld-tab>Funk</ld-tab>\n    <ld-tab>Ambient</ld-tab>\n    <ld-tab>Bossa Nova</ld-tab>\n    <ld-tab>Flamenco</ld-tab>\n  </ld-tablist>\n</ld-tabs>\n{% endexample %}\n\n### Full width\n\n{% example '{ \"background\": \"light\" }' %}\n<ld-tabs style=\"width: 100%\">\n  <ld-tablist mode=\"ghost\">\n    <ld-tab selected>Fruits</ld-tab>\n    <ld-tab disabled>Vegetables</ld-tab>\n    <ld-tab>Nuts</ld-tab>\n  </ld-tablist>\n</ld-tabs>\n\n<ld-tabs style=\"width: 100%\">\n  <ld-tablist>\n    <ld-tab selected>Fruits</ld-tab>\n    <ld-tab disabled>Vegetables</ld-tab>\n    <ld-tab>Nuts</ld-tab>\n  </ld-tablist>\n</ld-tabs>\n\n<ld-tabs style=\"width: 100%\">\n  <ld-tablist mode=\"brand-color\">\n    <ld-tab selected>Fruits</ld-tab>\n    <ld-tab disabled>Vegetables</ld-tab>\n    <ld-tab>Nuts</ld-tab>\n  </ld-tablist>\n</ld-tabs>\n{% endexample %}\n\n## Events\n\nThe `ld-tabs` component emits the `ldtabchange` event which you can use to bind custom event handlers. The event is only emmitted on clicks on non-disabled and non-selected tabs.\n\n{% example %}\n<ld-tabs id=\"tabs_events\">\n  <ld-tablist mode=\"ghost\">\n    <ld-tab selected>Fruits</ld-tab>\n    <ld-tab>Vegetables</ld-tab>\n    <ld-tab>Nuts</ld-tab>\n    <ld-tab disabled>Grain</ld-tab>\n  </ld-tablist>\n</ld-tabs>\n\n<script>\n  document.getElementById('tabs_events').addEventListener('ldtabchange', ev => {\n    window.alert(`Current tab index is: ${ev.detail}`)\n  })\n</script>\n{% endexample %}\n\n## Select a tab programmatically\n\nThere are two ways to programmatically select a tab: \n\n1. By using the `switchTab`-method exposed by the `ld-tabs` element:\n\n{% example %}\n<ld-tabs id=\"tabs_programmatic_1\">\n  <ld-tablist mode=\"ghost\">\n    <ld-tab selected>Fruits</ld-tab>\n    <ld-tab>Vegetables</ld-tab>\n    <ld-tab>Nuts</ld-tab>\n  </ld-tablist>\n  <ld-tabpanellist>\n    <ld-tabpanel>\n      <ld-typo style=\"margin-top: 1rem\">\n        Apple, orange, banana\n      </ld-typo>\n    </ld-tabpanel>\n    <ld-tabpanel>\n      <ld-typo style=\"margin-top: 1rem\">\n        Potato, cucumber, tomato\n      </ld-typo>\n    </ld-tabpanel>\n    <ld-tabpanel>\n      <ld-typo style=\"margin-top: 1rem\">\n        Walnut, chestnut, strawberry\n      </ld-typo>\n    </ld-tabpanel>\n  </ld-tabpanellist>\n</ld-tabs>\n\n<ld-button id=\"nuts_button_1\">Select nuts</ld-button>\n\n<script>\n  document.getElementById('nuts_button_1').addEventListener('click', async (ev) => {\n    await document.getElementById('tabs_programmatic_1').switchTab(2)\n\n    console.log(`Tab successfully set to tab at index 2 using ld-tabs' \"switchTab\"-method.`)\n  })\n</script>\n{% endexample %}\n\n2. By using the `select`-method exposed by the `ld-tab` element:\n\n{% example %}\n<ld-tabs id=\"tabs_programmatic_2\">\n  <ld-tablist mode=\"ghost\">\n    <ld-tab selected>Fruits</ld-tab>\n    <ld-tab>Vegetables</ld-tab>\n    <ld-tab>Nuts</ld-tab>\n  </ld-tablist>\n  <ld-tabpanellist>\n    <ld-tabpanel>\n      <ld-typo style=\"margin-top: 1rem\">\n        Apple, orange, banana\n      </ld-typo>\n    </ld-tabpanel>\n    <ld-tabpanel>\n      <ld-typo style=\"margin-top: 1rem\">\n        Potato, cucumber, tomato\n      </ld-typo>\n    </ld-tabpanel>\n    <ld-tabpanel>\n      <ld-typo style=\"margin-top: 1rem\">\n        Walnut, chestnut, strawberry\n      </ld-typo>\n    </ld-tabpanel>\n  </ld-tabpanellist>\n</ld-tabs>\n\n<ld-button id=\"nuts_button_2\">Select nuts</ld-button>\n\n<script>\n  document.getElementById('nuts_button_2').addEventListener('click', async (ev) => {\n    await document.getElementById('tabs_programmatic_2').querySelectorAll('ld-tab')[2].select()\n\n    console.log(`Tab successfully set to tab at index 2 using ld-tab's \"select\"-method.`)\n  })\n</script>\n{% endexample %}\n\n",
      "docs": "---\neleventyNavigation:\n  key: Tabs\n  parent: Components\nlayout: layout.njk\ntitle: Tabs\npermalink: components/ld-tabs/\n---",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "switchTab",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "switchTab(identifier: number | string) => Promise<void>",
          "parameters": [],
          "docs": "Set selected tab to a certain index",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "ldtabchange",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted with the id of the selected tab.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-toggle/ld-toggle.tsx",
      "encapsulation": "shadow",
      "tag": "ld-toggle",
      "readme": "---\neleventyNavigation:\n  key: Toggle\n  parent: Components\nlayout: layout.njk\ntitle: Toggle\npermalink: components/ld-toggle/\ntags:\n  - switch\n  - radio group\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-toggle.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-label.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-input-message.css\">\n\n# ld-toggle\n\nA toggle allows the user to select and deselect single values.\n\nThis component can be used in conjunction with the [`ld-label`](components/ld-label/) and the [`ld-input-message`](components/ld-input-message/) component.\n\n---\n\n## Examples\n\n### Primary\n\n{% example %}\n<ld-toggle></ld-toggle>\n\n<!-- CSS component -->\n\n<div class=\"ld-toggle\">\n  <input type=\"checkbox\" />\n  <span class=\"ld-toggle__knob\"></span>\n</div>\n{% endexample %}\n\n### Large\n\n{% example %}\n<ld-toggle size=\"lg\"></ld-toggle>\n\n<!-- CSS component -->\n\n<div class=\"ld-toggle ld-toggle--lg\">\n  <input type=\"checkbox\" />\n  <span class=\"ld-toggle__knob\"></span>\n</div>\n{% endexample %}\n\n### Invalid\n\n{% example %}\n<ld-toggle required></ld-toggle>\n\n<ld-toggle checked required></ld-toggle>\n\n<!-- CSS component -->\n\n<div class=\"ld-toggle\">\n  <input type=\"checkbox\" required />\n  <span class=\"ld-toggle__knob\"></span>\n</div>\n\n<div class=\"ld-toggle\">\n  <input type=\"checkbox\" checked required />\n  <span class=\"ld-toggle__knob\"></span>\n</div>\n{% endexample %}\n\n### Disabled\n\n{% example %}\n<ld-toggle disabled></ld-toggle>\n\n<ld-toggle disabled checked></ld-toggle>\n\n<!-- CSS component -->\n\n<div class=\"ld-toggle\">\n  <input type=\"checkbox\" disabled />\n  <span class=\"ld-toggle__knob\"></span>\n</div>\n\n<div class=\"ld-toggle\">\n  <input type=\"checkbox\" disabled checked />\n  <span class=\"ld-toggle__knob\"></span>\n</div>\n{% endexample %}\n\n**If you want the toggle to stay focusable** even if it is disabled, use `aria-disabled` in place of `disabled`:\n\n{% example %}\n<ld-toggle aria-disabled=\"true\"></ld-toggle>\n\n<ld-toggle aria-disabled=\"true\" checked></ld-toggle>\n\n<!-- CSS component -->\n\n<div class=\"ld-toggle\">\n  <input type=\"checkbox\" aria-disabled=\"true\" id=\"focusable-disabled-toggle-1\" />\n  <span class=\"ld-toggle__knob\"></span>\n</div>\n\n<div class=\"ld-toggle\">\n  <input type=\"checkbox\" aria-disabled=\"true\" checked id=\"focusable-disabled-toggle-2\" />\n  <span class=\"ld-toggle__knob\"></span>\n</div>\n\n<!-- Example code for input prevention on aria-disabled toggle elements -->\n<script>\n  const inputs = document.querySelectorAll('#focusable-disabled-toggle-1, #focusable-disabled-toggle-2')\n  Array.from(inputs).forEach(input => {\n    input.addEventListener('click', (ev) => {\n      ev.preventDefault()\n    })\n  })\n</script>\n\n{% endexample %}\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  When <code>aria-disabled</code> is applied on the toggle, the component will try to prevent user interaction using an internal click event handler, calling <code>preventDefault()</code> on the click event. With the CSS component version on the other hand, you will need to take care of preventing the default behaviour of the toggle yourself.\n</ld-notice>\n\n### With icons\n\n{% example %}\n<ld-toggle>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-start\"></ld-icon>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-end\"></ld-icon>\n</ld-toggle>\n\n<ld-toggle checked>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-start\"></ld-icon>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-end\"></ld-icon>\n</ld-toggle>\n\n<ld-toggle size=\"lg\">\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-start\"></ld-icon>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-end\"></ld-icon>\n</ld-toggle>\n\n<ld-toggle size=\"lg\" checked>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-start\"></ld-icon>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-end\"></ld-icon>\n</ld-toggle>\n\n<!-- CSS component -->\n\n<div class=\"ld-toggle ld-toggle--with-icons\">\n  <input type=\"checkbox\" />\n  <span class=\"ld-toggle__knob\"></span>\n  <svg class=\"ld-toggle__icon-start ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n  <svg class=\"ld-toggle__icon-end ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n</div>\n\n<div class=\"ld-toggle ld-toggle--with-icons\">\n  <input type=\"checkbox\" checked />\n  <span class=\"ld-toggle__knob\"></span>\n  <svg class=\"ld-toggle__icon-start ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n  <svg class=\"ld-toggle__icon-end ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n</div>\n\n<div class=\"ld-toggle ld-toggle--lg ld-toggle--with-icons\">\n  <input type=\"checkbox\" />\n  <span class=\"ld-toggle__knob\"></span>\n  <svg class=\"ld-toggle__icon-start ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n  <svg class=\"ld-toggle__icon-end ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n</div>\n\n<div class=\"ld-toggle ld-toggle--lg ld-toggle--with-icons\">\n  <input type=\"checkbox\" checked />\n  <span class=\"ld-toggle__knob\"></span>\n  <svg class=\"ld-toggle__icon-start ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n  <svg class=\"ld-toggle__icon-end ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n</div>\n{% endexample %}\n\n### With icons (disabled)\n\n{% example %}\n<ld-toggle disabled>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-start\"></ld-icon>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-end\"></ld-icon>\n</ld-toggle>\n\n<ld-toggle checked disabled>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-start\"></ld-icon>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-end\"></ld-icon>\n</ld-toggle>\n\n<ld-toggle size=\"lg\" disabled>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-start\"></ld-icon>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-end\"></ld-icon>\n</ld-toggle>\n\n<ld-toggle size=\"lg\" checked disabled>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-start\"></ld-icon>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-end\"></ld-icon>\n</ld-toggle>\n\n<!-- CSS component -->\n\n<div class=\"ld-toggle ld-toggle--with-icons\">\n  <input type=\"checkbox\" disabled />\n  <span class=\"ld-toggle__knob\"></span>\n  <svg class=\"ld-toggle__icon-start ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n  <svg class=\"ld-toggle__icon-end ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n</div>\n\n<div class=\"ld-toggle ld-toggle--with-icons\">\n  <input type=\"checkbox\" checked disabled />\n  <span class=\"ld-toggle__knob\"></span>\n  <svg class=\"ld-toggle__icon-start ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n  <svg class=\"ld-toggle__icon-end ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n</div>\n\n<div class=\"ld-toggle ld-toggle--lg ld-toggle--with-icons\">\n  <input type=\"checkbox\" disabled />\n  <span class=\"ld-toggle__knob\"></span>\n  <svg class=\"ld-toggle__icon-start ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n  <svg class=\"ld-toggle__icon-end ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n</div>\n\n<div class=\"ld-toggle ld-toggle--lg ld-toggle--with-icons\">\n  <input type=\"checkbox\" checked disabled />\n  <span class=\"ld-toggle__knob\"></span>\n  <svg class=\"ld-toggle__icon-start ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n  <svg class=\"ld-toggle__icon-end ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n</div>\n{% endexample %}\n\n### With icons (invalid)\n\n{% example %}\n<ld-toggle required>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-start\"></ld-icon>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-end\"></ld-icon>\n</ld-toggle>\n\n<ld-toggle checked required>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-start\"></ld-icon>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-end\"></ld-icon>\n</ld-toggle>\n\n<ld-toggle size=\"lg\" required>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-start\"></ld-icon>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-end\"></ld-icon>\n</ld-toggle>\n\n<ld-toggle size=\"lg\" checked required>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-start\"></ld-icon>\n  <ld-icon name=\"placeholder\" size=\"sm\" slot=\"icon-end\"></ld-icon>\n</ld-toggle>\n\n<!-- CSS component -->\n\n<div class=\"ld-toggle ld-toggle--with-icons\">\n  <input type=\"checkbox\" required />\n  <span class=\"ld-toggle__knob\"></span>\n  <svg class=\"ld-toggle__icon-start ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n  <svg class=\"ld-toggle__icon-end ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n</div>\n\n<div class=\"ld-toggle ld-toggle--with-icons\">\n  <input type=\"checkbox\" checked required />\n  <span class=\"ld-toggle__knob\"></span>\n  <svg class=\"ld-toggle__icon-start ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n  <svg class=\"ld-toggle__icon-end ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n</div>\n\n<div class=\"ld-toggle ld-toggle--lg ld-toggle--with-icons\">\n  <input type=\"checkbox\" required />\n  <span class=\"ld-toggle__knob\"></span>\n  <svg class=\"ld-toggle__icon-start ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n  <svg class=\"ld-toggle__icon-end ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n</div>\n\n<div class=\"ld-toggle ld-toggle--lg ld-toggle--with-icons\">\n  <input type=\"checkbox\" checked required />\n  <span class=\"ld-toggle__knob\"></span>\n  <svg class=\"ld-toggle__icon-start ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n  <svg class=\"ld-toggle__icon-end ld-icon ld-icon--sm\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <rect x=\"1.5\" y=\"1.5\" width=\"21\" height=\"21\" rx=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></rect>\n    <circle cx=\"12\" cy=\"12\" r=\"4.5\" stroke=\"currentColor\" stroke-width=\"3\"></circle>\n  </svg>\n</div>\n{% endexample %}\n\n### With label\n\n{% example %}\n<ld-label position=\"right\" size=\"m\">\n  I'd like to receive a weekly newsletter.\n  <ld-toggle></ld-toggle>\n</ld-label>\n\n<!-- CSS component -->\n\n<label class=\"ld-label ld-label--right ld-label--m\">\n  I'd like to receive a weekly newsletter.\n  <div class=\"ld-toggle\">\n    <input type=\"checkbox\" />\n    <span class=\"ld-toggle__knob\"></span>\n  </div>\n</label>\n{% endexample %}\n\nPlease refer to the [ld-label](components/ld-label/) docs for more information on the label component.\n\n### With label and input message\n\n{% example %}\n<div style=\"display: grid; gap: 2rem; grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr)); width: 100%\">\n  <ld-label position=\"right\" size=\"m\">\n    I have read the terms of service.*\n    <ld-toggle required></ld-toggle>\n    <ld-input-message>To proceed, you must except the terms of service.</ld-input-message>\n  </ld-label>\n\n  <ld-label position=\"right\" size=\"m\">\n    I'd like to receive a weekly newsletter.\n    <ld-toggle></ld-toggle>\n    <ld-input-message mode=\"info\">You may unsubscribe at any given time.</ld-input-message>\n  </ld-label>\n</div>\n\n<!-- CSS component -->\n\n<div style=\"display: grid; gap: 2rem; grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr)); width: 100%\">\n  <label class=\"ld-label ld-label--right ld-label--m\">\n    I have read the terms of service.*\n    <div class=\"ld-toggle\">\n      <input type=\"checkbox\" required />\n      <span class=\"ld-toggle__knob\"></span>\n    </div>\n    <span class=\"ld-input-message ld-input-message--error\">\n      <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"currentColor\"/>\n        <path d=\"M4.66675 4.66699L9.33341 9.33366\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        <path d=\"M4.66675 9.33301L9.33341 4.66634\" stroke=\"var(--ld-col-wht)\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      </svg>\n      To proceed, you must except the terms of service.\n    </span>\n  </label>\n  \n  <label class=\"ld-label ld-label--right ld-label--m\">\n    I'd like to receive a weekly newsletter.\n    <div class=\"ld-toggle\">\n      <input type=\"checkbox\" />\n      <span class=\"ld-toggle__knob\"></span>\n    </div>\n    <span class=\"ld-input-message\">\n      <svg class=\"ld-input-message__icon ld-icon ld-icon--sm\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14Z\" fill=\"var(--ld-thm-warning)\"/>\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.18234 11.0254C6.79228 11.0254 6.48657 10.9147 6.26518 10.6933C6.0438 10.472 5.93311 10.1662 5.93311 9.77618V6.12335C5.93311 5.99685 6.0069 5.93359 6.15449 5.93359H6.89771C7.28776 5.93359 7.59348 6.04428 7.81487 6.26567C8.03625 6.48705 8.14694 6.79277 8.14694 7.18283V10.8357C8.14694 10.9622 8.07315 11.0254 7.92556 11.0254H7.18234Z\" fill=\"var(--ld-col-neutral-900)\"/>\n        <ellipse cx=\"6.99977\" cy=\"3.80007\" rx=\"1.06667\" ry=\"1.06667\" fill=\"var(--ld-col-neutral-900)\"/>\n      </svg>\n      You may unsubscribe at any given time.\n    </span>\n  </label>\n</div>\n{% endexample %}\n\n### Input validation\n\nThe `ld-toggle` Web Component provides a low level API for integrating the component with the form validation solution of your choice. It allows you to listen for `focus`, `input` and `blur` events.\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  You can find examples for different kinds of input validation in the <a href=\"guides/form-validation/\">Form validation</a> documentation. Please also be aware of differences in event handling compared to native elements that come with Web Components. Details can be found in our <a href=\"guides/event-handling/\">Event handling</a> documentation.\n</ld-notice>\n",
      "docs": "---\neleventyNavigation:\n  key: Toggle\n  parent: Components\nlayout: layout.njk\ntitle: Toggle\npermalink: components/ld-toggle/\ntags:\n  - switch\n  - radio group\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-toggle.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-label.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-icon.css\">\n<link rel=\"stylesheet\" href=\"css_components/ld-input-message.css\">",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "input - Actual input element"
        },
        {
          "name": "part",
          "text": "knob - Toggle knob"
        },
        {
          "name": "part",
          "text": "icon-wrapper - Both wrappers of icons"
        },
        {
          "name": "part",
          "text": "icon-wrapper-start - Wrapper of the start icon"
        },
        {
          "name": "part",
          "text": "icon-wrapper-end - Wrapper of the end icon"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "ariaDisabled",
          "type": "string",
          "mutable": false,
          "attr": "aria-disabled",
          "reflectToAttr": false,
          "docs": "Alternative disabled state that keeps element focusable",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "mutable": false,
          "attr": "autofocus",
          "reflectToAttr": true,
          "docs": "Automatically focus the form control when the page is loaded.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "checked",
          "type": "boolean",
          "mutable": true,
          "attr": "checked",
          "reflectToAttr": false,
          "docs": "Indicates whether the toggle is \"on\".",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disabled state of the checkbox.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "form",
          "type": "string",
          "mutable": false,
          "attr": "form",
          "reflectToAttr": false,
          "docs": "Associates the control with a form element.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "invalid",
          "type": "boolean",
          "mutable": false,
          "attr": "invalid",
          "reflectToAttr": false,
          "docs": "Set this property to `true` in order to mark the checkbox visually as invalid.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ldTabindex",
          "type": "number",
          "mutable": false,
          "attr": "ld-tabindex",
          "reflectToAttr": false,
          "docs": "Tab index of the input.",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Used to specify the name of the control.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "mutable": false,
          "attr": "readonly",
          "reflectToAttr": false,
          "docs": "The value is not editable.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Set this property to `true` in order to mark the checkbox as required.",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "\"lg\" | \"sm\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Size of the toggle.",
          "docsTags": [],
          "values": [
            {
              "value": "lg",
              "type": "string"
            },
            {
              "value": "sm",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The input value.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "focusInner",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "focusInner() => Promise<void>",
          "parameters": [],
          "docs": "Sets focus on the toggle.",
          "docsTags": []
        }
      ],
      "events": [
        {
          "event": "ldchange",
          "detail": "boolean",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input value changed and the element loses focus.",
          "docsTags": []
        },
        {
          "event": "ldinput",
          "detail": "boolean",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Emitted when the input value changed.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "icon-wrapper",
          "docs": "Both wrappers of icons"
        },
        {
          "name": "icon-wrapper-end",
          "docs": "Wrapper of the end icon"
        },
        {
          "name": "icon-wrapper-start",
          "docs": "Wrapper of the start icon"
        },
        {
          "name": "input",
          "docs": "Actual input element"
        },
        {
          "name": "knob",
          "docs": "Toggle knob"
        }
      ],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/liquid/components/ld-tooltip/ld-tooltip.tsx",
      "encapsulation": "shadow",
      "tag": "ld-tooltip",
      "readme": "---\neleventyNavigation:\n  key: Tooltip\n  parent: Components\nlayout: layout.njk\ntitle: Tooltip\npermalink: components/ld-tooltip/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-button.css\">\n\n# ld-tooltip\n\nTooltips provide additional information, mostly short paragraphs, and can be placed beside all sorts of interface elements.\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  If your application is mounted to a different element than the <code>body</code> element, or you have <em>z-order</em> related issues, you may need to configure the <code>bodyElement</code> option using the <code>tetherOptions</code> property. For more details check out the <a href=\"guides/troubleshooting/#popped-out-element-is-rendered-in-wrong-container\">related troubleshooting section</a>.\n</ld-notice>\n\n## Default\n\n{% example %}\n<ld-tooltip>\n  <ld-typo variant=\"h4\" style=\"margin-bottom: 0.625rem\">Headline</ld-typo>\n  <ld-typo>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n  </ld-typo>\n</ld-tooltip>\n{% endexample %}\n\n## With arrow\n\n{% example %}\n<ld-tooltip arrow>\n  <ld-typo variant=\"h4\" style=\"margin-bottom: 0.625rem\">Headline</ld-typo>\n  <ld-typo>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n  </ld-typo>\n</ld-tooltip>\n{% endexample %}\n\n## Size\n\n{% example %}\n<ld-tooltip arrow>\n  <ld-typo>I'm the default size tooltip.</ld-typo>\n</ld-tooltip>\n<ld-tooltip arrow size=\"sm\">\n  <ld-typo>I'm the small size tooltip.</ld-typo>\n</ld-tooltip>\n{% endexample %}\n\n## With custom trigger\n\n{% example %}\n<p>\n  I am an\n  <ld-tooltip arrow>\n    <span slot=\"trigger\" style=\"text-decoration: underline\">inline</span>\n    <ld-typo variant=\"h4\" style=\"margin-bottom: 0.625rem\">Headline</ld-typo>\n    <ld-typo>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    </ld-typo>\n  </ld-tooltip>\n  trigger!\n</p>\n{% endexample %}\n\n## Open on click\n\n{% example %}\n<ld-tooltip trigger-type=\"click\">\n  <div class=\"ld-button\" slot=\"trigger\">click me</div>\n  <ld-typo variant=\"h4\" style=\"margin-bottom: 0.625rem\">Headline</ld-typo>\n  <ld-typo>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n  </ld-typo>\n</ld-tooltip>\n{% endexample %}\n\n## Positioning\n\n{% example %}\n<div style=\"display: grid; grid-template-columns: repeat(3, 1fr); grid-gap: 0.625rem\">\n  <ld-tooltip arrow position=\"top left\" style=\"text-align: end\">\n    <div class=\"ld-button\" slot=\"trigger\" style=\"width: 9.375rem\">top left</div>\n    <ld-typo variant=\"h4\" style=\"margin-bottom: 0.625rem\">Headline</ld-typo>\n    <ld-typo>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    </ld-typo>\n  </ld-tooltip>\n\n  <ld-tooltip arrow position=\"top center\" style=\"text-align: center\">\n    <div class=\"ld-button\" slot=\"trigger\" style=\"width: 9.375rem\">top center</div>\n    <ld-typo variant=\"h4\" style=\"margin-bottom: 0.625rem\">Headline</ld-typo>\n    <ld-typo>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    </ld-typo>\n  </ld-tooltip>\n\n  <ld-tooltip arrow position=\"top right\">\n    <div class=\"ld-button\" slot=\"trigger\" style=\"width: 9.375rem\">top right</div>\n    <ld-typo variant=\"h4\" style=\"margin-bottom: 0.625rem\">Headline</ld-typo>\n    <ld-typo>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    </ld-typo>\n  </ld-tooltip>\n\n  <ld-tooltip arrow position=\"left top\" style=\"text-align: end\">\n    <div class=\"ld-button\" slot=\"trigger\" style=\"width: 9.375rem\">left top</div>\n    <ld-typo variant=\"h4\" style=\"margin-bottom: 0.625rem\">Headline</ld-typo>\n    <ld-typo>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    </ld-typo>\n  </ld-tooltip>\n\n  <div></div>\n\n  <ld-tooltip arrow position=\"right top\">\n    <div class=\"ld-button\" slot=\"trigger\" style=\"width: 9.375rem\">right top</div>\n    <ld-typo variant=\"h4\" style=\"margin-bottom: 0.625rem\">Headline</ld-typo>\n    <ld-typo>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    </ld-typo>\n  </ld-tooltip>\n\n  <ld-tooltip arrow position=\"left middle\" style=\"text-align: end\">\n    <div class=\"ld-button\" slot=\"trigger\" style=\"width: 9.375rem\">left middle</div>\n    <ld-typo variant=\"h4\" style=\"margin-bottom: 0.625rem\">Headline</ld-typo>\n    <ld-typo>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    </ld-typo>\n  </ld-tooltip>\n\n  <div></div>\n\n  <ld-tooltip arrow position=\"right middle\">\n    <div class=\"ld-button\" slot=\"trigger\" style=\"width: 9.375rem\">right middle</div>\n    <ld-typo variant=\"h4\" style=\"margin-bottom: 0.625rem\">Headline</ld-typo>\n    <ld-typo>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    </ld-typo>\n  </ld-tooltip>\n\n  <ld-tooltip arrow position=\"left bottom\" style=\"text-align: end\">\n    <div class=\"ld-button\" slot=\"trigger\" style=\"width: 9.375rem\">left bottom</div>\n    <ld-typo variant=\"h4\" style=\"margin-bottom: 0.625rem\">Headline</ld-typo>\n    <ld-typo>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    </ld-typo>\n  </ld-tooltip>\n\n  <div></div>\n\n  <ld-tooltip arrow position=\"right bottom\">\n    <div class=\"ld-button\" slot=\"trigger\" style=\"width: 9.375rem\">right bottom</div>\n    <ld-typo variant=\"h4\" style=\"margin-bottom: 0.625rem\">Headline</ld-typo>\n    <ld-typo>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    </ld-typo>\n  </ld-tooltip>\n\n  <ld-tooltip arrow position=\"bottom left\" style=\"text-align: end\">\n    <div class=\"ld-button\" slot=\"trigger\" style=\"width: 9.375rem\">bottom left</div>\n    <ld-typo variant=\"h4\" style=\"margin-bottom: 0.625rem\">Headline</ld-typo>\n    <ld-typo>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    </ld-typo>\n  </ld-tooltip>\n\n  <ld-tooltip arrow position=\"bottom center\" style=\"text-align: center\">\n    <div class=\"ld-button\" slot=\"trigger\" style=\"width: 9.375rem\">bottom center</div>\n    <ld-typo variant=\"h4\" style=\"margin-bottom: 0.625rem\">Headline</ld-typo>\n    <ld-typo>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    </ld-typo>\n  </ld-tooltip>\n\n  <ld-tooltip arrow position=\"bottom right\">\n    <div class=\"ld-button\" slot=\"trigger\" style=\"width: 9.375rem\">bottom right</div>\n    <ld-typo variant=\"h4\" style=\"margin-bottom: 0.625rem\">Headline</ld-typo>\n    <ld-typo>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    </ld-typo>\n  </ld-tooltip>\n</div>\n{% endexample %}\n\n## Show/hide delay\n\n{% example %}\n<ld-tooltip hide-delay=\"1000\" show-delay=\"1000\">\n  <div class=\"ld-button\" slot=\"trigger\">show/hide 1s</div>\n  <ld-typo>\n    I show and hide after 1s\n  </ld-typo>\n</ld-tooltip>\n\n<ld-tooltip show-delay=\"1000\">\n  <div class=\"ld-button\" slot=\"trigger\">show 1s</div>\n  <ld-typo>\n    I show after 1s, but hide immediately\n  </ld-typo>\n</ld-tooltip>\n\n<ld-tooltip hide-delay=\"1000\">\n  <div class=\"ld-button\" slot=\"trigger\">hide 1s</div>\n  <ld-typo>\n    I show immediately, but hide after 1s\n  </ld-typo>\n</ld-tooltip>\n\n<ld-tooltip show-delay=\"500\" hide-delay=\"1000\">\n  <div class=\"ld-button\" slot=\"trigger\">show 500ms / hide 1s</div>\n  <ld-typo>\n    I show after 500ms and hide after 1s\n  </ld-typo>\n</ld-tooltip>\n{% endexample %}\n\n## CSS Variables\n\n| Variable                             | Description                                                                            | Default                |\n| ------------------------------------ | -------------------------------------------------------------------------------------- | ---------------------- |\n| `--ld-tooltip-animation-duration`    | Duration of the tooltip show/hide animation                                            | `var(--ld-ad-default)` |\n| `--ld-tooltip-arrow-offset`          | Offset of the arrow from the tooltip border, if arrow is aligned left/right/top/bottom | `var(--ld-sp-16)`      |\n| `--ld-tooltip-arrow-size`            | Size of the arrow                                                                      | `0.5rem` (8px)         |\n| `--ld-tooltip-distance-from-trigger` | Space between the trigger and the tooltip (including the arrow)                        | `var(--ld-sp-8)`       |\n| `--ld-tooltip-max-width`             | Max width of the tooltip                                                               | `20rem` (320px)        |\n| `--ld-tooltip-offset-x`              | Offset of the tooltip on the x-axis (If the tooltip is aligned to the right/left border of the trigger, a positive value always means increasing the space between trigger and tooltip.) | `0px`                  |\n| `--ld-tooltip-offset-y`              | Offset of the tooltip on the y-axis (If the tooltip is aligned to the top/bottom border of the trigger, a positive value always means increasing the space between trigger and tooltip.) | `0px`                  |\n\n",
      "docs": "---\neleventyNavigation:\n  key: Tooltip\n  parent: Components\nlayout: layout.njk\ntitle: Tooltip\npermalink: components/ld-tooltip/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-button.css\">",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "icon - Default icon when no trigger is supplied"
        },
        {
          "name": "part",
          "text": "trigger - Trigger button"
        },
        {
          "name": "part",
          "text": "popper - Popper element (can only be styled as long as tooltip is not initialized)"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "arrow",
          "type": "boolean",
          "mutable": false,
          "attr": "arrow",
          "reflectToAttr": false,
          "docs": "Show arrow",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disable tooltip trigger",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "hideDelay",
          "type": "number",
          "mutable": false,
          "attr": "hide-delay",
          "reflectToAttr": false,
          "docs": "Delay in ms until tooltip hides (only when trigger type is 'hover')",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "position",
          "type": "\"bottom center\" | \"bottom left\" | \"bottom right\" | \"left bottom\" | \"left middle\" | \"left top\" | \"right bottom\" | \"right middle\" | \"right top\" | \"top center\" | \"top left\" | \"top right\"",
          "mutable": false,
          "attr": "position",
          "reflectToAttr": false,
          "docs": "Position of the tooltip relative to the trigger element (also affects the arrow position)",
          "docsTags": [],
          "default": "'top center'",
          "values": [
            {
              "value": "bottom center",
              "type": "string"
            },
            {
              "value": "bottom left",
              "type": "string"
            },
            {
              "value": "bottom right",
              "type": "string"
            },
            {
              "value": "left bottom",
              "type": "string"
            },
            {
              "value": "left middle",
              "type": "string"
            },
            {
              "value": "left top",
              "type": "string"
            },
            {
              "value": "right bottom",
              "type": "string"
            },
            {
              "value": "right middle",
              "type": "string"
            },
            {
              "value": "right top",
              "type": "string"
            },
            {
              "value": "top center",
              "type": "string"
            },
            {
              "value": "top left",
              "type": "string"
            },
            {
              "value": "top right",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "showDelay",
          "type": "number",
          "mutable": false,
          "attr": "show-delay",
          "reflectToAttr": false,
          "docs": "Delay in ms until tooltip shows (only when trigger type is 'hover')",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "\"sm\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "The tooltip size (effects tooltip padding only)",
          "docsTags": [],
          "values": [
            {
              "value": "sm",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "tag",
          "type": "string",
          "mutable": false,
          "attr": "tag",
          "reflectToAttr": false,
          "docs": "The rendered HTML tag for the tooltip trigger.",
          "docsTags": [],
          "default": "'button'",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "tetherOptions",
          "type": "string | { attachment?: string; bodyElement?: HTMLElement; classes?: { [className: string]: string | boolean; }; classPrefix?: string; constraints?: ITetherConstraint[]; element?: any; enabled?: boolean; offset?: string; optimizations?: any; target?: any; targetAttachment?: string; targetOffset?: string; targetModifier?: string; }",
          "mutable": false,
          "attr": "tether-options",
          "reflectToAttr": false,
          "docs": "Tether options object to be merged with the default options (optionally stringified).",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "{ attachment?: string; bodyElement?: HTMLElement; classes?: { [className: string]: string"
            },
            {
              "type": "boolean; }; classPrefix?: string; constraints?: ITetherConstraint[]; element?: any; enabled?: boolean; offset?: string; optimizations?: any; target?: any; targetAttachment?: string; targetOffset?: string; targetModifier?: string; }"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "triggerType",
          "type": "\"click\" | \"hover\"",
          "mutable": false,
          "attr": "trigger-type",
          "reflectToAttr": false,
          "docs": "Event type that triggers the tooltip",
          "docsTags": [],
          "default": "'hover'",
          "values": [
            {
              "value": "click",
              "type": "string"
            },
            {
              "value": "hover",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "hideTooltip",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "hideTooltip() => Promise<void>",
          "parameters": [],
          "docs": "Hide tooltip",
          "docsTags": []
        },
        {
          "name": "showTooltip",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "showTooltip() => Promise<void>",
          "parameters": [],
          "docs": "Show tooltip",
          "docsTags": []
        }
      ],
      "events": [],
      "listeners": [
        {
          "event": "click",
          "target": "window",
          "capture": false,
          "passive": false
        },
        {
          "event": "touchend",
          "target": "window",
          "capture": false,
          "passive": true
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "focusable",
          "docs": ""
        },
        {
          "name": "icon",
          "docs": "Default icon when no trigger is supplied"
        },
        {
          "name": "popper",
          "docs": "Popper element (can only be styled as long as tooltip is not initialized)"
        },
        {
          "name": "trigger",
          "docs": "Trigger button"
        }
      ],
      "dependents": [
        "ld-sidenav-header",
        "ld-sidenav-navitem",
        "ld-sidenav-toggle-outside"
      ],
      "dependencies": [
        "ld-sr-only",
        "ld-tooltip-popper"
      ],
      "dependencyGraph": {
        "ld-tooltip": [
          "ld-sr-only",
          "ld-tooltip-popper"
        ],
        "ld-sidenav-header": [
          "ld-tooltip"
        ],
        "ld-sidenav-navitem": [
          "ld-tooltip"
        ],
        "ld-sidenav-toggle-outside": [
          "ld-tooltip"
        ]
      }
    },
    {
      "filePath": "./src/liquid/components/ld-typo/ld-typo.tsx",
      "encapsulation": "shadow",
      "tag": "ld-typo",
      "readme": "---\neleventyNavigation:\n  key: Typography\n  parent: Components\nlayout: layout.njk\ntitle: Typography\npermalink: components/ld-typo/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-typo.css\">\n\n# ld-typo\n\nTo give text a certain style of typography, you can use the `ld-typo` component. Every variant has its own semantic HTML tag that it gets rendered with. Heading styles render with their respective heading tag (`h1`, `h2`, etc). You can use the `tag` attribute, to render the variant with a different HTML tag, while keeping the visual variant style.\n\n<ld-notice mode=\"warning\">\n  Please be aware of our brand guidelines regarding typography.\n  <br />\n  For more information visit <a href=\"https://brand-hub.merckgroup.com/en/design-basics/typography.html\" rel=\"noreferrer noopener\" target=\"_blank\">Brand Hub: Typography</a>.\n</ld-notice>\n\n---\n\n## Examples\n\n### Default\n\n{% example '{ \"stacked\": true }' %}\n<ld-typo>\n  Almost before we knew it, we had left the ground.\n</ld-typo>\n\n<!-- CSS component -->\n\n<p class=\"ld-typo\">\n  Almost before we knew it, we had left the ground.\n</p>\n{% endexample %}\n\n### Paragraphs\n\n{% example '{ \"stacked\": true }' %}\n<ld-typo variant=\"body-xs\">\n  <b>XS</b>: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</ld-typo>\n\n<ld-typo variant=\"body-s\">\n  <b>S</b>: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</ld-typo>\n\n<ld-typo variant=\"body-m\">\n  <b>M</b>: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</ld-typo>\n\n<ld-typo variant=\"body-l\">\n  <b>L</b>: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</ld-typo>\n\n<ld-typo variant=\"body-xl\">\n  <b>XL</b>: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</ld-typo>\n\n<!-- CSS component -->\n\n<p class=\"ld-typo--body-xs\">\n  <b>XS</b>: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</p>\n\n<p class=\"ld-typo--body-s\">\n  <b>S</b>: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</p>\n\n<p class=\"ld-typo--body-m\">\n  <b>M</b>: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</p>\n\n<p class=\"ld-typo--body-l\">\n  <b>L</b>: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</p>\n\n<p class=\"ld-typo--body-xl\">\n  <b>XL</b>: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</p>\n{% endexample %}\n\n### Labels\n\n{% example '{ \"stacked\": true }' %}\n<ld-typo variant=\"label-s\">\n  Almost before we knew it, we had left the ground.\n</ld-typo>\n\n<ld-typo variant=\"label-m\">\n  Almost before we knew it, we had left the ground.\n</ld-typo>\n\n<!-- CSS component -->\n\n<p class=\"ld-typo--label-s\">\n  Almost before we knew it, we had left the ground.\n</p>\n\n<p class=\"ld-typo--label-m\">\n  Almost before we knew it, we had left the ground.\n</p>\n{% endexample %}\n\n### Captions\n\n{% example '{ \"stacked\": true }' %}\n<ld-typo variant=\"cap-m\">\n  Almost before we knew it, we had left the ground.\n</ld-typo>\n\n<ld-typo variant=\"cap-l\">\n  Almost before we knew it, we had left the ground.\n</ld-typo>\n\n<!-- CSS component -->\n\n<p class=\"ld-typo--cap-m\">\n  Almost before we knew it, we had left the ground.\n</p>\n\n<p class=\"ld-typo--cap-l\">\n  Almost before we knew it, we had left the ground.\n</p>\n{% endexample %}\n\n### Headings\n\nHeadings are used as an introduction into a topic or a content section and for visual and semantic differentiation between content blocks.\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  A common navigation technique for users of screen reading software is jumping from heading to heading to quickly determine the content of the page. Because of this, it is important to not skip one or more heading levels. Doing so may create confusion, as the person navigating this way may be left wondering where the missing heading is.\n  <br />\n  If you really must place headings in a way that they are visually not following a semantic hirarchicy, use the <code>variant</code> property for visually styling the heading according to the design given, while still applying correct semantical heading levels using the <code>level</code> prop. \n</ld-notice>\n\n{% example '{ \"stacked\": true }' %}\n<ld-typo variant=\"h1\">\n  Almost before we knew it, we had left the ground.\n</ld-typo>\n\n<ld-typo variant=\"h2\">\n  Almost before we knew it, we had left the ground.\n</ld-typo>\n\n<ld-typo variant=\"h3\">\n  Almost before we knew it, we had left the ground.\n</ld-typo>\n\n<ld-typo variant=\"h4\">\n  Almost before we knew it, we had left the ground.\n</ld-typo>\n\n<ld-typo variant=\"h5\">\n  Almost before we knew it, we had left the ground.\n</ld-typo>\n\n<ld-typo variant=\"h6\">\n  Almost before we knew it, we had left the ground.\n</ld-typo>\n\n<!-- CSS component -->\n\n<h1 class=\"ld-typo--h1\">\n  Almost before we knew it, we had left the ground.\n</h1>\n\n<h2 class=\"ld-typo--h2\">\n  Almost before we knew it, we had left the ground.\n</h2>\n\n<h3 class=\"ld-typo--h3\">\n  Almost before we knew it, we had left the ground.\n</h3>\n\n<h4 class=\"ld-typo--h4\">\n  Almost before we knew it, we had left the ground.\n</h4>\n\n<h5 class=\"ld-typo--h5\">\n  Almost before we knew it, we had left the ground.\n</h5>\n\n<h6 class=\"ld-typo--h6\">\n  Almost before we knew it, we had left the ground.\n</h6>\n{% endexample %}\n\n### Branding variants `b*`\n\n`b*` headings should be only a couple of words long.\n\n{% example '{ \"stacked\": true }' %}\n<ld-typo variant=\"b1\">\n  Lorem ipsum\n</ld-typo>\n\n<ld-typo variant=\"b2\">\n  Lorem ipsum\n</ld-typo>\n\n<ld-typo variant=\"b3\">\n  Lorem ipsum\n</ld-typo>\n\n<ld-typo variant=\"b4\">\n  Lorem ipsum\n</ld-typo>\n\n<ld-typo variant=\"b5\">\n  Lorem ipsum\n</ld-typo>\n\n<ld-typo variant=\"b6\">\n  Lorem ipsum\n</ld-typo>\n\n<!-- CSS component -->\n\n<h1 class=\"ld-typo ld-typo--b1\" aria-label=\"Lorem ipsum\">\n  Lorem ipsum\n</h1>\n\n<h2 class=\"ld-typo ld-typo--b2\" aria-label=\"Lorem ipsum\">\n  Lorem ipsum\n</h2>\n\n<h3 class=\"ld-typo ld-typo--b3\" aria-label=\"Lorem ipsum\">\n  Lorem ipsum\n</h3>\n\n<h4 class=\"ld-typo ld-typo--b4\" aria-label=\"Lorem ipsum\">\n  Lorem ipsum\n</h4>\n\n<h5 class=\"ld-typo ld-typo--b5\" aria-label=\"Lorem ipsum\">\n  Lorem ipsum\n</h5>\n\n<h6 class=\"ld-typo ld-typo--b6\" aria-label=\"Lorem ipsum\">\n  Lorem ipsum\n</h6>\n{% endexample %}\n\n### Large heading variants `xh*`\n\n{% example '{ \"stacked\": true }' %}\n<ld-typo variant=\"xh1\">\n  Almost before we knew it, we had left the ground.\n</ld-typo>\n\n<ld-typo variant=\"xh2\">\n  Almost before we knew it, we had left the ground.\n</ld-typo>\n\n<ld-typo variant=\"xh3\">\n  Almost before we knew it, we had left the ground.\n</ld-typo>\n\n<ld-typo variant=\"xh4\">\n  Almost before we knew it, we had left the ground.\n</ld-typo>\n\n<ld-typo variant=\"xh5\">\n  Almost before we knew it, we had left the ground.\n</ld-typo>\n\n<ld-typo variant=\"xh6\">\n  Almost before we knew it, we had left the ground.\n</ld-typo>\n\n<!-- CSS component -->\n\n<h1 class=\"ld-typo--xh1\">\n  Almost before we knew it, we had left the ground.\n</h1>\n\n<h2 class=\"ld-typo--xh2\">\n  Almost before we knew it, we had left the ground.\n</h2>\n\n<h3 class=\"ld-typo--xh3\">\n  Almost before we knew it, we had left the ground.\n</h3>\n\n<h3 class=\"ld-typo--xh4\">\n  Almost before we knew it, we had left the ground.\n</h3>\n\n<h3 class=\"ld-typo--xh5\">\n  Almost before we knew it, we had left the ground.\n</h3>\n\n<h3 class=\"ld-typo--xh6\">\n  Almost before we knew it, we had left the ground.\n</h3>\n{% endexample %}\n\n### Large branding variants `xb*`\n\n`xb*` headings should be only a couple of words long.\n\n{% example '{ \"stacked\": true }' %}\n<ld-typo variant=\"xb1\">\n  Lipsum\n</ld-typo>\n\n<ld-typo variant=\"xb2\">\n  Lipsum\n</ld-typo>\n\n<ld-typo variant=\"xb3\">\n  Lipsum\n</ld-typo>\n\n<!-- CSS component -->\n\n<h1 class=\"ld-typo ld-typo--xb1\" aria-label=\"Lorem ipsum\">\n  Lipsum\n</h1>\n\n<h2 class=\"ld-typo ld-typo--xb2\" aria-label=\"Lorem ipsum\">\n  Lipsum\n</h2>\n\n<h3 class=\"ld-typo ld-typo--xb3\" aria-label=\"Lorem ipsum\">\n  Lipsum\n</h3>\n{% endexample %}\n\n### Custom tag\n\n`xb*` headings should be only a couple of words long.\n\n{% example '{ \"stacked\": true }' %}\n<ld-typo variant=\"body-m\" tag=\"h1\">\n  I'm actually a level 1 heading\n</ld-typo>\n\n<ld-typo variant=\"b5\" tag=\"p\">\n  I'm actually a paragraph\n</ld-typo>\n\n<!-- CSS component -->\n\n<h1 class=\"ld-typo--body-m\">\n  I'm actually a level 1 heading\n</h1>\n\n<p class=\"ld-typo ld-typo--b5\" aria-label=\"I'm actually a paragraph\">\n  I'm actually a paragraph\n</p>\n\n{% endexample %}\n\n## Colors\n\nYou may have noticed that all `b*` and `xb*` variants use a color given by the current theme, while all other variants inherit their color. While this is the default behaviour, you can still apply a different color on both types of headings. This may be usefull, if, for instance, you need to display a `b1` heading in \"vibrant yellow\" on top of a background using a \"rich color\".\n\n<ld-notice headline=\"Note\" mode=\"warning\">\n  With great power comes great responsibility. Make sure you follow the brand guidelines. Especially make sure that the text remains readable at all times. Check the text for accessibility issues, such as <a href=\"https://www.w3.org/TR/WCAG21/#contrast-minimum\" rel=\"noreferrer noopener\" target=\"_blank\">insufficiant contrast</a>.\n</ld-notice>\n\nHere are some examples on how you can apply different colors on headings:\n\n{% example '{ \"stacked\": true }' %}\n<style>\n.custom-color { color: var(--ld-col-vm); }\n</style>\n\n<ld-typo variant=\"b1\" class=\"custom-color\">\n  Lorem ipsum\n</ld-typo>\n\n<ld-typo variant=\"h1\" style=\"color: var(--ld-col-vc-600)\">\n  Almost before we knew it, we had left the ground.\n</ld-typo>\n\n<!-- CSS component -->\n\n<style>\n.custom-color { color: var(--ld-col-vm); }\n</style>\n\n<h1 class=\"ld-typo ld-typo--b1 custom-color\" aria-label=\"Lorem ipsum\">\n  Lorem ipsum\n</h1>\n\n<h1 class=\"ld-typo--h1\" style=\"color: var(--ld-col-vc-600)\">\n  Almost before we knew it, we had left the ground.\n</h1>\n\n{% endexample %}\n",
      "docs": "---\neleventyNavigation:\n  key: Typography\n  parent: Components\nlayout: layout.njk\ntitle: Typography\npermalink: components/ld-typo/\n---\n\n<link rel=\"stylesheet\" href=\"css_components/ld-typo.css\">",
      "docsTags": [
        {
          "name": "virtualProp",
          "text": "ref - reference to component"
        },
        {
          "name": "virtualProp",
          "text": "{string | number} key - for tracking the node's identity when working with lists"
        },
        {
          "name": "part",
          "text": "tag - Actual tag"
        }
      ],
      "usage": {},
      "props": [
        {
          "name": "ariaLabel",
          "type": "string",
          "mutable": false,
          "attr": "aria-label",
          "reflectToAttr": false,
          "docs": "Since b* and xb* variants are uppercase, screen readers need to be served a\n(non-uppercase) aria-label (otherwise they will read out the heading letter by letter).\nIf you're using a b* or xb* variant, an aria-label will be\nset automatically on the element. The component will use the inner HTML for the\nlabel implicitly. If you want to set an aria-label explicitly (such as when you have\ninner HTML that should not be part of the label), you can use this property.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "key",
          "type": "string | number",
          "mutable": false,
          "attr": "key",
          "reflectToAttr": false,
          "docs": "for tracking the node's identity when working with lists",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "ref",
          "type": "any",
          "mutable": false,
          "attr": "ref",
          "reflectToAttr": false,
          "docs": "reference to component",
          "docsTags": [],
          "values": [
            {
              "type": "any"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "tag",
          "type": "string",
          "mutable": false,
          "attr": "tag",
          "reflectToAttr": false,
          "docs": "The rendered HTML tag. Overrides tag inferred from the variant.",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "variant",
          "type": "\"body-xs\" | \"body-s\" | \"body-m\" | \"body-l\" | \"body-xl\" | \"cap-m\" | \"cap-l\" | \"label-s\" | \"label-m\" | \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"b1\" | \"b2\" | \"b3\" | \"b4\" | \"b5\" | \"b6\" | \"xb1\" | \"xb2\" | \"xb3\" | \"xh1\" | \"xh2\" | \"xh3\" | \"xh4\" | \"xh5\" | \"xh6\"",
          "mutable": true,
          "attr": "variant",
          "reflectToAttr": false,
          "docs": "The font style. Every variant has a default tag that it renders with.",
          "docsTags": [],
          "default": "'body-m'",
          "values": [
            {
              "value": "body-xs",
              "type": "string"
            },
            {
              "value": "body-s",
              "type": "string"
            },
            {
              "value": "body-m",
              "type": "string"
            },
            {
              "value": "body-l",
              "type": "string"
            },
            {
              "value": "body-xl",
              "type": "string"
            },
            {
              "value": "cap-m",
              "type": "string"
            },
            {
              "value": "cap-l",
              "type": "string"
            },
            {
              "value": "label-s",
              "type": "string"
            },
            {
              "value": "label-m",
              "type": "string"
            },
            {
              "value": "h1",
              "type": "string"
            },
            {
              "value": "h2",
              "type": "string"
            },
            {
              "value": "h3",
              "type": "string"
            },
            {
              "value": "h4",
              "type": "string"
            },
            {
              "value": "h5",
              "type": "string"
            },
            {
              "value": "h6",
              "type": "string"
            },
            {
              "value": "b1",
              "type": "string"
            },
            {
              "value": "b2",
              "type": "string"
            },
            {
              "value": "b3",
              "type": "string"
            },
            {
              "value": "b4",
              "type": "string"
            },
            {
              "value": "b5",
              "type": "string"
            },
            {
              "value": "b6",
              "type": "string"
            },
            {
              "value": "xb1",
              "type": "string"
            },
            {
              "value": "xb2",
              "type": "string"
            },
            {
              "value": "xb3",
              "type": "string"
            },
            {
              "value": "xh1",
              "type": "string"
            },
            {
              "value": "xh2",
              "type": "string"
            },
            {
              "value": "xh3",
              "type": "string"
            },
            {
              "value": "xh4",
              "type": "string"
            },
            {
              "value": "xh5",
              "type": "string"
            },
            {
              "value": "xh6",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "tag",
          "docs": "Actual tag"
        }
      ],
      "dependents": [
        "ld-header",
        "ld-notice",
        "ld-sidenav-header",
        "ld-sidenav-heading",
        "ld-sidenav-navitem",
        "ld-sidenav-toggle-outside"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "ld-header": [
          "ld-typo"
        ],
        "ld-notice": [
          "ld-typo"
        ],
        "ld-sidenav-header": [
          "ld-typo"
        ],
        "ld-sidenav-heading": [
          "ld-typo"
        ],
        "ld-sidenav-navitem": [
          "ld-typo"
        ],
        "ld-sidenav-toggle-outside": [
          "ld-typo"
        ]
      }
    }
  ]
}