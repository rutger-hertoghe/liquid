'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-9117e53d.js');

const ldBreadcrumbsCss = ".ld-breadcrumbs,:host{--ld-crumb-icon-gap:0.5em;--ld-crumb-gap:0.6em;line-height:1.5}.ld-breadcrumbs>ol{display:flex;flex-wrap:wrap;list-style:none;margin:0;padding:0}";

const LdBreadcrumbs = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.updateCurrent = () => {
      const crumbs = this.el.querySelectorAll('ld-crumb');
      crumbs.forEach((crumb) => {
        crumb.current = undefined;
      });
      crumbs[crumbs.length - 1].current = true;
    };
  }
  componentDidLoad() {
    this.observer = new MutationObserver(this.updateCurrent);
    this.observer.observe(this.el, {
      subtree: true,
      childList: true,
      attributes: false,
    });
    this.updateCurrent();
  }
  disconnectedCallback() {
    if (this.observer)
      this.observer.disconnect();
  }
  render() {
    return (index.h("nav", { "aria-label": "Breadcrumbs", class: "ld-breadcrumbs" }, index.h("ol", { class: "ld-breadcrumbs__list", part: "list" }, index.h("slot", null))));
  }
  get el() { return index.getElement(this); }
};
LdBreadcrumbs.style = ldBreadcrumbsCss;

exports.ld_breadcrumbs = LdBreadcrumbs;
