import { Component, h, Host, Prop } from '@stencil/core';
import { getClassNames } from '../../utils/getClassNames';
import { getLdAssetPath } from '../../utils/getLdAssetPath';
/**
 * @virtualProp ref - reference to component
 * @virtualProp {string | number} key - for tracking the node's identity when working with lists
 * @part layer - Element containing the cells pattern
 * @part secondary-layer - Element containing the second cells pattern
 */
export class LdBgCells {
  constructor() {
    /** Cells pattern */
    this.type = 'hexagon';
    /** Use 3 color layers */
    this.threeLayers = false;
  }
  render() {
    // Handle aliases (for backward compatibility).
    let cellType = this.type;
    if (cellType === 'qa-x2f-qc')
      cellType = 'supelco';
    if (cellType === 'functional')
      cellType = 'f';
    if (cellType === 'technical')
      cellType = 't';
    if (cellType === 'plastic')
      cellType = 'tile';
    if (cellType === 'synthetic')
      cellType = 'hexagon';
    if (cellType === 'organic')
      cellType = 'o';
    const assetPath = getLdAssetPath(`./assets/${cellType}-cell.svg`);
    return (h(Host, { class: getClassNames([
        'ld-bg-cells',
        `ld-bg-cells--${cellType}`,
        this.threeLayers && 'ld-bg-cells--three-layers',
      ]) },
      h("div", { class: "ld-bg-cells__layer", part: "layer", style: {
          '--ld-bg-cells-image': `url(${assetPath})`,
        } }),
      h("div", { class: "ld-bg-cells__secondary-layer", part: "secondary-layer", style: {
          '--ld-bg-cells-image': `url(${assetPath})`,
        } })));
  }
  static get is() { return "ld-bg-cells"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["ld-bg-cells.css"]
  }; }
  static get styleUrls() { return {
    "$": ["ld-bg-cells.css"]
  }; }
  static get assetsDirs() { return ["assets"]; }
  static get properties() { return {
    "type": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "CellType",
        "resolved": "\"bioreliance\" | \"f\" | \"functional\" | \"hexagon\" | \"millipore\" | \"milliq\" | \"o\" | \"organic\" | \"plastic\" | \"qa-x2f-qc\" | \"safc\" | \"sigma-aldrich\" | \"supelco\" | \"synthetic\" | \"t\" | \"technical\" | \"tile\"",
        "references": {
          "CellType": {
            "location": "local"
          }
        }
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Cells pattern"
      },
      "attribute": "type",
      "reflect": false,
      "defaultValue": "'hexagon'"
    },
    "threeLayers": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Use 3 color layers"
      },
      "attribute": "three-layers",
      "reflect": false,
      "defaultValue": "false"
    }
  }; }
}
