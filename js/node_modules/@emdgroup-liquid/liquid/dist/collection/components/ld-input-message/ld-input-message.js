import { Component, h, Prop, Host } from '@stencil/core';
/**
 * @virtualProp ref - reference to component
 * @virtualProp {string | number} key - for tracking the node's identity when working with lists
 * @part icon - Image tag used for the icon
 */
export class LdInputMessage {
  constructor() {
    /** Input message mode. */
    this.mode = 'error';
  }
  render() {
    return (h(Host, { class: `ld-input-message ld-input-message--${this.mode}` },
      h("ld-icon", { class: "ld-input-message__icon", name: 'ld-input-message-' + this.mode, part: "icon", size: "sm" }),
      h("span", { "aria-live": "assertive" },
        h("slot", null))));
  }
  static get is() { return "ld-input-message"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["ld-input-message.css"]
  }; }
  static get styleUrls() { return {
    "$": ["ld-input-message.css"]
  }; }
  static get assetsDirs() { return ["assets"]; }
  static get properties() { return {
    "mode": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "'error' | 'info' | 'valid'",
        "resolved": "\"error\" | \"info\" | \"valid\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Input message mode."
      },
      "attribute": "mode",
      "reflect": false,
      "defaultValue": "'error'"
    }
  }; }
}
