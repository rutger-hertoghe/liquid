declare const join: any;
declare const plugin: any;
declare let designTokens: DesignTokens;
declare type Theme = Record<string, string> & {
  default?: boolean;
};
declare type Typo = {
  fontFamily: string;
  fontSize: string;
  lineHeight: string;
};
declare type DesignTokens = {
  borderRadii: Record<string, string>;
  colors: Record<string, string>;
  shadows: Record<string, string>;
  spacings: Record<string, string>;
  themes: Record<string, Theme>;
  typography: Record<string, Typo>;
};
declare type TailwindColorObject = {
  [key: string]: TailwindColorObject | string;
};
declare const colors: {
  thm: {};
};
declare const createNestedThemeColorFromFlat: (key: string, colorObject: TailwindColorObject, colorTokenReference?: string) => void;
declare const typography: {};
declare const fontSize: {};
declare const typoTokenEntries: [string, Typo][];
declare const bodyFontFamily: string;
declare const nonBodyTypoEntry: [string, Typo];
declare const fontFamily: {
  body: string[];
  display: string[];
};
declare const spacing: {};
declare const preset: {
  theme: {
    colors: {
      thm: {};
    };
    borderRadius: {
      none: string;
    };
    boxShadow: Record<string, string>;
    dropShadow: Record<string, string>;
    fontSize: {};
    fontFamily: {
      body: string[];
      display: string[];
    };
    extend: {
      spacing: {};
    };
  };
  plugins: any[];
  corePlugins: {};
};
