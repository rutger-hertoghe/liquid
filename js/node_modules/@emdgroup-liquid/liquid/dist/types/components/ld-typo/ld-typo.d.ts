/**
 * @virtualProp ref - reference to component
 * @virtualProp {string | number} key - for tracking the node's identity when working with lists
 * @part tag - Actual tag
 */
export declare class LdTypo implements ClonesAttributes {
  el: HTMLElement;
  private attributesObserver;
  private root;
  /** The rendered HTML tag. Overrides tag inferred from the variant. */
  tag: string;
  /** The font style. Every variant has a default tag that it renders with. */
  variant: 'body-xs' | 'body-s' | 'body-m' | 'body-l' | 'body-xl' | 'cap-m' | 'cap-l' | 'label-s' | 'label-m' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'b1' | 'b2' | 'b3' | 'b4' | 'b5' | 'b6' | 'xb1' | 'xb2' | 'xb3' | 'xh1' | 'xh2' | 'xh3' | 'xh4' | 'xh5' | 'xh6';
  /**
   * Since b* and xb* variants are uppercase, screen readers need to be served a
   * (non-uppercase) aria-label (otherwise they will read out the heading letter by letter).
   * If you're using a b* or xb* variant, an aria-label will be
   * set automatically on the element. The component will use the inner HTML for the
   * label implicitly. If you want to set an aria-label explicitly (such as when you have
   * inner HTML that should not be part of the label), you can use this property.
   */
  ariaLabel: string;
  clonedAttributes: any;
  private applyAriaLabel;
  private getDefaultTag;
  componentWillLoad(): void;
  componentDidRender(): void;
  disconnectedCallback(): void;
  render(): any;
}
