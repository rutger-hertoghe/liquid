import { EventEmitter } from '../../../stencil-public-runtime';
/** @internal **/
export declare class LdSelectPopper {
  el: HTMLElement;
  /** A watcher is applied to the CSS class in order to be able to react to tether changes. */
  class: string;
  /** Popper is visually detached from the select trigger element (there's a gap between the two). */
  detached: boolean;
  /** Indicates if select element is expanded. */
  expanded: boolean;
  /** Set this property to `true` in order to enable an input field for filtering options. */
  filter: boolean;
  /** The filter input placeholder. */
  filterPlaceholder: string;
  /** Attaches CSS class to the select popper element. */
  popperClass?: string;
  /** Size of the select trigger button (required for applying the correct shadow height). */
  size?: 'sm' | 'lg';
  /** Since the select popper is located outside the select element, the theme needs to be applied as a prop. */
  theme: string;
  isPinned: boolean;
  shadowHeight: string;
  /** Emitted on filter change with the filter input value. */
  ldselectfilterchange: EventEmitter<string>;
  private handleFilterInput;
  updatePinnedState(): void;
  updatePopperTheme(newValue: string, oldValue: string): void;
  /**
   * Focuses the tab
   */
  updateShadowHeight(height: string): Promise<void>;
  componentWillLoad(): void;
  render(): any;
}
