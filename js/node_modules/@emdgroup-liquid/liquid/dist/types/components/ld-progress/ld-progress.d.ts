/**
 * @virtualProp ref - reference to component
 * @virtualProp {string | number} key - for tracking the node's identity when working with lists
 */
export declare class LdProgress {
  /**
   * Defines the string value or identifies the element (or elements)
   * that label the progressbar element providing an accessible name.
   */
  ariaLabeledby?: string;
  /**
   * Set to a decimal value representing the maximum value, and greater
   * than aria-valuemin. If not present, the default value is 100.
   */
  ariaValuemax: number;
  /**
   * Set to a decimal value representing the minimum value, and less
   * than aria-valuemax. If not present, the default value is 0.
   */
  ariaValuemin: number;
  /**
   * Only present and required if the value is not indeterminate.
   * Set to a decimal value between 0, or valuemin if present,
   * and aria-valuemax indicating the current value of the progress bar.
   */
  ariaValuenow?: number;
  /**
   * Assistive technologies often present the value of aria-valuenow
   * as a percentage. If this would not be accurate use this property
   * to make the progress bar value understandable.
   */
  ariaValuetext?: string;
  /**
   * Styles the progress bar in a way that it looks good on the
   * primary color of the current theme.
   */
  brandColor?: boolean;
  /** Used to show indeterminate or pending progress state. */
  pending?: boolean;
  /** Devides progress bar in multiple progress steps. */
  steps?: boolean;
  render(): any;
}
