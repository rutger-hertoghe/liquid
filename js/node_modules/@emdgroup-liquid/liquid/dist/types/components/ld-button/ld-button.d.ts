/**
 * @virtualProp ref - reference to component
 * @virtualProp {string | number} key - for tracking the node's identity when working with lists
 * @part button - Actual button or anchor element
 * @part progress-bar - Progress bar
 */
export declare class LdButton implements InnerFocusable, ClonesAttributes {
  el: HTMLElement;
  private button;
  private attributesObserver;
  /** Align text. */
  alignText?: 'left' | 'right';
  /** Automatically focus the form control when the page is loaded. */
  autofocus: boolean;
  /** Style the button so that it looks good on the current theme's primary color. */
  brandColor?: boolean;
  /** Disabled state of the button. */
  disabled?: boolean;
  /** Associates the control with a form element. */
  form?: string;
  /** Overrides the `action` attribute of the button's form owner. */
  formaction?: 'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain';
  /** Overrides the `enctype` attribute of the button's form owner. */
  formenctype?: string;
  /** Overrides the `method` attribute of the button's form owner. */
  formmethod?: 'get' | 'post';
  /** Overrides the `novalidate` attribute of the button's form owner. */
  formnovalidate?: boolean;
  /** Overrides the `target` attribute of the button's form owner. */
  formtarget?: '_blank' | '_parent' | '_self' | '_top';
  /**
   * Transforms the button to an anchor element.
   * See [mdn docs](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-href)
   * for more information on the `href` attribute.
   */
  href?: string;
  /** Justify content. */
  justifyContent?: 'start' | 'end' | 'between';
  /** Tab index of the button. */
  ldTabindex: number | undefined;
  /** Display mode. */
  mode?: 'highlight' | 'secondary' | 'ghost' | 'danger' | 'danger-secondary';
  /** Used to specify the name of the control. */
  name?: string;
  /** Displays a progress bar at the bottom of the button. */
  progress?: 'pending' | number;
  /** Size of the button. */
  size?: 'sm' | 'lg';
  /**
   * The `target` attributed can be used in conjunction with the `href` attribute.
   * See [mdn docs](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target)
   * for more information on the `target` attribute.
   */
  target?: '_blank' | '_self' | '_parent' | '_top';
  /** Specifies the default behavior of the button. */
  type: 'button' | 'reset' | 'submit';
  /** Defines the value associated with the button’s `name` when it’s submitted with the form data. */
  value?: string;
  clonedAttributes: any;
  iconOnly: boolean;
  /**
   * Sets focus on the button
   */
  focusInner(): Promise<void>;
  connectedCallback(): void;
  disconnectedCallback(): void;
  private clickHiddenButton;
  private handleClick;
  componentWillLoad(): void;
  render(): any;
}
