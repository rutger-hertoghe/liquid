/** @internal **/
export declare class LdSidenavScrollerInternal {
  el: HTMLElement;
  private sidenav;
  hasShadowBottom: boolean;
  hasShadowTop: boolean;
  needsHRBottom: boolean;
  needsHRTop: boolean;
  relative: boolean;
  sidenavClosable: boolean;
  sidenavCollapsed: boolean;
  handleSidenavCollapsedChange(ev: CustomEvent<{
    collapsed: boolean;
    fully: boolean;
  }>): void;
  handleSidenavBreakpointChange(ev: CustomEvent<boolean>): void;
  /**
   * Makes shadows either appear or disappear on top and bottom of the
   * scroll container, depending on the current scroll position.
   */
  updateShadows(): Promise<void>;
  /** Scrolls the scroll container to the top instantly. */
  scrollToTop(smoothly?: boolean): Promise<void>;
  componentWillLoad(): void;
  componentDidLoad(): void;
  render(): any;
}
