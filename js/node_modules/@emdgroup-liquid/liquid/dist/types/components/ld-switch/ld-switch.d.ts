import { EventEmitter } from '../../stencil-public-runtime';
/**
 * @virtualProp ref - reference to component
 * @virtualProp {string | number} key - for tracking the node's identity when working with lists
 * @part fieldset - Container wrapping the legent element and the slot
 * @part legend - The legend element
 */
export declare class LdSwitch implements InnerFocusable {
  el: HTMLElement;
  /** Size of the switch. */
  size?: 'sm' | 'md' | 'lg';
  /** Defines switch custom color */
  brandColor?: boolean;
  /** Defines a description of the contents of the switch component. */
  legend?: string;
  /** Automatically focus the form control when the page is loaded. */
  autofocus: boolean;
  /** Disabled state of the switch. */
  disabled: boolean;
  /** Make each switch item take up as little space as its content requires. */
  fitContent: boolean;
  /** Associates the control with a form element. */
  form?: string;
  /** Alternative disabled state that keeps element focusable */
  ariaDisabled: string;
  /** Used to specify the name of the control. */
  name?: string;
  /** The value is not editable. */
  readonly?: boolean;
  /** Set this property to `true` in order to mark the switch as required. */
  required: boolean;
  /** Tab index of the input. */
  ldTabindex: number | undefined;
  hasFocus: boolean;
  /** Emitted with the value of the selected switch item. */
  ldswitchchange: EventEmitter<string>;
  handleLdSwitchItemChange(ev: CustomEvent<boolean>): void;
  /** Sets focus on the radio button. */
  focusInner(): Promise<void>;
  private handleItemFocus;
  private handleFocus;
  private handleFocusout;
  updateSwitchItemProps(): void;
  componentWillLoad(): void;
  render(): any;
}
