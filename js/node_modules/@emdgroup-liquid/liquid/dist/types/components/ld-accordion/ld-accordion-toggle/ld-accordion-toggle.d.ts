import { EventEmitter } from '../../../stencil-public-runtime';
/**
 * @virtualProp ref - reference to component
 * @virtualProp {string | number} key - for tracking the node's identity when working with lists
 */
export declare class LdAccordionToggle implements InnerFocusable {
  el: HTMLElement;
  private btnRef;
  /** Disables the toggle. */
  disabled?: boolean;
  /**
   * Tag to be used for the toggle label in split mode.
   * This prop is especially usefull, if you want to place
   * your own focusable element inside the toggle label element.
   */
  labelTag: 'button' | 'div';
  /** Tab index of the toggle. */
  ldTabindex: number | undefined;
  /**
   * Split the toggle in two parts with the second part containing
   * the caret icon and being responsible for expanding / collapsing
   * the accordion panel.
   */
  split?: boolean;
  /** Used as aria-label value on the toggle trigger element. */
  toggleLabel: string;
  expanded: boolean;
  hasCustomIcon: boolean;
  /** Focuses the toggle */
  focusInner(): Promise<void>;
  /**
   * @internal
   * Updates expanded state.
   */
  setExpanded(expanded: boolean): Promise<void>;
  /** Emitted on click of the accordion toggle trigger. */
  ldaccordiontoggleclick: EventEmitter<undefined>;
  /** Emitted on click of the accordion toggle label. */
  ldaccordionlabelclick: EventEmitter<undefined>;
  private handleToggleClick;
  private handleLabelClick;
  componentWillLoad(): void;
  render(): any;
}
