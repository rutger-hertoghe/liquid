import { EventEmitter } from '../../stencil-public-runtime';
/**
 * @virtualProp ref - reference to component
 * @virtualProp {string | number} key - for tracking the node's identity when working with lists
 * @part dialog - Actual `dialog` element
 * @part content - `div` element wrapping the default slot
 * @part footer - `footer` element
 * @part header - `header` element
 */
export declare class LdModal {
  el: HTMLElement;
  private dialogRef;
  /** The modal is cancelable by default. However, you can change this using this prop. */
  cancelable: boolean;
  /** Indicates that the modal dialog is active and can be interacted with. */
  open?: boolean;
  /** Use a blurry backdrop. */
  blurryBackdrop: boolean;
  /** Emitted when modal is opening (before transition). */
  ldmodalopening: EventEmitter;
  /** Emitted when modal has opened (after transition). */
  ldmodalopened: EventEmitter;
  /** Emitted when modal is closing (before transition). */
  ldmodalclosing: EventEmitter;
  /** Emitted when modal has closed (after transition). */
  ldmodalclosed: EventEmitter;
  /** Opens the modal dialog. */
  showModal(): Promise<void>;
  /** Closes the modal dialog. */
  close(): Promise<void>;
  handleKeyDown(ev: KeyboardEvent): void;
  onOpenChange(open: boolean): void;
  private handleClose;
  private handleCancel;
  private handleClick;
  private handleTransitionEnd;
  componentDidLoad(): void;
  disconnectedCallback(): void;
  render(): any;
}
