import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';

const ldTabpanelShadowCss = "";

const LdTabpanel$1 = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
  }
  render() {
    return (h(Host, { role: "tabpanel", class: "ld-tabpanel", tabindex: "-1" }, h("slot", null)));
  }
  static get style() { return ldTabpanelShadowCss; }
}, [1, "ld-tabpanel"]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["ld-tabpanel"];
  components.forEach(tagName => { switch (tagName) {
    case "ld-tabpanel":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, LdTabpanel$1);
      }
      break;
  } });
}
defineCustomElement$1();

const LdTabpanel = LdTabpanel$1;
const defineCustomElement = defineCustomElement$1;

export { LdTabpanel, defineCustomElement };
