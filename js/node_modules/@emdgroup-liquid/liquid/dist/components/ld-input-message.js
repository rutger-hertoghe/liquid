import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';
import { d as defineCustomElement$2 } from './ld-icon2.js';

const ldInputMessageCss = ".ld-input-message,:host{--ld-input-message-valid-text-col:var(--ld-thm-success);--ld-input-message-error-text-col:var(--ld-thm-error);align-items:baseline;display:inline-flex;font:var(--ld-typo-body-s);line-height:1.5}.ld-input-message--info .ld-input-message__icon,:host(.ld-input-message--info) .ld-input-message__icon{--ld-icon-secondary-col:var(--ld-col-neutral-900);color:var(--ld-thm-warning)}.ld-input-message--valid,:host(.ld-input-message--valid){color:var(--ld-input-message-valid-text-col)}.ld-input-message--error,:host(.ld-input-message--error){color:var(--ld-input-message-error-text-col)}.ld-input-message__icon{flex-shrink:0;margin-right:var(--ld-sp-6);margin-top:var(--ld-sp-2);transform:translateY(var(--ld-sp-2))}";

const LdInputMessage$1 = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    /** Input message mode. */
    this.mode = 'error';
  }
  render() {
    return (h(Host, { class: `ld-input-message ld-input-message--${this.mode}` }, h("ld-icon", { class: "ld-input-message__icon", name: 'ld-input-message-' + this.mode, part: "icon", size: "sm" }), h("span", { "aria-live": "assertive" }, h("slot", null))));
  }
  static get assetsDirs() { return ["assets"]; }
  static get style() { return ldInputMessageCss; }
}, [1, "ld-input-message", {
    "mode": [1]
  }]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["ld-input-message", "ld-icon"];
  components.forEach(tagName => { switch (tagName) {
    case "ld-input-message":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, LdInputMessage$1);
      }
      break;
    case "ld-icon":
      if (!customElements.get(tagName)) {
        defineCustomElement$2();
      }
      break;
  } });
}
defineCustomElement$1();

const LdInputMessage = LdInputMessage$1;
const defineCustomElement = defineCustomElement$1;

export { LdInputMessage, defineCustomElement };
