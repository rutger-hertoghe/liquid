"use strict";(self.webpackChunkjs=self.webpackChunkjs||[]).push([[1554],{1554:(e,t,l)=>{l.r(t),l.d(t,{ld_tabs:()=>s});var r=l(8815);let i=0;const s=class{constructor(e){(0,r.r)(this,e),this.ldtabchange=(0,r.c)(this,"ldtabchange",7),this.idDescriber="ld-tabs-"+i++,this.handleLdtabselect=e=>{e.stopImmediatePropagation();const t=e.target;this.updateTabs(t),this.updateTabPanels(t.id),this.ldtabchange.emit(t.id)}}updateTabs(e){var t;null===(t=Array.from(this.el.querySelectorAll("ld-tab")).find((e=>e.hasAttribute("selected"))))||void 0===t||t.removeAttribute("selected"),e.scrollIntoView({behavior:"smooth",block:"nearest",inline:"center"})}updateTabPanels(e){var t,l;const r=Array.from(this.el.querySelectorAll("ld-tabpanel"));null===(t=r.find((e=>!e.hasAttribute("hidden"))))||void 0===t||t.setAttribute("hidden",void 0),null===(l=r.find((t=>t.getAttribute("aria-labelledby")===e)))||void 0===l||l.removeAttribute("hidden")}async switchTab(e){const t="number"==typeof e?this.el.querySelectorAll("ld-tab")[e]:this.el.querySelector(`ld-tab#${e}`);if(!t)throw new Error(`Could not find ld-tab with ${"number"==typeof e?"index":"id"} ${"number"==typeof e?e:`"${e}"`}.`);t.select()}componentDidRender(){let e;this.el.querySelectorAll("ld-tab").forEach(((t,l)=>{t.id=`${this.idDescriber}-tab-${l}`,t.selected&&(e=l)})),this.el.querySelectorAll("ld-tabpanel").forEach(((t,l)=>{t.setAttribute("aria-labelledby",`${this.idDescriber}-tab-${l}`),e===l?t.removeAttribute("hidden"):t.setAttribute("hidden","true")}))}render(){return(0,r.h)(r.H,{onLdtabselect:this.handleLdtabselect,class:"ld-tabs"},(0,r.h)("slot",null))}get el(){return(0,r.g)(this)}};s.style=""}}]);